{
  HdfsOrcDataSource orcDataSource;
  try {
    FileSystem fileSystem=path.getFileSystem(configuration);
    long size=fileSystem.getFileStatus(path).getLen();
    FSDataInputStream inputStream=fileSystem.open(path);
    orcDataSource=new HdfsOrcDataSource(path.toString(),inputStream,size);
  }
 catch (  Exception e) {
    throw Throwables.propagate(e);
  }
  try {
    OrcReader reader=new OrcReader(orcDataSource,metadataReader,typeManager);
    OrcRecordReader recordReader=reader.createRecordReader(start,length,columns,tupleDomain,hiveStorageTimeZone,DateTimeZone.forID(session.getTimeZoneKey().getId()));
    return new OrcPageSource(recordReader,orcDataSource,partitionKeys,columns,hiveStorageTimeZone,typeManager);
  }
 catch (  Exception e) {
    try {
      orcDataSource.close();
    }
 catch (    IOException ignored) {
    }
    throw Throwables.propagate(e);
  }
}
