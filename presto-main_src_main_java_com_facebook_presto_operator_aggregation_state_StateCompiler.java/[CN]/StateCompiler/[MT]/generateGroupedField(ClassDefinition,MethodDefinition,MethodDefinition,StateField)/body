{
  Class<?> bigArrayType=getBigArrayType(stateField.getType());
  FieldDefinition field=definition.declareField(a(PRIVATE),UPPER_CAMEL.to(LOWER_CAMEL,stateField.getName()) + "Values",bigArrayType);
  MethodDefinition getter=definition.declareMethod(a(PUBLIC),stateField.getGetterName(),type(stateField.getType()));
  getter.getBody().append(getter.getThis().getField(field).invoke("get",stateField.getType(),getter.getThis().invoke("getGroupId",long.class)).ret());
  Parameter value=arg("value",stateField.getType());
  MethodDefinition setter=definition.declareMethod(a(PUBLIC),stateField.getSetterName(),type(void.class),value);
  setter.getBody().append(setter.getThis().getField(field).invoke("set",void.class,setter.getThis().invoke("getGroupId",long.class),value)).ret();
  Scope ensureCapacityScope=ensureCapacity.getScope();
  ensureCapacity.getBody().append(ensureCapacity.getThis().getField(field).invoke("ensureCapacity",void.class,ensureCapacityScope.getVariable("size")));
  constructor.getBody().append(constructor.getThis().setField(field,newInstance(field.getType(),stateField.initialValueExpression())));
  return field;
}
