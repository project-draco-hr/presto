{
  CompilerContext compilerContext=new CompilerContext(null);
  Block body=definition.declareMethod(compilerContext,a(PUBLIC),"getSerializedType",type(Type.class)).getBody();
  Class<?> type;
  if (fields.size() > 1) {
    type=VarcharType.class;
  }
 else {
    Class<?> stackType=fields.get(0).getType();
    if (stackType == long.class) {
      type=BigintType.class;
    }
 else     if (stackType == double.class) {
      type=DoubleType.class;
    }
 else     if (stackType == boolean.class) {
      type=BooleanType.class;
    }
 else     if (stackType == byte.class) {
      type=BigintType.class;
    }
 else     if (stackType == Slice.class) {
      type=VarcharType.class;
    }
 else {
      throw new IllegalArgumentException("Unsupported type: " + stackType);
    }
  }
  body.comment("return %s.getInstance()",type.getSimpleName()).invokeStatic(type,"getInstance",type).retObject();
}
