{
  ClassDefinition definition=new ClassDefinition(new CompilerContext(null),a(PUBLIC,FINAL),typeFromPathName("Single" + clazz.getSimpleName() + "_"+ CLASS_ID.incrementAndGet()),type(AbstractAccumulatorState.class),type(clazz));
  Block constructor=definition.declareConstructor(new CompilerContext(null),a(PUBLIC)).getBody().pushThis().invokeConstructor(AbstractAccumulatorState.class);
  List<StateField> fields=enumerateFields(clazz);
  checkInterface(clazz,fields);
  for (  StateField field : fields) {
    generateField(definition,constructor,field);
  }
  constructor.ret();
  return defineClass(definition,clazz,classLoader);
}
