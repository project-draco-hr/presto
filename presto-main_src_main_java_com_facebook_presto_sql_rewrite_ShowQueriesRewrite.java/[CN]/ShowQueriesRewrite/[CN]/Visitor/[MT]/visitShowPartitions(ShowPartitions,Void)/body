{
  QualifiedObjectName table=createQualifiedObjectName(session,showPartitions,showPartitions.getTable());
  Optional<TableHandle> tableHandle=metadata.getTableHandle(session,table);
  if (!tableHandle.isPresent()) {
    throw new SemanticException(MISSING_TABLE,showPartitions,"Table '%s' does not exist",table);
  }
  List<TableLayoutResult> layouts=metadata.getLayouts(session,tableHandle.get(),Constraint.alwaysTrue(),Optional.empty());
  if (layouts.size() != 1) {
    throw new SemanticException(NOT_SUPPORTED,showPartitions,"Table does not have exactly one layout: %s",table);
  }
  TableLayout layout=getOnlyElement(layouts).getLayout();
  if (!layout.getDiscretePredicates().isPresent()) {
    throw new SemanticException(NOT_SUPPORTED,showPartitions,"Table does not have partition columns: %s",table);
  }
  List<ColumnHandle> partitionColumns=layout.getDiscretePredicates().get().getColumns();
  ImmutableList.Builder<SelectItem> selectList=ImmutableList.builder();
  ImmutableList.Builder<SelectItem> wrappedList=ImmutableList.builder();
  selectList.add(unaliasedName("partition_number"));
  for (  ColumnHandle columnHandle : partitionColumns) {
    ColumnMetadata column=metadata.getColumnMetadata(session,tableHandle.get(),columnHandle);
    Expression key=equal(nameReference("partition_key"),new StringLiteral(column.getName()));
    Expression value=caseWhen(key,nameReference("partition_value"));
    value=new Cast(value,column.getType().getTypeSignature().toString());
    Expression function=functionCall("max",value);
    selectList.add(new SingleColumn(function,column.getName()));
    wrappedList.add(unaliasedName(column.getName()));
  }
  Query query=simpleQuery(selectAll(selectList.build()),from(table.getCatalogName(),TABLE_INTERNAL_PARTITIONS),Optional.of(logicalAnd(equal(nameReference("table_schema"),new StringLiteral(table.getSchemaName())),equal(nameReference("table_name"),new StringLiteral(table.getObjectName())))),Optional.of(new GroupBy(false,ImmutableList.of(new SimpleGroupBy(ImmutableList.of(nameReference("partition_number")))))),Optional.empty(),ImmutableList.of(),Optional.empty());
  return simpleQuery(selectAll(wrappedList.build()),subquery(query),showPartitions.getWhere(),Optional.empty(),Optional.empty(),ImmutableList.<SortItem>builder().addAll(showPartitions.getOrderBy()).add(ascending("partition_number")).build(),showPartitions.getLimit());
}
