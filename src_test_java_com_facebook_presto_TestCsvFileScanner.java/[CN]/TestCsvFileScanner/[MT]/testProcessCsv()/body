{
  CollectingColumnProcessor column1=new CollectingColumnProcessor(FIXED_INT_64);
  CollectingColumnProcessor column2=new CollectingColumnProcessor(VARIABLE_BINARY);
  CollectingColumnProcessor column3=new CollectingColumnProcessor(VARIABLE_BINARY);
  Csv.processCsv(inputSupplier,',',column1,column2,column3);
  Assert.assertEquals(ImmutableList.copyOf(column1.getBlocks().iterator().next().pairIterator()),ImmutableList.of(new Pair(0,createTuple(0)),new Pair(1,createTuple(1)),new Pair(2,createTuple(2)),new Pair(3,createTuple(3))));
  Assert.assertEquals(ImmutableList.copyOf(column2.getBlocks().iterator().next().pairIterator()),ImmutableList.of(new Pair(0,createTuple("apple")),new Pair(1,createTuple("banana")),new Pair(2,createTuple("cherry")),new Pair(3,createTuple("date"))));
  Assert.assertEquals(ImmutableList.copyOf(column3.getBlocks().iterator().next().pairIterator()),ImmutableList.of(new Pair(0,createTuple("alice")),new Pair(1,createTuple("bob")),new Pair(2,createTuple("charlie")),new Pair(3,createTuple("dave"))));
}
