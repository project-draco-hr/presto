{
  if (arity < 2) {
    throw new PrestoException(INVALID_FUNCTION_ARGUMENT,"There must be two or more concatenation arguments");
  }
  Class<?> clazz=generateConcat(arity);
  MethodHandle methodHandle=methodHandle(clazz,"concat",Collections.nCopies(arity,Slice.class).toArray(new Class<?>[arity]));
  List<Boolean> nullableParameters=ImmutableList.copyOf(Collections.nCopies(arity,false));
  Signature specializedSignature=internalFunction(SIGNATURE.getName(),VARCHAR.getTypeSignature(),Collections.nCopies(arity,VARCHAR.getTypeSignature()));
  return new FunctionInfo(specializedSignature,getDescription(),isHidden(),methodHandle,isDeterministic(),false,nullableParameters);
}
