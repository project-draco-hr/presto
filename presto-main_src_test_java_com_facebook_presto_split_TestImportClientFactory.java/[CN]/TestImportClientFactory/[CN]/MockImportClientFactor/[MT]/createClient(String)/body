{
  if (!this.catalogName.equals(catalogName)) {
    return null;
  }
  return new ImportClient(){
    @Override public List<String> listSchemaNames(){
      throw new UnsupportedOperationException();
    }
    @Override public TableHandle getTableHandle(    SchemaTableName tableName){
      throw new UnsupportedOperationException();
    }
    @Override public SchemaTableName getTableName(    TableHandle tableHandle){
      throw new UnsupportedOperationException();
    }
    @Override public SchemaTableMetadata getTableMetadata(    TableHandle table){
      throw new UnsupportedOperationException();
    }
    @Override public List<SchemaTableName> listTables(    String schemaNameOrNull){
      throw new UnsupportedOperationException();
    }
    @Override public ColumnHandle getColumnHandle(    TableHandle tableHandle,    String columnName){
      throw new UnsupportedOperationException();
    }
    @Override public Map<String,ColumnHandle> getColumnHandles(    TableHandle tableHandle){
      throw new UnsupportedOperationException();
    }
    @Override public ColumnMetadata getColumnMetadata(    TableHandle tableHandle,    ColumnHandle columnHandle){
      throw new UnsupportedOperationException();
    }
    @Override public Map<SchemaTableName,List<ColumnMetadata>> listTableColumns(    SchemaTablePrefix prefix){
      throw new UnsupportedOperationException();
    }
    @Override public List<Map<String,String>> listTablePartitionValues(    SchemaTablePrefix prefix){
      throw new UnsupportedOperationException();
    }
    @Override public List<Partition> getPartitions(    TableHandle table,    Map<ColumnHandle,Object> bindings){
      throw new UnsupportedOperationException();
    }
    @Override public Iterable<PartitionChunk> getPartitionChunks(    List<Partition> partitions,    List<ColumnHandle> columns){
      throw new UnsupportedOperationException();
    }
    @Override public RecordCursor getRecords(    PartitionChunk partitionChunk){
      throw new UnsupportedOperationException();
    }
    @Override public byte[] serializePartitionChunk(    PartitionChunk partitionChunk){
      throw new UnsupportedOperationException();
    }
    @Override public PartitionChunk deserializePartitionChunk(    byte[] bytes){
      throw new UnsupportedOperationException();
    }
  }
;
}
