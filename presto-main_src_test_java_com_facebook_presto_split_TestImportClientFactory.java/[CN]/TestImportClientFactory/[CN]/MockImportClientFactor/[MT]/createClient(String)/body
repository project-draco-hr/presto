{
  if (!this.catalogName.equals(catalogName)) {
    return null;
  }
  return new ImportClient(){
    @Override public List<String> getDatabaseNames(){
      throw new UnsupportedOperationException();
    }
    @Override public List<String> getTableNames(    String databaseName) throws ObjectNotFoundException {
      throw new UnsupportedOperationException();
    }
    @Override public List<SchemaField> getTableSchema(    String databaseName,    String tableName) throws ObjectNotFoundException {
      throw new UnsupportedOperationException();
    }
    @Override public List<SchemaField> getPartitionKeys(    String databaseName,    String tableName) throws ObjectNotFoundException {
      throw new UnsupportedOperationException();
    }
    @Override public List<PartitionInfo> getPartitions(    String databaseName,    String tableName) throws ObjectNotFoundException {
      throw new UnsupportedOperationException();
    }
    @Override public List<PartitionInfo> getPartitions(    String databaseName,    String tableName,    Map<String,Object> filters) throws ObjectNotFoundException {
      throw new UnsupportedOperationException();
    }
    @Override public List<String> getPartitionNames(    String databaseName,    String tableName) throws ObjectNotFoundException {
      throw new UnsupportedOperationException();
    }
    @Override public List<PartitionChunk> getPartitionChunks(    String databaseName,    String tableName,    String partitionName,    List<String> columns) throws ObjectNotFoundException {
      throw new UnsupportedOperationException();
    }
    @Override public Iterable<PartitionChunk> getPartitionChunks(    String databaseName,    String tableName,    List<String> partitionNames,    List<String> columns) throws ObjectNotFoundException {
      throw new UnsupportedOperationException();
    }
    @Override public RecordCursor getRecords(    PartitionChunk partitionChunk){
      throw new UnsupportedOperationException();
    }
    @Override public byte[] serializePartitionChunk(    PartitionChunk partitionChunk){
      throw new UnsupportedOperationException();
    }
    @Override public PartitionChunk deserializePartitionChunk(    byte[] bytes){
      throw new UnsupportedOperationException();
    }
  }
;
}
