{
  assertFunction("CAST(test_row(1, 2) AS JSON)",JSON,"[1,2]");
  assertFunction("CAST(test_row(1, CAST(NULL AS INTEGER)) AS JSON)",JSON,"[1,null]");
  assertFunction("CAST(test_row(1, 2.0) AS JSON)",JSON,"[1,2.0]");
  assertFunction("CAST(test_row(1.0, 2.5) AS JSON)",JSON,"[1.0,2.5]");
  assertFunction("CAST(test_row(1.0, 'kittens') AS JSON)",JSON,"[1.0,\"kittens\"]");
  assertFunction("CAST(test_row(TRUE, FALSE) AS JSON)",JSON,"[true,false]");
  assertFunction("CAST(test_row(from_unixtime(1)) AS JSON)",JSON,"[\"" + new SqlTimestamp(1000,TEST_SESSION.getTimeZoneKey()) + "\"]");
  assertFunction("CAST(test_row(FALSE, ARRAY [1, 2], MAP(ARRAY[1, 3], ARRAY[2.0, 4.0])) AS JSON)",JSON,"[false,[1,2],{\"1\":2.0,\"3\":4.0}]");
}
