{
  assertFunction("cast(test_row(2, 3) as row(aa bigint, bb bigint)).aa",BIGINT,2L);
  assertFunction("cast(test_row(2, 3) as row(aa bigint, bb bigint)).bb",BIGINT,3L);
  assertFunction("cast(test_row(2, 3) as row(aa bigint, bb boolean)).bb",BOOLEAN,true);
  assertFunction("cast(test_row(2, cast(null as double)) as row(aa bigint, bb double)).bb",DOUBLE,null);
  assertFunction("cast(test_row(2, 'test_str') as row(aa bigint, bb varchar)).bb",VARCHAR,"test_str");
  try {
    assertFunction("CAST(ROW(1, 2) AS ROW(a BIGINT, A DOUBLE)).a",BIGINT,1L);
    fail("fields in Row are case insensitive");
  }
 catch (  RuntimeException e) {
  }
  String longFieldNameCast="CAST(test_row(1.2, ARRAY[test_row(233, 6.9)], test_row(1000, 6.3)) AS ROW(%s VARCHAR, %s ARRAY(ROW(%s VARCHAR, %s VARCHAR)), %s ROW(%s VARCHAR, %s VARCHAR))).%s[1].%s";
  int fieldCount=7;
  char[] chars=new char[9333];
  String[] fields=new String[fieldCount];
  for (int i=0; i < fieldCount; i++) {
    Arrays.fill(chars,(char)('a' + i));
    fields[i]=new String(chars);
  }
  assertFunction(format(longFieldNameCast,fields[0],fields[1],fields[2],fields[3],fields[4],fields[5],fields[6],fields[1],fields[2]),VARCHAR,"233");
}
