{
  Set<Symbol> dependencies=SymbolExtractor.extract(root);
  List<PlanNodeId> schedulingOrder=new SchedulingOrderVisitor().getSchedulingOrder(root);
  boolean equals=properties.getPartitionedSources().equals(ImmutableSet.copyOf(schedulingOrder));
  checkArgument(equals,"Expected scheduling order (%s) to contain an entry for all partitioned sources (%s)",schedulingOrder,properties.getPartitionedSources());
  PlanFragment fragment=new PlanFragment(fragmentId,root,Maps.filterKeys(types,in(dependencies)),properties.getPartitioningHandle(),schedulingOrder,properties.getPartitionFunction());
  return new SubPlan(fragment,properties.getChildren());
}
