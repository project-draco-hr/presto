{
  List<Field> exported=new ArrayList<>();
  for (  Relation relation : query.getFrom()) {
    SemanticAnalyzer analyzer=new SemanticAnalyzer(metadata,symbols);
    AnalysisResult analysis=analyzer.analyze(relation);
    resolvedNames.putAll(analysis.getResolvedNames());
    types.putAll(analysis.getTypes());
    Iterables.addAll(exported,analysis.getType().getFields());
  }
  SymbolTable newSymbols=new SymbolTable(symbols,exported);
  ReferenceResolver resolver=new ReferenceResolver(newSymbols);
  if (query.getWhere() != null) {
    resolver.resolve(query.getWhere());
  }
  resolver.resolve(query.getSelect());
  for (  Expression expression : query.getGroupBy()) {
    resolver.resolve(expression);
  }
  if (query.getHaving() != null) {
    resolver.resolve(query.getHaving());
  }
  for (  SortItem sortItem : query.getOrderBy()) {
    resolver.resolve(sortItem);
  }
  resolvedNames.putAll(resolver.getResolvedNames());
  if (query.getWhere() != null) {
    NestedQueryExtractor extractor=new NestedQueryExtractor();
    for (    Query nested : extractor.extract(query.getWhere())) {
      SemanticAnalyzer analyzer=new SemanticAnalyzer(metadata,newSymbols);
      AnalysisResult analysis=analyzer.analyze(nested);
      resolvedNames.putAll(analysis.getResolvedNames());
      types.putAll(analysis.getTypes());
    }
  }
  types.put(query,inferTypes(query.getSelect(),exported));
  return null;
}
