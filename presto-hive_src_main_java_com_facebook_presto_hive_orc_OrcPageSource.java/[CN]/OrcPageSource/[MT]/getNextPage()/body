{
  try {
    batchId++;
    int batchSize=recordReader.nextBatch();
    if (batchSize <= 0) {
      close();
      return null;
    }
    Block[] blocks=new Block[hiveColumnIndexes.length];
    for (int fieldId=0; fieldId < blocks.length; fieldId++) {
      Type type=types.get(fieldId);
      if (constantBlocks[fieldId] != null) {
        blocks[fieldId]=constantBlocks[fieldId].getRegion(0,batchSize);
      }
 else {
        blocks[fieldId]=new LazyBlock(batchSize,new OrcBlockLoader(hiveColumnIndexes[fieldId],type));
      }
    }
    Page page=new Page(batchSize,blocks);
    long newCompletedBytes=(long)(recordReader.getSplitLength() * recordReader.getProgress());
    completedBytes=min(recordReader.getSplitLength(),max(completedBytes,newCompletedBytes));
    return page;
  }
 catch (  PrestoException e) {
    closeWithSuppression(e);
    throw e;
  }
catch (  IOException|RuntimeException e) {
    closeWithSuppression(e);
    throw new PrestoException(HIVE_CURSOR_ERROR,e);
  }
}
