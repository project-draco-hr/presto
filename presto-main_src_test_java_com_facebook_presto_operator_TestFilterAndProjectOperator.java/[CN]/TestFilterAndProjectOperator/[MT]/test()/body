{
  List<Page> input=rowPagesBuilder(VARCHAR,BIGINT).addSequencePage(100,0,0).build();
  OperatorFactory operatorFactory=new FilterAndProjectOperatorFactory(0,new FilterFunction(){
    @Override public boolean filter(    BlockCursor... cursors){
      long value=cursors[1].getLong();
      return 10 <= value && value < 20;
    }
    @Override public boolean filter(    RecordCursor cursor){
      long value=cursor.getLong(0);
      return 10 <= value && value < 20;
    }
  }
,ImmutableList.of(singleColumn(VARCHAR,0),new Add5Projection(1)));
  Operator operator=operatorFactory.createOperator(driverContext);
  MaterializedResult expected=MaterializedResult.resultBuilder(driverContext.getSession(),VARCHAR,BIGINT).row("10",15).row("11",16).row("12",17).row("13",18).row("14",19).row("15",20).row("16",21).row("17",22).row("18",23).row("19",24).build();
  assertOperatorEquals(operator,input,expected);
}
