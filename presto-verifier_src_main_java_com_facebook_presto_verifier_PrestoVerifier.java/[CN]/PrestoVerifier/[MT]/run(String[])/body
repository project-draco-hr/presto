{
  if (args.length > 0) {
    System.setProperty("config",args[0]);
  }
  ImmutableList.Builder<Module> builder=ImmutableList.<Module>builder().add(new PrestoVerifierModule()).addAll(getAdditionalModules());
  Bootstrap app=new Bootstrap(builder.build());
  Injector injector=app.strictConfig().initialize();
  VerifierConfig config=injector.getInstance(VerifierConfig.class);
  injector.injectMembers(this);
  EventClient eventClient=Iterables.getOnlyElement(injector.getInstance(Key.get(new TypeLiteral<Set<EventClient>>(){
  }
)));
  VerifierDao dao=new DBI(config.getQueryDatabase()).onDemand(VerifierDao.class);
  List<QueryPair> queries=dao.getQueriesBySuite(config.getSuite(),config.getMaxQueries());
  queries=applyOverrides(config,queries);
  queries=filterQueries(queries);
  if (config.getAdditionalJdbcDriverPath() != null) {
    List<URL> urlList=getUrls(config.getAdditionalJdbcDriverPath());
    URL[] urls=new URL[urlList.size()];
    urlList.toArray(urls);
    if (config.getTestJdbcDriverName() != null) {
      loadJdbcDriver(urls,config.getTestJdbcDriverName());
    }
    if (config.getControlJdbcDriverName() != null) {
      loadJdbcDriver(urls,config.getControlJdbcDriverName());
    }
  }
  Verifier verifier=new Verifier(System.out,config,eventClient);
  verifier.run(queries);
  injector.getInstance(LifeCycleManager.class).stop();
}
