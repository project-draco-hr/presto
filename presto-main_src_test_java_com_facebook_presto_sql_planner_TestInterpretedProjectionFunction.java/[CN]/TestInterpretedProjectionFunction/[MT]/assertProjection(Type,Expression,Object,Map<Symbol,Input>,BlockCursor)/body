{
  ImmutableMap.Builder<Symbol,Type> symbolTypes=ImmutableMap.builder();
  for (  Entry<Symbol,Input> entry : symbolToInputMappings.entrySet()) {
    symbolTypes.put(entry.getKey(),channels[entry.getValue().getChannel()].getType());
  }
  InterpretedProjectionFunction projectionFunction=new InterpretedProjectionFunction(expression,symbolTypes.build(),symbolToInputMappings,DUAL_METADATA_MANAGER,new Session("user","test",Session.DEFAULT_CATALOG,Session.DEFAULT_SCHEMA,null,null));
  BlockBuilder builder=outputType.createBlockBuilder(new BlockBuilderStatus());
  projectionFunction.project(channels,builder);
  Object actualValue=BlockAssertions.getOnlyValue(builder.build());
  assertEquals(actualValue,expectedValue);
}
