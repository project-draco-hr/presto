{
  assertProjection(LONG,toExpression("symbol",LONG),42L,ImmutableMap.of(new Symbol("symbol"),new Input(0,0)),ImmutableMap.of(new Symbol("symbol"),LONG),createTuple(42L));
  assertProjection(LONG,toExpression("symbol",LONG),null,ImmutableMap.of(new Symbol("symbol"),new Input(0,0)),ImmutableMap.of(new Symbol("symbol"),LONG),NULL_LONG_TUPLE);
  assertProjection(DOUBLE,toExpression("symbol",DOUBLE),11.1,ImmutableMap.of(new Symbol("symbol"),new Input(0,0)),ImmutableMap.of(new Symbol("symbol"),DOUBLE),createTuple(11.1));
  assertProjection(DOUBLE,toExpression("symbol",DOUBLE),null,ImmutableMap.of(new Symbol("symbol"),new Input(0,0)),ImmutableMap.of(new Symbol("symbol"),DOUBLE),NULL_DOUBLE_TUPLE);
  assertProjection(STRING,toExpression("symbol",STRING),"foo",ImmutableMap.of(new Symbol("symbol"),new Input(0,0)),ImmutableMap.of(new Symbol("symbol"),STRING),createTuple("foo"));
  assertProjection(STRING,toExpression("symbol",STRING),null,ImmutableMap.of(new Symbol("symbol"),new Input(0,0)),ImmutableMap.of(new Symbol("symbol"),STRING),NULL_STRING_TUPLE);
}
