{
  assertProjection(LONG,new ArithmeticExpression(ADD,longLiteral(42L),longLiteral(87L)),42L + 87L);
  assertProjection(DOUBLE,new ArithmeticExpression(ADD,longLiteral(42L),doubleLiteral(22.2)),42L + 22.2);
  assertProjection(DOUBLE,new ArithmeticExpression(ADD,doubleLiteral(11.1),doubleLiteral(22.2)),11.1 + 22.2);
  assertProjection(LONG,new ArithmeticExpression(SUBTRACT,longLiteral(42L),longLiteral(87L)),42L - 87L);
  assertProjection(DOUBLE,new ArithmeticExpression(SUBTRACT,longLiteral(42L),doubleLiteral(22.2)),42L - 22.2);
  assertProjection(DOUBLE,new ArithmeticExpression(SUBTRACT,doubleLiteral(11.1),doubleLiteral(22.2)),11.1 - 22.2);
  assertProjection(LONG,new ArithmeticExpression(MULTIPLY,longLiteral(42L),longLiteral(87L)),42L * 87L);
  assertProjection(DOUBLE,new ArithmeticExpression(MULTIPLY,longLiteral(42L),doubleLiteral(22.2)),42L * 22.2);
  assertProjection(DOUBLE,new ArithmeticExpression(MULTIPLY,doubleLiteral(11.1),doubleLiteral(22.2)),11.1 * 22.2);
  assertProjection(LONG,new ArithmeticExpression(DIVIDE,longLiteral(42L),longLiteral(87L)),42L / 87L);
  assertProjection(DOUBLE,new ArithmeticExpression(DIVIDE,longLiteral(42L),doubleLiteral(22.2)),42L / 22.2);
  assertProjection(DOUBLE,new ArithmeticExpression(DIVIDE,doubleLiteral(11.1),doubleLiteral(22.2)),11.1 / 22.2);
  assertProjection(LONG,new ArithmeticExpression(MODULUS,longLiteral(42L),longLiteral(87L)),42L % 87L);
  assertProjection(DOUBLE,new ArithmeticExpression(MODULUS,longLiteral(42L),doubleLiteral(22.2)),42L % 22.2);
  assertProjection(DOUBLE,new ArithmeticExpression(MODULUS,doubleLiteral(11.1),doubleLiteral(22.2)),11.1 % 22.2);
}
