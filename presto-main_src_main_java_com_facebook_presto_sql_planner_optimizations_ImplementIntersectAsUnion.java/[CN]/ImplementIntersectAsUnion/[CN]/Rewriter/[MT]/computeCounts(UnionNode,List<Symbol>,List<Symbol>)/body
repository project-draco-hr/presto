{
  ImmutableMap.Builder<Symbol,Signature> signatures=ImmutableMap.builder();
  ImmutableMap.Builder<Symbol,FunctionCall> aggregations=ImmutableMap.builder();
  for (  Symbol marker : markers) {
    Symbol output=symbolAllocator.newSymbol("count",BIGINT);
    aggregations.put(output,new FunctionCall(QualifiedName.of("count"),ImmutableList.of(marker.toQualifiedNameReference())));
    signatures.put(output,COUNT_AGGREGATION);
  }
  return new AggregationNode(idAllocator.getNextId(),sourceNode,originalColumns,aggregations.build(),signatures.build(),ImmutableMap.<Symbol,Symbol>of(),ImmutableList.of(originalColumns),Step.SINGLE,Optional.empty(),1.0,Optional.empty());
}
