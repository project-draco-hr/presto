{
  Symbol windowSymbol=symbolAllocator.newSymbol("sum",DOUBLE);
  Map<Symbol,Signature> signatures=ImmutableMap.of(windowSymbol,new Signature("sum",FunctionKind.WINDOW,ImmutableList.of(),ImmutableList.of(),BIGINT.getTypeSignature(),ImmutableList.of(DOUBLE.getTypeSignature()),false));
  Map<Symbol,FunctionCall> functions=ImmutableMap.of(windowSymbol,new FunctionCall(QualifiedName.of("sum"),ImmutableList.of(columnC.toSymbolReference())));
  WindowNode.Frame frame=new WindowNode.Frame(WindowFrame.Type.RANGE,FrameBound.Type.UNBOUNDED_PRECEDING,Optional.empty(),FrameBound.Type.UNBOUNDED_FOLLOWING,Optional.empty());
  WindowNode.Specification specification=new WindowNode.Specification(ImmutableList.of(),ImmutableList.of(),ImmutableMap.of(),frame);
  PlanNode node=new WindowNode(newId(),baseTableScan,specification,functions,signatures,Optional.empty(),ImmutableSet.of(),0);
  assertTypesValid(node);
}
