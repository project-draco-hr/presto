{
  checkNotNull(partitions,"partitions is null");
  if (partitions.isEmpty()) {
    return new DataSource("native",ImmutableList.<Split>of());
  }
  Partition partition=Iterables.getOnlyElement(partitions);
  checkArgument(partition instanceof TpchPartition,"Partition must be a tpch partition");
  TpchTableHandle tableHandle=((TpchPartition)partition).getTable();
  Set<Node> nodes=nodeManager.getActiveNodes();
  int totalParts=nodes.size();
  int partNumber=0;
  ImmutableList.Builder<Split> splits=ImmutableList.builder();
  for (  Node node : nodes) {
    TpchSplit tpchSplit=new TpchSplit(tableHandle,partNumber++,totalParts,ImmutableList.of(node.getHostAndPort()));
    splits.add(tpchSplit);
  }
  return new DataSource("tpch",splits.build());
}
