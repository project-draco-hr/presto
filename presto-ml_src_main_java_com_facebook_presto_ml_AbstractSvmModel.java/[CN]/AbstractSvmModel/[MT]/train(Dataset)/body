{
  svm_parameter param=new svm_parameter();
  param.svm_type=getLibsvmType();
  param.kernel_type=svm_parameter.LINEAR;
  param.degree=3;
  param.gamma=0;
  param.coef0=0;
  param.nu=0.5;
  param.cache_size=100;
  param.C=1;
  param.eps=0.1;
  param.p=0.1;
  param.shrinking=1;
  param.probability=0;
  param.nr_weight=0;
  param.weight_label=new int[0];
  param.weight=new double[0];
  svm_problem problem=toSvmProblem(dataset);
  ExecutorService service=Executors.newCachedThreadPool(Threads.threadsNamed("libsvm-trainer-" + System.identityHashCode(this) + "-%d"));
  try {
    TimeLimiter limiter=new SimpleTimeLimiter(service);
    model=limiter.callWithTimeout(getTrainingFunction(problem,param),1,TimeUnit.HOURS,true);
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
    throw Throwables.propagate(e);
  }
catch (  Exception e) {
    throw Throwables.propagate(e);
  }
 finally {
    service.shutdownNow();
  }
}
