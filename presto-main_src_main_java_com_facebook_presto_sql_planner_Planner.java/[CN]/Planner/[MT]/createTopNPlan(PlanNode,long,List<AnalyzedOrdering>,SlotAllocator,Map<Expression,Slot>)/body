{
  Map<Slot,Expression> preProjectSlots=new HashMap<>();
  for (  Slot slot : source.getOutputs()) {
    SlotReference expression=new SlotReference(slot);
    preProjectSlots.put(slot,expression);
  }
  List<Slot> orderBySlots=new ArrayList<>();
  Map<Slot,SortItem.Ordering> orderings=new HashMap<>();
  for (  AnalyzedOrdering item : orderBy) {
    Expression rewritten=TreeRewriter.rewriteWith(substitution(substitutions),item.getExpression().getRewrittenExpression());
    Slot slot=allocator.newSlot(item.getExpression().getType(),rewritten);
    orderBySlots.add(slot);
    preProjectSlots.put(slot,rewritten);
    orderings.put(slot,item.getOrdering());
  }
  ProjectNode preProject=new ProjectNode(source,preProjectSlots);
  return new TopNNode(preProject,limit,orderBySlots,orderings);
}
