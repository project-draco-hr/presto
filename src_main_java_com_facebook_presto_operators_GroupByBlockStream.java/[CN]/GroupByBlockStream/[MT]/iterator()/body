{
  final Cursor cursor=source.cursor();
  return new AbstractIterator<RunLengthEncodedBlock>(){
    private boolean done;
{
      done=!cursor.advanceNextPosition();
    }
    @Override protected RunLengthEncodedBlock computeNext(){
      if (done) {
        endOfData();
        return null;
      }
      Tuple key=cursor.getTuple();
      long startPosition=cursor.getPosition();
      long endPosition=cursor.getCurrentValueEndPosition();
      while (cursor.advanceNextValue() && cursor.currentValueEquals(key)) {
        endPosition=cursor.getCurrentValueEndPosition();
      }
      if (cursor.currentValueEquals(key)) {
        done=true;
      }
      Range range=Range.create(startPosition,endPosition);
      return new RunLengthEncodedBlock(key,range);
    }
  }
;
}
