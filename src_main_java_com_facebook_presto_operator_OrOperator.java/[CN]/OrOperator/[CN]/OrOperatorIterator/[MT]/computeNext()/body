{
  ImmutableList.Builder<Long> positions=ImmutableList.builder();
  int count=0;
  AdvanceResult result=FINISHED;
  while (count < MAX_POSITIONS_PER_BLOCK && queue.size() > 0 && result != MUST_YIELD) {
    Cursor head=queue.remove();
    long position=head.getPosition();
    if (position >= threshold) {
      positions.add(position);
      threshold=position + 1;
      ++count;
    }
    result=head.advanceToPosition(threshold);
    if (result != FINISHED) {
      queue.add(head);
    }
  }
  if (count == 0) {
switch (result) {
case SUCCESS:
      throw new IllegalStateException("No positions produced and input was not finished");
case MUST_YIELD:
    return setMustYield();
case FINISHED:
  return endOfData();
}
}
return new UncompressedPositionBlock(positions.build());
}
