{
  checkNotNull(partitions,"partitions is null");
  Preconditions.checkArgument(!partitions.isEmpty(),"partitions is empty");
  checkNotNull(columnNames,"columnNames is null");
  Partition partition=Iterables.getOnlyElement(partitions);
  checkArgument(partition instanceof InternalPartition,"Partition must be an internal partition");
  InternalPartition internalPartition=(InternalPartition)partition;
  Optional<Node> currentNode=nodeManager.getCurrentNode();
  Preconditions.checkState(currentNode.isPresent(),"current node is not in the active set");
  ImmutableList<HostAddress> localAddress=ImmutableList.of(currentNode.get().getHostAndPort());
  ImmutableMap.Builder<InternalColumnHandle,Object> filters=ImmutableMap.builder();
  for (  Entry<ColumnHandle,Object> entry : internalPartition.getFilters().entrySet()) {
    filters.put((InternalColumnHandle)entry.getKey(),entry.getValue());
  }
  Split split=new InternalSplit(internalPartition.table,filters.build(),localAddress);
  return new DataSource(null,ImmutableList.of(split));
}
