{
  requireNonNull(functionRegistry,"functionRegistry is null");
  this.delegate=requireNonNull(delegate,"delegate is null");
  ImmutableList.Builder<Set<Field>> fieldSetsBuilder=ImmutableList.builder();
  List<Type> columnTypes=delegate.getColumnTypes();
  for (  Set<Integer> fieldSet : checkNotNull(fieldSets,"fieldSets is null")) {
    ImmutableSet.Builder<Field> fieldSetBuilder=ImmutableSet.builder();
    for (    int field : fieldSet) {
      fieldSetBuilder.add(new Field(field,functionRegistry.resolveOperator(OperatorType.EQUAL,ImmutableList.of(columnTypes.get(field),columnTypes.get(field))).getMethodHandle()));
    }
    fieldSetsBuilder.add(fieldSetBuilder.build());
  }
  this.fieldSets=fieldSetsBuilder.build();
}
