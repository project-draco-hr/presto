{
  SchemaTableName test1=new SchemaTableName("test","test_view1");
  SchemaTableName test2=new SchemaTableName("test","test_view2");
  metadata.createView(SESSION,test1,"test1",false);
  metadata.createView(SESSION,test2,"test2",false);
  List<SchemaTableName> list=metadata.listViews(SESSION,"test");
  assertEqualsIgnoreOrder(list,ImmutableList.of(test1,test2));
  Map<SchemaTableName,String> views=metadata.getViews(SESSION,new SchemaTablePrefix("test"));
  assertEquals(views.keySet(),ImmutableSet.of(test1,test2));
  assertEquals(views.get(test1),"test1");
  assertEquals(views.get(test2),"test2");
  metadata.dropView(SESSION,test1);
  views=metadata.getViews(SESSION,new SchemaTablePrefix("test"));
  assertEquals(views.keySet(),ImmutableSet.of(test2));
  metadata.dropView(SESSION,test2);
  views=metadata.getViews(SESSION,new SchemaTablePrefix("test"));
  assertTrue(views.isEmpty());
  views=metadata.getViews(SESSION,new SchemaTablePrefix());
  assertTrue(views.isEmpty());
}
