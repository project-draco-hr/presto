{
  final QueryState outputBuffer=outputBuffers.get("out");
  Preconditions.checkNotNull(outputBuffer,"outputBuffer is null");
  try {
    Preconditions.checkState(fragmentSources.size() == 1,"Expected single source");
    final String sourceName=fragmentSources.keySet().iterator().next();
    List<PlanFragmentSource> sources=fragmentSources.values().iterator().next();
    if (sources.size() == 1) {
      new SplitWorker(outputBuffer,fragment,ImmutableMap.<String,PlanFragmentSource>of(sourceName,sources.get(0)),sourceProvider,metadata).call();
    }
 else {
      List<Future<Void>> results=shardExecutor.invokeAll(Lists.transform(sources,new Function<PlanFragmentSource,Callable<Void>>(){
        @Override public Callable<Void> apply(        PlanFragmentSource fragmentSource){
          return new SplitWorker(outputBuffer,fragment,ImmutableMap.of(sourceName,fragmentSource),sourceProvider,metadata);
        }
      }
));
      checkQueryResults(results);
    }
    outputBuffer.sourceFinished();
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
    outputBuffer.queryFailed(e);
    throw Throwables.propagate(e);
  }
catch (  Exception e) {
    outputBuffer.queryFailed(e);
    throw Throwables.propagate(e);
  }
}
