{
  CompilerContext context=generatorContext.getContext();
  RowExpression argument=arguments.get(0);
  Class<?> argumentType=argument.getType().getJavaType();
  Class<?> unboxedReturnType=returnType.getJavaType();
  Class<?> boxedReturnType=Primitives.wrap(unboxedReturnType);
  if (argument.getType().equals(UNKNOWN)) {
    return new Block(context).putVariable("wasNull",true).pushJavaDefault(unboxedReturnType);
  }
  MethodHandle function=generatorContext.getRegistry().getCoercion(argument.getType(),returnType).getMethodHandle().asType(methodType(boxedReturnType,argumentType));
  MethodHandle tryCast=exceptionToNull(function,boxedReturnType,RuntimeException.class);
  Binding tryCastBinding=generatorContext.getCallSiteBinder().bind(tryCast);
  LabelNode end=new LabelNode("end");
  return new Block(context).comment("call tryCast method").append(generatorContext.generate(argument)).append(ifWasNullPopAndGoto(context,end,unboxedReturnType,argumentType)).append(invoke(generatorContext.getContext(),tryCastBinding,"tryCast")).append(unboxPrimitiveIfNecessary(context,boxedReturnType)).visitLabel(end);
}
