{
  Assert.assertEquals(SortedRangeSet.all(Long.class).subtract(SortedRangeSet.all(Long.class)),SortedRangeSet.none(Long.class));
  Assert.assertEquals(SortedRangeSet.all(Long.class).subtract(SortedRangeSet.none(Long.class)),SortedRangeSet.all(Long.class));
  Assert.assertEquals(SortedRangeSet.all(Long.class).subtract(SortedRangeSet.singleValue(0L)),SortedRangeSet.singleValue(0L).complement());
  Assert.assertEquals(SortedRangeSet.all(Long.class).subtract(SortedRangeSet.of(Range.equal(0L),Range.equal(1L))),SortedRangeSet.of(Range.equal(0L),Range.equal(1L)).complement());
  Assert.assertEquals(SortedRangeSet.all(Long.class).subtract(SortedRangeSet.of(Range.greaterThan(0L))),SortedRangeSet.of(Range.lessThanOrEqual(0L)));
  Assert.assertEquals(SortedRangeSet.none(Long.class).subtract(SortedRangeSet.all(Long.class)),SortedRangeSet.none(Long.class));
  Assert.assertEquals(SortedRangeSet.none(Long.class).subtract(SortedRangeSet.none(Long.class)),SortedRangeSet.none(Long.class));
  Assert.assertEquals(SortedRangeSet.none(Long.class).subtract(SortedRangeSet.singleValue(0L)),SortedRangeSet.none(Long.class));
  Assert.assertEquals(SortedRangeSet.none(Long.class).subtract(SortedRangeSet.of(Range.equal(0L),Range.equal(1L))),SortedRangeSet.none(Long.class));
  Assert.assertEquals(SortedRangeSet.none(Long.class).subtract(SortedRangeSet.of(Range.greaterThan(0L))),SortedRangeSet.none(Long.class));
  Assert.assertEquals(SortedRangeSet.singleValue(0L).subtract(SortedRangeSet.all(Long.class)),SortedRangeSet.none(Long.class));
  Assert.assertEquals(SortedRangeSet.singleValue(0L).subtract(SortedRangeSet.none(Long.class)),SortedRangeSet.singleValue(0L));
  Assert.assertEquals(SortedRangeSet.singleValue(0L).subtract(SortedRangeSet.singleValue(0L)),SortedRangeSet.none(Long.class));
  Assert.assertEquals(SortedRangeSet.singleValue(0L).subtract(SortedRangeSet.of(Range.equal(0L),Range.equal(1L))),SortedRangeSet.none(Long.class));
  Assert.assertEquals(SortedRangeSet.singleValue(0L).subtract(SortedRangeSet.of(Range.greaterThan(0L))),SortedRangeSet.singleValue(0L));
  Assert.assertEquals(SortedRangeSet.of(Range.equal(0L),Range.equal(1L)).subtract(SortedRangeSet.all(Long.class)),SortedRangeSet.none(Long.class));
  Assert.assertEquals(SortedRangeSet.of(Range.equal(0L),Range.equal(1L)).subtract(SortedRangeSet.none(Long.class)),SortedRangeSet.of(Range.equal(0L),Range.equal(1L)));
  Assert.assertEquals(SortedRangeSet.of(Range.equal(0L),Range.equal(1L)).subtract(SortedRangeSet.singleValue(0L)),SortedRangeSet.singleValue(1L));
  Assert.assertEquals(SortedRangeSet.of(Range.equal(0L),Range.equal(1L)).subtract(SortedRangeSet.of(Range.equal(0L),Range.equal(1L))),SortedRangeSet.none(Long.class));
  Assert.assertEquals(SortedRangeSet.of(Range.equal(0L),Range.equal(1L)).subtract(SortedRangeSet.of(Range.greaterThan(0L))),SortedRangeSet.of(Range.equal(0L)));
  Assert.assertEquals(SortedRangeSet.of(Range.greaterThan(0L)).subtract(SortedRangeSet.all(Long.class)),SortedRangeSet.none(Long.class));
  Assert.assertEquals(SortedRangeSet.of(Range.greaterThan(0L)).subtract(SortedRangeSet.none(Long.class)),SortedRangeSet.of(Range.greaterThan(0L)));
  Assert.assertEquals(SortedRangeSet.of(Range.greaterThan(0L)).subtract(SortedRangeSet.singleValue(0L)),SortedRangeSet.of(Range.greaterThan(0L)));
  Assert.assertEquals(SortedRangeSet.of(Range.greaterThan(0L)).subtract(SortedRangeSet.of(Range.equal(0L),Range.equal(1L))),SortedRangeSet.of(Range.range(0L,false,1L,false),Range.greaterThan(1L)));
  Assert.assertEquals(SortedRangeSet.of(Range.greaterThan(0L)).subtract(SortedRangeSet.of(Range.greaterThan(0L))),SortedRangeSet.none(Long.class));
}
