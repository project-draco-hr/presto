{
  Driver driver=driverFactory.createDriver(pipelineContext.addDriverContext());
  driver.updateSource(new TaskSource(sourcePlanNodeId,ImmutableSet.of(new ScheduledSplit(0,new Split("index",new IndexSplit(unloadedKeysRecordSet)))),true));
  while (!driver.isFinished()) {
    ListenableFuture<?> process=driver.process();
    checkState(process.isDone(),"Driver should never block");
  }
  LookupSource lookupSource=pagesIndex.createLookupSource(indexChannels);
  PageBuilder missingKeysPageBuilder=new PageBuilder(missingKeysIndex.getTypes());
  UnloadedIndexKeyRecordCursor unloadedKeyRecordCursor=unloadedKeysRecordSet.cursor();
  while (unloadedKeyRecordCursor.advanceNextPosition()) {
    Block[] blocks=unloadedKeyRecordCursor.getBlocks();
    int position=unloadedKeyRecordCursor.getPosition();
    if (lookupSource.getJoinPosition(position,blocks) < 0) {
      for (int i=0; i < blocks.length; i++) {
        Block block=blocks[i];
        Type type=unloadedKeyRecordCursor.getType(i);
        type.appendTo(block,position,missingKeysPageBuilder.getBlockBuilder(i));
      }
    }
  }
  if (!missingKeysPageBuilder.isEmpty()) {
    missingKeysIndex.addPage(missingKeysPageBuilder.build());
    missingKeys=missingKeysIndex.createLookupSource(missingKeysChannels);
  }
  return new IndexSnapshot(lookupSource,missingKeys);
}
