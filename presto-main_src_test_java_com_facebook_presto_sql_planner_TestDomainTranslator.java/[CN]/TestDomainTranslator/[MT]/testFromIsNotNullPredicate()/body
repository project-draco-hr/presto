{
  Expression originalExpression=isNotNull(A);
  ExtractionResult result=fromPredicate(originalExpression);
  assertEquals(result.getRemainingExpression(),TRUE_LITERAL);
  assertEquals(result.getTupleDomain(),withColumnDomains(ImmutableMap.of(A,Domain.notNull(BIGINT))));
  originalExpression=isNotNull(K);
  result=fromPredicate(originalExpression);
  assertEquals(result.getRemainingExpression(),TRUE_LITERAL);
  assertEquals(result.getTupleDomain(),withColumnDomains(ImmutableMap.of(K,Domain.notNull(HYPER_LOG_LOG))));
  originalExpression=not(isNotNull(A));
  result=fromPredicate(originalExpression);
  assertEquals(result.getRemainingExpression(),TRUE_LITERAL);
  assertEquals(result.getTupleDomain(),withColumnDomains(ImmutableMap.of(A,Domain.onlyNull(BIGINT))));
  originalExpression=not(isNotNull(K));
  result=fromPredicate(originalExpression);
  assertEquals(result.getRemainingExpression(),TRUE_LITERAL);
  assertEquals(result.getTupleDomain(),withColumnDomains(ImmutableMap.of(K,Domain.onlyNull(HYPER_LOG_LOG))));
}
