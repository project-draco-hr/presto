{
  TupleDomain<Symbol> tupleDomain=withColumnDomains(ImmutableMap.<Symbol,Domain>builder().put(A,Domain.singleValue(1L)).put(B,Domain.onlyNull(Double.class)).put(C,Domain.notNull(Slice.class)).put(D,Domain.singleValue(true)).put(E,Domain.singleValue(2L)).put(F,Domain.create(SortedRangeSet.of(Range.lessThanOrEqual(1.1),Range.equal(2.0),Range.range(3.0,false,3.5,true)),true)).put(G,Domain.create(SortedRangeSet.of(Range.lessThanOrEqual(utf8Slice("2013-01-01")),Range.greaterThan(utf8Slice("2013-10-01"))),false)).put(H,Domain.singleValue(TIMESTAMP_VALUE)).put(I,Domain.singleValue(DATE_VALUE)).build());
  ExtractionResult result=fromPredicate(toPredicate(tupleDomain));
  assertEquals(result.getRemainingExpression(),TRUE_LITERAL);
  assertEquals(result.getTupleDomain(),tupleDomain);
}
