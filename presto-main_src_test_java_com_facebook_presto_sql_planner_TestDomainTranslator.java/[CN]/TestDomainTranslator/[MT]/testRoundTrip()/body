{
  TupleDomain<ColumnHandle> tupleDomain=withColumnDomains(ImmutableMap.<ColumnHandle,Domain>builder().put(ACH,Domain.singleValue(1L)).put(BCH,Domain.onlyNull(Double.class)).put(CCH,Domain.notNull(Slice.class)).put(DCH,Domain.singleValue(true)).put(ECH,Domain.singleValue(2L)).put(FCH,Domain.create(SortedRangeSet.of(Range.lessThanOrEqual(1.1),Range.equal(2.0),Range.range(3.0,false,3.5,true)),true)).put(GCH,Domain.create(SortedRangeSet.of(Range.lessThanOrEqual(utf8Slice("2013-01-01")),Range.greaterThan(utf8Slice("2013-10-01"))),false)).build());
  ExtractionResult result=fromPredicate(MANAGER,TEST_SESSION,toPredicate(tupleDomain,COLUMN_HANDLES.inverse(),TYPES),TYPES,COLUMN_HANDLES);
  Assert.assertEquals(result.getRemainingExpression(),TRUE_LITERAL);
  Assert.assertEquals(result.getTupleDomain(),tupleDomain);
}
