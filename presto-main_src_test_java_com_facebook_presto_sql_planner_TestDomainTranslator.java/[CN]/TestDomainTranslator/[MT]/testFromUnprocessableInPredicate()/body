{
  Expression originalExpression=new InPredicate(unprocessableExpression1(A),new InListExpression(ImmutableList.<Expression>of(TRUE_LITERAL)));
  ExtractionResult result=fromPredicate(originalExpression);
  assertEquals(result.getRemainingExpression(),originalExpression);
  assertTrue(result.getTupleDomain().isAll());
  originalExpression=new InPredicate(reference(D),new InListExpression(ImmutableList.of(unprocessableExpression1(D))));
  result=fromPredicate(originalExpression);
  assertEquals(result.getRemainingExpression(),equal(D,unprocessableExpression1(D)));
  assertTrue(result.getTupleDomain().isAll());
  originalExpression=new InPredicate(reference(D),new InListExpression(ImmutableList.of(TRUE_LITERAL,unprocessableExpression1(D))));
  result=fromPredicate(originalExpression);
  assertEquals(result.getRemainingExpression(),or(equal(D,TRUE_LITERAL),equal(D,unprocessableExpression1(D))));
  assertTrue(result.getTupleDomain().isAll());
  originalExpression=not(new InPredicate(reference(D),new InListExpression(ImmutableList.of(unprocessableExpression1(D)))));
  result=fromPredicate(originalExpression);
  assertEquals(result.getRemainingExpression(),not(equal(D,unprocessableExpression1(D))));
  assertTrue(result.getTupleDomain().isAll());
}
