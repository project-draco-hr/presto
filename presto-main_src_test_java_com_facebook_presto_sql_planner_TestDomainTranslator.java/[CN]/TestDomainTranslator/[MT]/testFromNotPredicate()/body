{
  Expression originalPredicate=not(and(equal(A,longLiteral(1L)),unprocessableExpression1(A)));
  ExtractionResult result=fromPredicate(originalPredicate);
  assertEquals(result.getRemainingExpression(),originalPredicate);
  assertTrue(result.getTupleDomain().isAll());
  originalPredicate=not(unprocessableExpression1(A));
  result=fromPredicate(originalPredicate);
  assertEquals(result.getRemainingExpression(),originalPredicate);
  assertTrue(result.getTupleDomain().isAll());
  originalPredicate=not(TRUE_LITERAL);
  result=fromPredicate(originalPredicate);
  assertEquals(result.getRemainingExpression(),TRUE_LITERAL);
  assertTrue(result.getTupleDomain().isNone());
  originalPredicate=not(equal(A,longLiteral(1L)));
  result=fromPredicate(originalPredicate);
  assertEquals(result.getRemainingExpression(),TRUE_LITERAL);
  assertEquals(result.getTupleDomain(),withColumnDomains(ImmutableMap.of(A,Domain.create(ValueSet.ofRanges(Range.lessThan(BIGINT,1L),Range.greaterThan(BIGINT,1L)),false))));
}
