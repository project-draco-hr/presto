{
  final String clientId=handle.getClientId();
  final QualifiedTableName qualifiedTableName=handle.getTableName();
  final List<String> partitions=getPartitions(session,qualifiedTableName,predicate,mappings);
  final List<String> columns=IterableTransformer.on(mappings.values()).transform(MoreFunctions.<ColumnHandle,ImportColumnHandle>cast(ImportColumnHandle.class)).transform(columnNameGetter()).list();
  final ImportClient importClient=importClientManager.getClient(clientId);
  Iterable<PartitionChunk> chunks=retry().stopOn(NotFoundException.class).stopOnIllegalExceptions().runUnchecked(new Callable<Iterable<PartitionChunk>>(){
    @Override public Iterable<PartitionChunk> call() throws Exception {
      return importClient.getPartitionChunks(qualifiedTableName.asSchemaTableName(),partitions,columns);
    }
  }
);
  return new DataSource("import",Iterables.transform(chunks,createImportSplitFunction(qualifiedTableName.getCatalogName())));
}
