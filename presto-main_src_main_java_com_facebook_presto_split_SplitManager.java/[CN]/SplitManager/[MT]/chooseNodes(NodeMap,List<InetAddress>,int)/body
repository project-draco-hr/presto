{
  Set<Node> chosen=new LinkedHashSet<>(minCount);
  for (  InetAddress hint : hints) {
    for (    Node node : nodeMap.getNodesByHost().get(hint)) {
      if (chosen.add(node)) {
        scheduleLocal.incrementAndGet();
      }
    }
    for (    Node node : nodeMap.getNodesByRack().get(Rack.of(hint))) {
      if (chosen.add(node)) {
        scheduleRack.incrementAndGet();
      }
    }
  }
  if (chosen.size() < minCount) {
    for (    Node node : lazyShuffle(nodeMap.getNodesByHost().values())) {
      if (chosen.add(node)) {
        scheduleRandom.incrementAndGet();
      }
      if (chosen.size() == minCount) {
        break;
      }
    }
  }
  return ImmutableList.copyOf(chosen);
}
