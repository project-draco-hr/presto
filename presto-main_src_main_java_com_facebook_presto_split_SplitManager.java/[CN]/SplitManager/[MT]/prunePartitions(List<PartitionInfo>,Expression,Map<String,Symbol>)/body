{
  ImmutableList.Builder<PartitionInfo> builder=ImmutableList.builder();
  for (  PartitionInfo partition : partitions) {
    Map<String,String> relevantFields=Maps.filterKeys(partition.getKeyFields(),in(columnNameToSymbol.keySet()));
    ImmutableMap.Builder<Symbol,String> assignments=ImmutableMap.builder();
    for (    Map.Entry<String,String> entry : relevantFields.entrySet()) {
      Symbol symbol=columnNameToSymbol.get(entry.getKey());
      assignments.put(symbol,entry.getValue());
    }
    Expression optimized=new ExpressionOptimizer(assignments.build()).optimize(predicate);
    if (!optimized.equals(BooleanLiteral.FALSE_LITERAL) && !(optimized instanceof NullLiteral)) {
      builder.add(partition);
    }
  }
  return builder.build();
}
