{
  return new Iterable<T>(){
    @Override public Iterator<T> iterator(){
      return new ForwardingIterator<T>(){
        private final Iterator<T> iterator=iterable.iterator();
        private long count=0;
        @Override protected Iterator<T> delegate(){
          return iterator;
        }
        @Override public T next(){
          count++;
          checkState(count <= maxSize,"max split count exceeded: %s",maxSize);
          return super.next();
        }
      }
;
    }
  }
;
}
