{
  Symbol symbol=new Symbol("column");
  MetadataManager metadata=new MetadataManager(new FeaturesConfig(),new TypeRegistry());
  DataStreamManager dataStreamProvider=new DataStreamManager();
  dataStreamProvider.addConnectorDataStreamProvider("test",new TestingDataStreamProvider());
  planner=new LocalExecutionPlanner(new NodeInfo("test"),metadata,dataStreamProvider,new IndexManager(),new RecordSinkManager(),new MockExchangeClientSupplier(),new ExpressionCompiler(metadata),new CompilerConfig());
  taskExecutor=new TaskExecutor(8);
  taskExecutor.start();
  sqlTaskManager=new SqlTaskManager(planner,new MockLocationFactory(),taskExecutor,new QueryMonitor(new ObjectMapperProvider().get(),new NullEventClient(),new NodeInfo("test")),new TaskManagerConfig());
  tableScanNodeId=new PlanNodeId("tableScan");
  testFragment=new PlanFragment(new PlanFragmentId("fragment"),new TableScanNode(tableScanNodeId,new TableHandle("test",new TestingTableHandle()),ImmutableList.of(symbol),ImmutableMap.of(symbol,new ColumnHandle("test",new TestingColumnHandle("column"))),null,Optional.<GeneratedPartitions>absent()),ImmutableMap.<Symbol,Type>of(symbol,VARCHAR),PlanDistribution.SOURCE,tableScanNodeId,OutputPartitioning.NONE,ImmutableList.<Symbol>of());
  taskId=new TaskId("query","stage","task");
  session=new ConnectorSession("user","test","default","default",UTC_KEY,Locale.ENGLISH,"test","test");
}
