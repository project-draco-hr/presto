{
  DualMetadata dualMetadata=new DualMetadata();
  tableHandle=new TableHandle(DualConnector.CONNECTOR_ID,dualMetadata.getTableHandle(session,new SchemaTableName("default",DualMetadata.NAME)));
  assertNotNull(tableHandle,"tableHandle is null");
  columnHandle=new ColumnHandle(DualConnector.CONNECTOR_ID,dualMetadata.getColumnHandle(tableHandle.getConnectorHandle(),DualMetadata.COLUMN_NAME));
  assertNotNull(columnHandle,"columnHandle is null");
  symbol=new Symbol(DualMetadata.COLUMN_NAME);
  MetadataManager metadata=new MetadataManager(new FeaturesConfig(),new TypeRegistry());
  metadata.addGlobalSchemaMetadata(DualConnector.CONNECTOR_ID,dualMetadata);
  DualSplitManager dualSplitManager=new DualSplitManager(new InMemoryNodeManager());
  ConnectorPartitionResult partitionResult=dualSplitManager.getPartitions(tableHandle.getConnectorHandle(),TupleDomain.<ConnectorColumnHandle>all());
  SplitSource splitSource=new ConnectorAwareSplitSource(DualConnector.CONNECTOR_ID,dualSplitManager.getPartitionSplits(tableHandle.getConnectorHandle(),partitionResult.getPartitions()));
  split=Iterables.getOnlyElement(splitSource.getNextBatch(1));
  assertTrue(splitSource.isFinished());
  DataStreamManager dataStreamProvider=new DataStreamManager();
  dataStreamProvider.addConnectorDataStreamProvider(DualConnector.CONNECTOR_ID,new DualDataStreamProvider());
  planner=new LocalExecutionPlanner(new NodeInfo("test"),metadata,dataStreamProvider,new IndexManager(),new MockLocalStorageManager(new File("target/temp")),new RecordSinkManager(),new MockExchangeClientSupplier(),new ExpressionCompiler(metadata));
  taskExecutor=new TaskExecutor(8);
  taskExecutor.start();
  sqlTaskManager=new SqlTaskManager(planner,new MockLocationFactory(),taskExecutor,new QueryMonitor(new ObjectMapperProvider().get(),new NullEventClient(),new NodeInfo("test")),new TaskManagerConfig());
  tableScanNodeId=new PlanNodeId("tableScan");
  testFragment=new PlanFragment(new PlanFragmentId("fragment"),new TableScanNode(tableScanNodeId,tableHandle,ImmutableList.of(symbol),ImmutableMap.of(symbol,columnHandle),null,Optional.<GeneratedPartitions>absent()),ImmutableMap.<Symbol,Type>of(symbol,VARCHAR),PlanDistribution.SOURCE,tableScanNodeId,OutputPartitioning.NONE,ImmutableList.<Symbol>of());
  taskId=new TaskId("query","stage","task");
  session=new Session("user","test","default","default",UTC_KEY,Locale.ENGLISH,"test","test");
}
