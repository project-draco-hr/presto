{
  try (SqlTaskManager sqlTaskManager=createSqlTaskManager(new TaskManagerConfig())){
    TaskId taskId=TASK_ID;
    TaskInfo taskInfo=sqlTaskManager.updateTask(TEST_SESSION,taskId,Optional.of(PLAN_FRAGMENT),ImmutableList.of(new TaskSource(TABLE_SCAN_NODE_ID,ImmutableSet.of(SPLIT),true)),createInitialEmptyOutputBuffers().withBuffer(OUT,0).withNoMoreBufferIds());
    assertEquals(taskInfo.getTaskStatus().getState(),TaskState.RUNNING);
    taskInfo=sqlTaskManager.getTaskInfo(taskId);
    assertEquals(taskInfo.getTaskStatus().getState(),TaskState.RUNNING);
    BufferResult results=sqlTaskManager.getTaskResults(taskId,OUT,0,new DataSize(1,Unit.MEGABYTE)).get();
    assertEquals(results.isBufferComplete(),false);
    assertEquals(results.getPages().size(),1);
    assertEquals(results.getPages().get(0).getPositionCount(),1);
    results=sqlTaskManager.getTaskResults(taskId,OUT,results.getToken() + results.getPages().size(),new DataSize(1,Unit.MEGABYTE)).get();
    assertEquals(results.isBufferComplete(),true);
    assertEquals(results.getPages().size(),0);
    TaskInfo info=sqlTaskManager.abortTaskResults(taskId,OUT);
    assertEquals(info.getOutputBuffers().getState(),BufferState.FINISHED);
    taskInfo=sqlTaskManager.getTaskInfo(taskId,taskInfo.getTaskStatus().getState()).get(1,TimeUnit.SECONDS);
    assertEquals(taskInfo.getTaskStatus().getState(),TaskState.FINISHED);
    taskInfo=sqlTaskManager.getTaskInfo(taskId);
    assertEquals(taskInfo.getTaskStatus().getState(),TaskState.FINISHED);
  }
 }
