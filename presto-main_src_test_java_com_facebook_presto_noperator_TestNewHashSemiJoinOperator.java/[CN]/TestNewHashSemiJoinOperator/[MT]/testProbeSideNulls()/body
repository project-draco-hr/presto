{
  TaskMemoryManager taskMemoryManager=new TaskMemoryManager(new DataSize(256,MEGABYTE));
  OperatorStats operatorStats=new OperatorStats();
  NewOperator buildOperator=new StaticOperator(rowPagesBuilder(SINGLE_LONG).row(0).row(1).row(3).build());
  NewSetSupplier setSupplier=new NewSetSupplier(SINGLE_LONG);
  NewSetBuilderOperator setBuilderOperator=new NewSetBuilderOperator(setSupplier,0,10,taskMemoryManager);
  Driver driver=new Driver(operatorStats,buildOperator,setBuilderOperator);
  while (!driver.isFinished()) {
    driver.process();
  }
  List<Page> probeInput=rowPagesBuilder(SINGLE_LONG).row(0).row((Object)null).row(1).row(2).build();
  NewHashSemiJoinOperatorFactory joinOperatorFactory=new NewHashSemiJoinOperatorFactory(setSupplier,ImmutableList.of(SINGLE_LONG),0);
  NewOperator joinOperator=joinOperatorFactory.createOperator(operatorStats,taskMemoryManager);
  MaterializedResult expected=resultBuilder(FIXED_INT_64,BOOLEAN).row(0,true).row(null,null).row(1,true).row(2,false).build();
  NewOperatorAssertion.assertOperatorEquals(joinOperator,probeInput,expected);
}
