{
  if (statistics == null || statistics.isEmpty() || !(Comparable.class.isAssignableFrom(type.getJavaType()))) {
    return null;
  }
  if (statistics.getNumNulls() == rowCount) {
    return Domain.onlyNull(type);
  }
  boolean hasNullValue=statistics.getNumNulls() != 0L;
  if (type.equals(BOOLEAN) && statistics instanceof BooleanStatistics) {
    BooleanStatistics booleanStatistics=(BooleanStatistics)statistics;
    boolean hasTrueValues=!(booleanStatistics.getMax() == false && booleanStatistics.getMin() == false);
    boolean hasFalseValues=!(booleanStatistics.getMax() == true && booleanStatistics.getMin() == true);
    if (hasTrueValues && hasFalseValues) {
      return Domain.all(type);
    }
    if (hasTrueValues) {
      return Domain.create(ValueSet.of(type,true),hasNullValue);
    }
    if (hasFalseValues) {
      return Domain.create(ValueSet.of(type,false),hasNullValue);
    }
  }
 else   if (type.equals(BIGINT) && (statistics instanceof LongStatistics || statistics instanceof IntStatistics)) {
    ParquetIntegerStatistics parquetIntegerStatistics;
    if (statistics instanceof LongStatistics) {
      LongStatistics longStatistics=(LongStatistics)statistics;
      parquetIntegerStatistics=new ParquetIntegerStatistics(longStatistics.genericGetMin(),longStatistics.genericGetMax());
    }
 else {
      IntStatistics intStatistics=(IntStatistics)statistics;
      parquetIntegerStatistics=new ParquetIntegerStatistics((long)intStatistics.getMin(),(long)intStatistics.getMax());
    }
    return createDomain(type,hasNullValue,parquetIntegerStatistics);
  }
 else   if (type.equals(DOUBLE) && (statistics instanceof DoubleStatistics || statistics instanceof FloatStatistics)) {
    ParquetDoubleStatistics parquetDoubleStatistics;
    if (statistics instanceof DoubleStatistics) {
      DoubleStatistics doubleStatistics=(DoubleStatistics)statistics;
      parquetDoubleStatistics=new ParquetDoubleStatistics(doubleStatistics.genericGetMin(),doubleStatistics.genericGetMax());
    }
 else {
      FloatStatistics floatStatistics=(FloatStatistics)statistics;
      parquetDoubleStatistics=new ParquetDoubleStatistics((double)floatStatistics.getMin(),(double)floatStatistics.getMax());
    }
    return createDomain(type,hasNullValue,parquetDoubleStatistics);
  }
 else   if (type.equals(VARCHAR) && statistics instanceof BinaryStatistics) {
    BinaryStatistics binaryStatistics=(BinaryStatistics)statistics;
    ParquetStringStatistics parquetStringStatistics=new ParquetStringStatistics(Slices.wrappedBuffer(binaryStatistics.getMin().getBytes()),Slices.wrappedBuffer(binaryStatistics.getMax().getBytes()));
    return createDomain(type,hasNullValue,parquetStringStatistics);
  }
  return Domain.create(ValueSet.all(type),hasNullValue);
}
