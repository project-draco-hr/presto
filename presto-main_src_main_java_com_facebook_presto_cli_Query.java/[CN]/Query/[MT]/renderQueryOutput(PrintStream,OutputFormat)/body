{
  StatusPrinter statusPrinter=null;
  @SuppressWarnings("resource") PrintStream errorChannel=(outputFormat == PAGED) ? out : System.err;
  if (outputFormat == PAGED) {
    statusPrinter=new StatusPrinter(client,out);
    statusPrinter.printInitialStatusUpdates();
  }
  if (client.isClosed()) {
    errorChannel.println("Query aborted by user");
    return;
  }
  if (client.isGone()) {
    errorChannel.println("Query is gone (server restarted?)");
    return;
  }
  QueryResults results=client.current();
  if (results.getStats().isDone()) {
switch (results.getStats().getState()) {
case "CANCELED":
      errorChannel.printf("Query %s was canceled\n",results.getQueryId());
    return;
case "FAILED":
  renderFailure(results,errorChannel);
return;
}
}
List<String> fieldNames=Lists.transform(results.getData().getColumns(),Column.nameGetter());
switch (outputFormat) {
case PAGED:
pageOutput(Pager.LESS,fieldNames);
break;
default :
sendOutput(out,outputFormat,fieldNames);
break;
}
if (statusPrinter != null) {
statusPrinter.printFinalInfo();
}
}
