{
  checkNotNull(column,"column is null");
  checkNotNull(serializer,"serializer is null");
  checkNotNull(serdeName,"serdeName is null");
  try {
    String hash=ByteStreams.hash(tableInputSupplierFactory.getInputSupplier(column.getTableName()),Hashing.md5()).toString();
    File cachedFile=new File(new File(cacheDirectory,column.getTableName() + "-" + hash),createFileName(column,serdeName));
    if (cachedFile.exists()) {
      return cachedFile;
    }
    Files.createParentDirs(cachedFile);
    try (InputStream input=tableInputSupplierFactory.getInputSupplier(column.getTableName()).getInput()){
      TupleStreamImporter.importFrom(new DelimitedTupleStream(new InputStreamReader(input,Charsets.UTF_8),Splitter.on("|"),new TupleInfo(column.getType())),ImmutableList.of(new StreamWriterTupleValueSink(Files.newOutputStreamSupplier(cachedFile),serializer)));
    }
     return cachedFile;
  }
 catch (  IOException e) {
    throw Throwables.propagate(e);
  }
}
