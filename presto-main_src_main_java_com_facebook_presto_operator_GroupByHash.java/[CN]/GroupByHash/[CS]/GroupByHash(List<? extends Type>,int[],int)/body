{
  this.types=ImmutableList.copyOf(checkNotNull(types,"types is null"));
  this.channels=checkNotNull(channels,"channels is null").clone();
  checkArgument(types.size() == channels.length,"types and channels have different sizes");
  ImmutableList.Builder<Integer> hashChannels=ImmutableList.builder();
  ImmutableList.Builder<ObjectArrayList<Block>> channelBuilders=ImmutableList.builder();
  for (int i=0; i < channels.length; i++) {
    hashChannels.add(i);
    channelBuilders.add(ObjectArrayList.wrap(new Block[1024],0));
  }
  this.channelBuilders=channelBuilders.build();
  PagesHashStrategyFactory pagesHashStrategyFactory=JOIN_COMPILER.compilePagesHashStrategyFactory(this.types,hashChannels.build());
  hashStrategy=pagesHashStrategyFactory.createPagesHashStrategy(this.channelBuilders);
  startNewPage();
  int hashSize=arraySize(expectedSize,FILL_RATIO);
  maxFill=maxFill(hashSize,FILL_RATIO);
  mask=hashSize - 1;
  key=new long[hashSize];
  Arrays.fill(key,-1);
  value=new int[hashSize];
  groupAddress=new LongBigArray();
  groupAddress.ensureCapacity(maxFill);
}
