{
  TableHandle tableHandle=metadata.getTableHandle(new QualifiedTableName(session.getCatalog(),session.getSchema(),tableName)).orNull();
  checkArgument(tableHandle != null,"Table %s does not exist",tableName);
  ImmutableList.Builder<ColumnHandle> columnHandlesBuilder=ImmutableList.builder();
  ImmutableList.Builder<TupleInfo> columnTypesBuilder=ImmutableList.builder();
  for (  String columnName : columnNames) {
    ColumnHandle columnHandle=metadata.getColumnHandle(tableHandle,columnName).orNull();
    checkArgument(columnHandle != null,"Table %s does not have a column %s",tableName,columnName);
    columnHandlesBuilder.add(columnHandle);
    ColumnMetadata columnMetadata=metadata.getColumnMetadata(tableHandle,columnHandle);
    columnTypesBuilder.add(new TupleInfo(fromColumnType(columnMetadata.getType())));
  }
  final List<ColumnHandle> columnHandles=columnHandlesBuilder.build();
  final List<TupleInfo> columnTypes=columnTypesBuilder.build();
  final Split split=getLocalQuerySplit(tableHandle);
  return new OperatorFactory(){
    @Override public List<TupleInfo> getTupleInfos(){
      return columnTypes;
    }
    @Override public Operator createOperator(    DriverContext driverContext){
      OperatorContext operatorContext=driverContext.addOperatorContext(operatorId,"BenchmarkSource");
      return dataStreamProvider.createNewDataStream(operatorContext,split,columnHandles);
    }
    @Override public void close(){
    }
  }
;
}
