{
  checkArgument(arity == 1,"Expected arity to be 1");
  Type fromType=types.get("F");
  Type toType=types.get("T");
  Signature signature=internalOperator(CAST.name(),toType.getTypeSignature(),ImmutableList.of(fromType.getTypeSignature()));
  ScalarFunctionImplementation function=functionRegistry.getScalarFunctionImplementation(signature);
  Class<?> castOperatorClass=generateArrayCast(typeManager,signature,function);
  MethodHandle methodHandle=methodHandle(castOperatorClass,"castArray",ConnectorSession.class,Block.class);
  return new ScalarFunctionImplementation(false,ImmutableList.of(false),methodHandle,isDeterministic());
}
