{
  BlockBuilder keyBlockBuilder=pageBuilder.getBlockBuilder(outputChannelOffset);
  try {
    String value=jsonParser.getCurrentName();
    if (keyType.getJavaType() == long.class) {
      keyType.writeLong(keyBlockBuilder,Long.valueOf(value));
    }
 else     if (keyType.getJavaType() == double.class) {
      keyType.writeDouble(keyBlockBuilder,Double.valueOf(value));
    }
 else     if (keyType.getJavaType() == boolean.class) {
      keyType.writeBoolean(keyBlockBuilder,Boolean.valueOf(value));
    }
 else     if (keyType.getJavaType() == Slice.class) {
      Slice slice;
      if (keyType.equals(VARBINARY)) {
        slice=Slices.wrappedBuffer(BaseEncoding.base64().decode(value));
      }
 else {
        slice=Slices.utf8Slice(value);
      }
      keyType.writeSlice(keyBlockBuilder,slice);
    }
 else {
      throw new IllegalArgumentException("Unsupported stack type: " + keyType.getJavaType());
    }
  }
 catch (  IOException e) {
    throw Throwables.propagate(e);
  }
  readNextToken();
  BlockBuilder valueBlockBuilder=pageBuilder.getBlockBuilder(outputChannelOffset + 1);
  try {
    if (jsonParser.getCurrentToken() == JsonToken.VALUE_NULL) {
      valueBlockBuilder.appendNull();
    }
 else     if (valueType instanceof ArrayType || valueType instanceof MapType) {
      DynamicSliceOutput dynamicSliceOutput=new DynamicSliceOutput(ESTIMATED_JSON_OUTPUT_SIZE);
      try (JsonGenerator jsonGenerator=JSON_FACTORY.createJsonGenerator(dynamicSliceOutput)){
        jsonGenerator.copyCurrentStructure(jsonParser);
      }
       valueType.writeSlice(valueBlockBuilder,dynamicSliceOutput.slice());
    }
 else     if (valueType.getJavaType() == long.class) {
      valueType.writeLong(valueBlockBuilder,jsonParser.getLongValue());
    }
 else     if (valueType.getJavaType() == double.class) {
      valueType.writeDouble(valueBlockBuilder,jsonParser.getDoubleValue());
    }
 else     if (valueType.getJavaType() == boolean.class) {
      valueType.writeBoolean(valueBlockBuilder,jsonParser.getBooleanValue());
    }
 else     if (valueType.getJavaType() == Slice.class) {
      valueType.writeSlice(valueBlockBuilder,Slices.utf8Slice(jsonParser.getValueAsString()));
    }
 else {
      throw new IllegalArgumentException("Unsupported stack type: " + valueType.getJavaType());
    }
  }
 catch (  IOException e) {
    throw Throwables.propagate(e);
  }
}
