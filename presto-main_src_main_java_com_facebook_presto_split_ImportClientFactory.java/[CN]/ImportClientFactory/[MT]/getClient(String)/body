{
  checkArgument(sourceName.startsWith("hive_"),"bad source name: %s",sourceName);
  String metastoreName=sourceName.split("_",2)[1];
  checkArgument(!metastoreName.isEmpty(),"bad metastore name: %s",metastoreName);
  List<ServiceDescriptor> descriptors=ImmutableList.copyOf(selector.selectAllServices());
  List<HostAndPort> metastores=new ArrayList<>();
  for (  ServiceDescriptor descriptor : descriptors) {
    String thrift=descriptor.getProperties().get("thrift");
    String name=descriptor.getProperties().get("name");
    if (thrift != null && metastoreName.equals(name)) {
      try {
        HostAndPort metastore=HostAndPort.fromString(thrift);
        checkArgument(metastore.hasPort());
        metastores.add(metastore);
      }
 catch (      IllegalArgumentException ignored) {
      }
    }
  }
  if (metastores.isEmpty()) {
    throw new RuntimeException(String.format("hive metastore not available for name %s in pool %s",metastoreName,selector.getPool()));
  }
  HostAndPort metastore=shuffle(metastores).get(0);
  return new HiveClient(metastore.getHostText(),metastore.getPort());
}
