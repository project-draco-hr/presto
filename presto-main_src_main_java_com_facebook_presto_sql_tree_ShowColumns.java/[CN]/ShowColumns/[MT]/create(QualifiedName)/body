{
  checkNotNull(table,"table is null");
  List<String> parts=Lists.reverse(table.getParts());
  checkArgument(parts.size() <= 3,"too many parts in table name: %s",table);
  QualifiedName columnsTable=QualifiedName.of(INFORMATION_SCHEMA,TABLE_COLUMNS);
  String schemaName=Session.DEFAULT_SCHEMA;
  String tableName=parts.get(0);
  if (parts.size() > 2) {
    columnsTable=QualifiedName.of(parts.get(2),columnsTable);
  }
  if (parts.size() > 1) {
    schemaName=parts.get(1);
  }
  Expression where=logicalAnd(equal(nameReference("table_schema"),new StringLiteral(schemaName)),equal(nameReference("table_name"),new StringLiteral(tableName)));
  return new Query(selectList(aliasedName("column_name","Column"),aliasedName("data_type","Type"),aliasedName("is_nullable","Null")),table(columnsTable),where,ImmutableList.<Expression>of(),null,ImmutableList.of(ascending("ordinal_position")),null);
}
