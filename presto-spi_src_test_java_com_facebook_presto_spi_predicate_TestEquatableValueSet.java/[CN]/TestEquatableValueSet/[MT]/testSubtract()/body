{
  assertEquals(EquatableValueSet.all(ID).subtract(EquatableValueSet.all(ID)),EquatableValueSet.none(ID));
  assertEquals(EquatableValueSet.all(ID).subtract(EquatableValueSet.none(ID)),EquatableValueSet.all(ID));
  assertEquals(EquatableValueSet.all(ID).subtract(EquatableValueSet.of(ID,0L)),EquatableValueSet.of(ID,0L).complement());
  assertEquals(EquatableValueSet.all(ID).subtract(EquatableValueSet.of(ID,0L,1L)),EquatableValueSet.of(ID,0L,1L).complement());
  assertEquals(EquatableValueSet.all(ID).subtract(EquatableValueSet.of(ID,0L,1L).complement()),EquatableValueSet.of(ID,0L,1L));
  assertEquals(EquatableValueSet.none(ID).subtract(EquatableValueSet.all(ID)),EquatableValueSet.none(ID));
  assertEquals(EquatableValueSet.none(ID).subtract(EquatableValueSet.none(ID)),EquatableValueSet.none(ID));
  assertEquals(EquatableValueSet.none(ID).subtract(EquatableValueSet.of(ID,0L)),EquatableValueSet.none(ID));
  assertEquals(EquatableValueSet.none(ID).subtract(EquatableValueSet.of(ID,0L,1L)),EquatableValueSet.none(ID));
  assertEquals(EquatableValueSet.none(ID).subtract(EquatableValueSet.of(ID,0L,1L).complement()),EquatableValueSet.none(ID));
  assertEquals(EquatableValueSet.of(ID,0L).subtract(EquatableValueSet.all(ID)),EquatableValueSet.none(ID));
  assertEquals(EquatableValueSet.of(ID,0L).subtract(EquatableValueSet.none(ID)),EquatableValueSet.of(ID,0L));
  assertEquals(EquatableValueSet.of(ID,0L).subtract(EquatableValueSet.of(ID,0L)),EquatableValueSet.none(ID));
  assertEquals(EquatableValueSet.of(ID,0L).subtract(EquatableValueSet.of(ID,0L).complement()),EquatableValueSet.of(ID,0L));
  assertEquals(EquatableValueSet.of(ID,0L).subtract(EquatableValueSet.of(ID,1L)),EquatableValueSet.of(ID,0L));
  assertEquals(EquatableValueSet.of(ID,0L).subtract(EquatableValueSet.of(ID,1L).complement()),EquatableValueSet.none(ID));
  assertEquals(EquatableValueSet.of(ID,0L).subtract(EquatableValueSet.of(ID,0L,1L)),EquatableValueSet.none(ID));
  assertEquals(EquatableValueSet.of(ID,0L).subtract(EquatableValueSet.of(ID,0L,1L).complement()),EquatableValueSet.of(ID,0L));
  assertEquals(EquatableValueSet.of(ID,0L).complement().subtract(EquatableValueSet.all(ID)),EquatableValueSet.none(ID));
  assertEquals(EquatableValueSet.of(ID,0L).complement().subtract(EquatableValueSet.none(ID)),EquatableValueSet.of(ID,0L).complement());
  assertEquals(EquatableValueSet.of(ID,0L).complement().subtract(EquatableValueSet.of(ID,0L)),EquatableValueSet.of(ID,0L).complement());
  assertEquals(EquatableValueSet.of(ID,0L).complement().subtract(EquatableValueSet.of(ID,0L).complement()),EquatableValueSet.none(ID));
  assertEquals(EquatableValueSet.of(ID,0L).complement().subtract(EquatableValueSet.of(ID,1L)),EquatableValueSet.of(ID,0L,1L).complement());
  assertEquals(EquatableValueSet.of(ID,0L).complement().subtract(EquatableValueSet.of(ID,1L).complement()),EquatableValueSet.of(ID,1L));
  assertEquals(EquatableValueSet.of(ID,0L).complement().subtract(EquatableValueSet.of(ID,0L,1L)),EquatableValueSet.of(ID,0L,1L).complement());
  assertEquals(EquatableValueSet.of(ID,0L).complement().subtract(EquatableValueSet.of(ID,0L,1L).complement()),EquatableValueSet.of(ID,1L));
}
