{
  TestingTypeManager typeManager=new TestingTypeManager();
  TestingBlockEncodingSerde blockEncodingSerde=new TestingBlockEncodingSerde(typeManager);
  ObjectMapper mapper=new ObjectMapperProvider().get().registerModule(new SimpleModule().addDeserializer(Type.class,new TestingTypeDeserializer(typeManager)).addSerializer(Block.class,new TestingBlockJsonSerde.Serializer(blockEncodingSerde)).addDeserializer(Block.class,new TestingBlockJsonSerde.Deserializer(blockEncodingSerde)));
  EquatableValueSet set=EquatableValueSet.all(ID);
  assertEquals(set,mapper.readValue(mapper.writeValueAsString(set),EquatableValueSet.class));
  set=EquatableValueSet.none(ID);
  assertEquals(set,mapper.readValue(mapper.writeValueAsString(set),EquatableValueSet.class));
  set=EquatableValueSet.of(ID,1L);
  assertEquals(set,mapper.readValue(mapper.writeValueAsString(set),EquatableValueSet.class));
  set=EquatableValueSet.of(ID,1L,2L);
  assertEquals(set,mapper.readValue(mapper.writeValueAsString(set),EquatableValueSet.class));
  set=EquatableValueSet.of(ID,1L,2L).complement();
  assertEquals(set,mapper.readValue(mapper.writeValueAsString(set),EquatableValueSet.class));
}
