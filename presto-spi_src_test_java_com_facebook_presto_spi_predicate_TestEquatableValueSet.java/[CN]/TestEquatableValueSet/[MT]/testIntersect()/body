{
  Assert.assertEquals(EquatableValueSet.none(ID).intersect(EquatableValueSet.none(ID)),EquatableValueSet.none(ID));
  Assert.assertEquals(EquatableValueSet.all(ID).intersect(EquatableValueSet.all(ID)),EquatableValueSet.all(ID));
  Assert.assertEquals(EquatableValueSet.none(ID).intersect(EquatableValueSet.all(ID)),EquatableValueSet.none(ID));
  Assert.assertEquals(EquatableValueSet.none(ID).intersect(EquatableValueSet.of(ID,0L)),EquatableValueSet.none(ID));
  Assert.assertEquals(EquatableValueSet.all(ID).intersect(EquatableValueSet.of(ID,0L)),EquatableValueSet.of(ID,0L));
  Assert.assertEquals(EquatableValueSet.of(ID,0L).intersect(EquatableValueSet.of(ID,0L)),EquatableValueSet.of(ID,0L));
  Assert.assertEquals(EquatableValueSet.of(ID,0L,1L).intersect(EquatableValueSet.of(ID,0L)),EquatableValueSet.of(ID,0L));
  Assert.assertEquals(EquatableValueSet.of(ID,0L).complement().intersect(EquatableValueSet.of(ID,0L)),EquatableValueSet.none(ID));
  Assert.assertEquals(EquatableValueSet.of(ID,0L).complement().intersect(EquatableValueSet.of(ID,1L)),EquatableValueSet.of(ID,1L));
  Assert.assertEquals(EquatableValueSet.of(ID,0L).intersect(EquatableValueSet.of(ID,1L).complement()),EquatableValueSet.of(ID,0L));
  Assert.assertEquals(EquatableValueSet.of(ID,0L,1L).intersect(EquatableValueSet.of(ID,0L,2L)),EquatableValueSet.of(ID,0L));
  Assert.assertEquals(EquatableValueSet.of(ID,0L,1L).complement().intersect(EquatableValueSet.of(ID,0L,2L)),EquatableValueSet.of(ID,2L));
  Assert.assertEquals(EquatableValueSet.of(ID,0L,1L).complement().intersect(EquatableValueSet.of(ID,0L,2L).complement()),EquatableValueSet.of(ID,0L,1L,2L).complement());
}
