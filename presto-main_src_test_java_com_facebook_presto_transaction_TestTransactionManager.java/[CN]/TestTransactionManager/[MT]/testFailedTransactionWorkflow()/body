{
  try (IdleCheckExecutor executor=new IdleCheckExecutor()){
    TransactionManager transactionManager=TransactionManager.create(new TransactionManagerConfig(),executor.getExecutor(),finishingExecutor);
    Connector c1=new LegacyTransactionConnectorFactory(new TpchConnectorFactory(new InMemoryNodeManager())).create("c1",ImmutableMap.of());
    transactionManager.addConnector("c1",c1);
    TransactionId transactionId=transactionManager.beginTransaction(false);
    Assert.assertEquals(transactionManager.getAllTransactionInfos().size(),1);
    TransactionInfo transactionInfo=transactionManager.getTransactionInfo(transactionId);
    Assert.assertFalse(transactionInfo.isAutoCommitContext());
    Assert.assertTrue(transactionInfo.getConnectorIds().isEmpty());
    Assert.assertFalse(transactionInfo.getWrittenConnectorId().isPresent());
    ConnectorMetadata metadata=transactionManager.getMetadata(transactionId,"c1");
    metadata.listSchemaNames(TEST_SESSION.toConnectorSession("c1"));
    transactionInfo=transactionManager.getTransactionInfo(transactionId);
    Assert.assertEquals(transactionInfo.getConnectorIds(),ImmutableList.of("c1"));
    Assert.assertFalse(transactionInfo.getWrittenConnectorId().isPresent());
    transactionManager.fail(transactionId);
    Assert.assertEquals(transactionManager.getAllTransactionInfos().size(),1);
    try {
      transactionManager.getMetadata(transactionId,"c1");
      Assert.fail();
    }
 catch (    PrestoException e) {
      Assert.assertEquals(e.getErrorCode(),TRANSACTION_ALREADY_ABORTED.toErrorCode());
    }
    Assert.assertEquals(transactionManager.getAllTransactionInfos().size(),1);
    transactionManager.asyncAbort(transactionId).join();
    Assert.assertTrue(transactionManager.getAllTransactionInfos().isEmpty());
  }
 }
