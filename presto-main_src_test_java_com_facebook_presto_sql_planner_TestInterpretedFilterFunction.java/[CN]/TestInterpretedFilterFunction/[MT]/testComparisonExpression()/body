{
  assertFilter(new ComparisonExpression(EQUAL,longLiteral(42L),longLiteral(42L)),true);
  assertFilter(new ComparisonExpression(EQUAL,longLiteral(42L),doubleLiteral(42.0)),true);
  assertFilter(new ComparisonExpression(EQUAL,doubleLiteral(42.42),doubleLiteral(42.42)),true);
  assertFilter(new ComparisonExpression(EQUAL,stringLiteral("foo"),stringLiteral("foo")),true);
  assertFilter(new ComparisonExpression(EQUAL,longLiteral(42L),longLiteral(87L)),false);
  assertFilter(new ComparisonExpression(EQUAL,longLiteral(42L),doubleLiteral(22.2)),false);
  assertFilter(new ComparisonExpression(EQUAL,doubleLiteral(42.42),doubleLiteral(22.2)),false);
  assertFilter(new ComparisonExpression(EQUAL,stringLiteral("foo"),stringLiteral("bar")),false);
  assertFilter(new ComparisonExpression(NOT_EQUAL,longLiteral(42L),longLiteral(87L)),true);
  assertFilter(new ComparisonExpression(NOT_EQUAL,longLiteral(42L),doubleLiteral(22.2)),true);
  assertFilter(new ComparisonExpression(NOT_EQUAL,doubleLiteral(42.42),doubleLiteral(22.2)),true);
  assertFilter(new ComparisonExpression(NOT_EQUAL,stringLiteral("foo"),stringLiteral("bar")),true);
  assertFilter(new ComparisonExpression(NOT_EQUAL,longLiteral(42L),longLiteral(42L)),false);
  assertFilter(new ComparisonExpression(NOT_EQUAL,longLiteral(42L),doubleLiteral(42.0)),false);
  assertFilter(new ComparisonExpression(NOT_EQUAL,doubleLiteral(42.42),doubleLiteral(42.42)),false);
  assertFilter(new ComparisonExpression(NOT_EQUAL,stringLiteral("foo"),stringLiteral("foo")),false);
  assertFilter(new ComparisonExpression(LESS_THAN,longLiteral(42L),longLiteral(88L)),true);
  assertFilter(new ComparisonExpression(LESS_THAN,longLiteral(42L),doubleLiteral(88.8)),true);
  assertFilter(new ComparisonExpression(LESS_THAN,doubleLiteral(42.42),doubleLiteral(88.8)),true);
  assertFilter(new ComparisonExpression(LESS_THAN,stringLiteral("bar"),stringLiteral("foo")),true);
  assertFilter(new ComparisonExpression(LESS_THAN,longLiteral(88L),longLiteral(42L)),false);
  assertFilter(new ComparisonExpression(LESS_THAN,longLiteral(88L),doubleLiteral(42.42)),false);
  assertFilter(new ComparisonExpression(LESS_THAN,doubleLiteral(88.88),doubleLiteral(42.42)),false);
  assertFilter(new ComparisonExpression(LESS_THAN,stringLiteral("foo"),stringLiteral("bar")),false);
  assertFilter(new ComparisonExpression(LESS_THAN_OR_EQUAL,longLiteral(42L),longLiteral(88L)),true);
  assertFilter(new ComparisonExpression(LESS_THAN_OR_EQUAL,longLiteral(42L),doubleLiteral(88.8)),true);
  assertFilter(new ComparisonExpression(LESS_THAN_OR_EQUAL,doubleLiteral(42.42),doubleLiteral(88.8)),true);
  assertFilter(new ComparisonExpression(LESS_THAN_OR_EQUAL,stringLiteral("bar"),stringLiteral("foo")),true);
  assertFilter(new ComparisonExpression(LESS_THAN_OR_EQUAL,longLiteral(42L),longLiteral(42L)),true);
  assertFilter(new ComparisonExpression(LESS_THAN_OR_EQUAL,longLiteral(42L),doubleLiteral(42.0)),true);
  assertFilter(new ComparisonExpression(LESS_THAN_OR_EQUAL,doubleLiteral(42.42),doubleLiteral(42.42)),true);
  assertFilter(new ComparisonExpression(LESS_THAN_OR_EQUAL,stringLiteral("foo"),stringLiteral("foo")),true);
  assertFilter(new ComparisonExpression(LESS_THAN_OR_EQUAL,longLiteral(88L),longLiteral(42L)),false);
  assertFilter(new ComparisonExpression(LESS_THAN_OR_EQUAL,longLiteral(88L),doubleLiteral(42.42)),false);
  assertFilter(new ComparisonExpression(LESS_THAN_OR_EQUAL,doubleLiteral(88.88),doubleLiteral(42.42)),false);
  assertFilter(new ComparisonExpression(LESS_THAN_OR_EQUAL,stringLiteral("foo"),stringLiteral("bar")),false);
  assertFilter(new ComparisonExpression(GREATER_THAN,longLiteral(88L),longLiteral(42L)),true);
  assertFilter(new ComparisonExpression(GREATER_THAN,doubleLiteral(88.8),doubleLiteral((double)42L)),true);
  assertFilter(new ComparisonExpression(GREATER_THAN,doubleLiteral(88.8),doubleLiteral(42.42)),true);
  assertFilter(new ComparisonExpression(GREATER_THAN,stringLiteral("foo"),stringLiteral("bar")),true);
  assertFilter(new ComparisonExpression(GREATER_THAN,longLiteral(42L),longLiteral(88L)),false);
  assertFilter(new ComparisonExpression(GREATER_THAN,doubleLiteral(42.42),doubleLiteral((double)88L)),false);
  assertFilter(new ComparisonExpression(GREATER_THAN,doubleLiteral(42.42),doubleLiteral(88.88)),false);
  assertFilter(new ComparisonExpression(GREATER_THAN,stringLiteral("bar"),stringLiteral("foo")),false);
  assertFilter(new ComparisonExpression(GREATER_THAN_OR_EQUAL,longLiteral(88L),longLiteral(42L)),true);
  assertFilter(new ComparisonExpression(GREATER_THAN_OR_EQUAL,doubleLiteral(88.8),doubleLiteral((double)42L)),true);
  assertFilter(new ComparisonExpression(GREATER_THAN_OR_EQUAL,doubleLiteral(88.8),doubleLiteral(42.42)),true);
  assertFilter(new ComparisonExpression(GREATER_THAN_OR_EQUAL,stringLiteral("foo"),stringLiteral("bar")),true);
  assertFilter(new ComparisonExpression(GREATER_THAN_OR_EQUAL,longLiteral(42L),longLiteral(42L)),true);
  assertFilter(new ComparisonExpression(GREATER_THAN_OR_EQUAL,longLiteral(42L),doubleLiteral(42.0)),true);
  assertFilter(new ComparisonExpression(GREATER_THAN_OR_EQUAL,doubleLiteral(42.42),doubleLiteral(42.42)),true);
  assertFilter(new ComparisonExpression(GREATER_THAN_OR_EQUAL,stringLiteral("foo"),stringLiteral("foo")),true);
  assertFilter(new ComparisonExpression(GREATER_THAN_OR_EQUAL,longLiteral(42L),longLiteral(88L)),false);
  assertFilter(new ComparisonExpression(GREATER_THAN_OR_EQUAL,doubleLiteral(42.42),doubleLiteral((double)88L)),false);
  assertFilter(new ComparisonExpression(GREATER_THAN_OR_EQUAL,doubleLiteral(42.42),doubleLiteral(88.88)),false);
  assertFilter(new ComparisonExpression(GREATER_THAN_OR_EQUAL,stringLiteral("bar"),stringLiteral("foo")),false);
}
