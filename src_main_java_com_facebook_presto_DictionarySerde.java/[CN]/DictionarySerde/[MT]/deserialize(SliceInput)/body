{
  int totalBytes=sliceInput.available();
  sliceInput.skipBytes(totalBytes - SizeOf.SIZE_OF_INT);
  int idMapByteLength=sliceInput.readInt();
  sliceInput.setPosition(totalBytes - idMapByteLength - SizeOf.SIZE_OF_INT);
  Footer footer=Footer.deserialize(sliceInput.readSlice(idMapByteLength).input());
  final Map<Long,Slice> idMap=footer.getIdMap();
  sliceInput.setPosition(0);
  final SliceInput paylodSliceInput=sliceInput.readSlice(totalBytes - idMapByteLength - SizeOf.SIZE_OF_INT).input();
  return new Iterable<Slice>(){
    @Override public Iterator<Slice> iterator(){
      return Iterators.transform(PackedLongSerde.deserialize(paylodSliceInput).iterator(),new Function<Long,Slice>(){
        @Override public Slice apply(        Long input){
          Slice slice=idMap.get(input);
          checkNotNull(slice,"Missing entry in dictionary");
          return slice;
        }
      }
);
    }
  }
;
}
