{
  if (!rowGroupOpen) {
    openRowGroup();
  }
  if (readOffset > 0) {
    if (presentStream != null) {
      readOffset=presentStream.countBitsSet(readOffset);
    }
    if (readOffset > 0) {
      verifyFormat(dataStream != null,"Value is not null but data stream is not present");
      dataStream.skip(readOffset);
    }
  }
  SliceVector sliceVector=(SliceVector)vector;
  if (presentStream == null) {
    verifyFormat(dataStream != null,"Value is not null but data stream is not present");
    Arrays.fill(isNullVector,false);
    dataStream.nextIntVector(nextBatchSize,dataVector);
  }
 else {
    int nonNullValues=presentStream.getUnsetBits(nextBatchSize,isNullVector);
    if (nonNullValues != nextBatchSize) {
      verifyFormat(dataStream != null,"Value is not null but data stream is not present");
      dataStream.nextIntVector(nextBatchSize,dataVector,isNullVector);
    }
  }
  for (int i=0; i < nextBatchSize; i++) {
    if (!isNullVector[i]) {
      sliceVector.vector[i]=dictionary[dataVector[i]];
    }
 else {
      sliceVector.vector[i]=null;
    }
  }
  readOffset=0;
  nextBatchSize=0;
}
