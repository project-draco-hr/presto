{
  ClientSession session=clientOptions.toClientSession();
  KerberosConfig kerberosConfig=clientOptions.toKerberosConfig();
  boolean hasQuery=!Strings.isNullOrEmpty(clientOptions.execute);
  boolean isFromFile=!Strings.isNullOrEmpty(clientOptions.file);
  if (!hasQuery || !isFromFile) {
    AnsiConsole.systemInstall();
  }
  initializeLogging(clientOptions.logLevelsFile);
  String query=clientOptions.execute;
  if (hasQuery) {
    query+=";";
  }
  if (isFromFile) {
    if (hasQuery) {
      throw new RuntimeException("both --execute and --file specified");
    }
    try {
      query=Files.toString(new File(clientOptions.file),UTF_8);
      hasQuery=true;
    }
 catch (    IOException e) {
      throw new RuntimeException(format("Error reading from file %s: %s",clientOptions.file,e.getMessage()));
    }
  }
  try (QueryRunner queryRunner=QueryRunner.create(session,Optional.ofNullable(clientOptions.socksProxy),Optional.ofNullable(clientOptions.keystorePath),Optional.ofNullable(clientOptions.keystorePassword),Optional.ofNullable(clientOptions.krb5Principal),Optional.ofNullable(clientOptions.krb5RemoteServiceName),clientOptions.authenticationEnabled,kerberosConfig)){
    if (hasQuery) {
      executeCommand(queryRunner,query,clientOptions.outputFormat);
    }
 else {
      runConsole(queryRunner,session);
    }
  }
 }
