{
  try (TableNameCompleter tableNameCompleter=new TableNameCompleter(clientOptions.toClientSession());LineReader reader=new LineReader(getHistory(),tableNameCompleter)){
    StringBuilder buffer=new StringBuilder();
    while (true) {
      String prompt=PROMPT_NAME + ":" + session.getSchema();
      if (buffer.length() > 0) {
        prompt=Strings.repeat(" ",prompt.length() - 1) + "-";
      }
      String line=reader.readLine(prompt + "> ");
      if (reader.interrupted()) {
        String partial=squeezeStatement(buffer.toString());
        if (!partial.isEmpty()) {
          reader.getHistory().add(partial);
        }
        buffer=new StringBuilder();
        continue;
      }
      if (line == null) {
        return;
      }
      if (buffer.length() == 0) {
        String command=line.trim();
        if (command.endsWith(";")) {
          command=command.substring(0,command.length() - 1).trim();
        }
switch (command.toLowerCase()) {
case "exit":
case "quit":
          return;
case "help":
        System.out.println();
      System.out.println(getHelpText());
    continue;
}
}
buffer.append(line).append("\n");
StatementSplitter splitter=new StatementSplitter(buffer.toString());
for (Statement split : splitter.getCompleteStatements()) {
process(queryRunner,split.statement(),OutputFormat.PAGED);
reader.getHistory().add(squeezeStatement(split.statement()) + split.terminator());
}
buffer=new StringBuilder();
String partial=splitter.getPartialStatement();
if (!partial.isEmpty()) {
buffer.append(partial).append('\n');
}
}
}
 catch (IOException e) {
System.err.println("Readline error: " + e.getMessage());
}
}
