{
  if (object instanceof OrcStruct) {
    OrcStruct struct=(OrcStruct)object;
    int size=0;
    for (int i=0; i < struct.getNumFields(); i++) {
      size+=uncompressedSize(getFieldValue(struct,i));
    }
    return size;
  }
  if ((object == null) || (object instanceof BooleanWritable)) {
    return SIZE_OF_BYTE;
  }
  if (object instanceof LongWritable) {
    return SIZE_OF_LONG;
  }
  if (object instanceof DoubleWritable) {
    return SIZE_OF_DOUBLE;
  }
  if (object instanceof Text) {
    return ((Text)object).getLength();
  }
  if (object instanceof BytesWritable) {
    return ((BytesWritable)object).getLength();
  }
  if (object instanceof List<?>) {
    int size=0;
    for (    Object element : (Iterable<?>)object) {
      size+=uncompressedSize(element);
    }
    return size;
  }
  if (object instanceof Map<?,?>) {
    int size=0;
    for (    Map.Entry<?,?> entry : ((Map<?,?>)object).entrySet()) {
      size+=uncompressedSize(entry.getKey());
      size+=uncompressedSize(entry.getValue());
    }
    return size;
  }
  throw new IOException("Unhandled ORC object: " + object.getClass().getName());
}
