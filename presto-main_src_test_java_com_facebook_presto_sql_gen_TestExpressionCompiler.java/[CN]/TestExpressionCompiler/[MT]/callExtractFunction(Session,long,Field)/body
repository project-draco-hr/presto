{
switch (field) {
case CENTURY:
    return UnixTimeFunctions.centuryFromTimestamp(session,value);
case YEAR:
  return UnixTimeFunctions.yearFromTimestamp(session,value);
case QUARTER:
return UnixTimeFunctions.quarterFromTimestamp(session,value);
case MONTH:
return UnixTimeFunctions.monthFromTimestamp(session,value);
case WEEK:
return UnixTimeFunctions.weekFromTimestamp(session,value);
case DAY:
case DAY_OF_MONTH:
return UnixTimeFunctions.dayFromTimestamp(session,value);
case DAY_OF_WEEK:
case DOW:
return UnixTimeFunctions.dayOfWeekFromTimestamp(session,value);
case DAY_OF_YEAR:
case DOY:
return UnixTimeFunctions.dayOfYearFromTimestamp(session,value);
case HOUR:
return UnixTimeFunctions.hourFromTimestamp(session,value);
case MINUTE:
return UnixTimeFunctions.minuteFromTimestamp(session,value);
case SECOND:
return UnixTimeFunctions.secondFromTimestamp(value);
case TIMEZONE_MINUTE:
return UnixTimeFunctions.timeZoneMinuteFromTimestampWithTimeZone(packDateTimeWithZone(value,session.getTimeZoneKey()));
case TIMEZONE_HOUR:
return UnixTimeFunctions.timeZoneHourFromTimestampWithTimeZone(packDateTimeWithZone(value,session.getTimeZoneKey()));
}
throw new AssertionError("Unhandled field: " + field);
}
