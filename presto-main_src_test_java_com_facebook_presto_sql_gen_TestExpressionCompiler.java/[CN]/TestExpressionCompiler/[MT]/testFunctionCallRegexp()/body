{
  for (  String value : stringLefts) {
    for (    String pattern : stringRights) {
      assertExecute(generateExpression("regexp_like(%s, %s)",value,pattern),value == null || pattern == null ? null : RegexpFunctions.regexpLike(Slices.utf8Slice(value),RegexpFunctions.castToRegexp(Slices.utf8Slice(pattern))));
      assertExecute(generateExpression("regexp_replace(%s, %s)",value,pattern),value == null || pattern == null ? null : RegexpFunctions.regexpReplace(Slices.utf8Slice(value),RegexpFunctions.castToRegexp(Slices.utf8Slice(pattern))));
      assertExecute(generateExpression("regexp_extract(%s, %s)",value,pattern),value == null || pattern == null ? null : RegexpFunctions.regexpExtract(Slices.utf8Slice(value),RegexpFunctions.castToRegexp(Slices.utf8Slice(pattern))));
    }
  }
  Futures.allAsList(futures).get();
}
