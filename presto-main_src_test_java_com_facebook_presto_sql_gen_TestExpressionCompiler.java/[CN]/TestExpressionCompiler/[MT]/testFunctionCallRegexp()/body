{
  for (  String value : stringLefts) {
    for (    String pattern : stringRights) {
      assertExecute(generateExpression("regexp_like(%s, %s)",value,pattern),BOOLEAN,value == null || pattern == null ? null : JoniRegexpFunctions.regexpLike(utf8Slice(value),joniRegexp(utf8Slice(pattern))));
      assertExecute(generateExpression("regexp_replace(%s, %s)",value,pattern),VARCHAR,value == null || pattern == null ? null : JoniRegexpFunctions.regexpReplace(utf8Slice(value),joniRegexp(utf8Slice(pattern))));
      assertExecute(generateExpression("regexp_extract(%s, %s)",value,pattern),VARCHAR,value == null || pattern == null ? null : JoniRegexpFunctions.regexpExtract(utf8Slice(value),joniRegexp(utf8Slice(pattern))));
    }
  }
  Futures.allAsList(futures).get();
}
