{
switch (field) {
case YEAR:
    return DateTimeFunctions.yearFromTimestamp(session,value);
case QUARTER:
  return DateTimeFunctions.quarterFromTimestamp(session,value);
case MONTH:
return DateTimeFunctions.monthFromTimestamp(session,value);
case WEEK:
return DateTimeFunctions.weekFromTimestamp(session,value);
case DAY:
case DAY_OF_MONTH:
return DateTimeFunctions.dayFromTimestamp(session,value);
case DAY_OF_WEEK:
case DOW:
return DateTimeFunctions.dayOfWeekFromTimestamp(session,value);
case YEAR_OF_WEEK:
case YOW:
return DateTimeFunctions.yearOfWeekFromTimestamp(session,value);
case DAY_OF_YEAR:
case DOY:
return DateTimeFunctions.dayOfYearFromTimestamp(session,value);
case HOUR:
return DateTimeFunctions.hourFromTimestamp(session,value);
case MINUTE:
return DateTimeFunctions.minuteFromTimestamp(session,value);
case SECOND:
return DateTimeFunctions.secondFromTimestamp(value);
case TIMEZONE_MINUTE:
return DateTimeFunctions.timeZoneMinuteFromTimestampWithTimeZone(packDateTimeWithZone(value,session.getTimeZoneKey()));
case TIMEZONE_HOUR:
return DateTimeFunctions.timeZoneHourFromTimestampWithTimeZone(packDateTimeWithZone(value,session.getTimeZoneKey()));
}
throw new AssertionError("Unhandled field: " + field);
}
