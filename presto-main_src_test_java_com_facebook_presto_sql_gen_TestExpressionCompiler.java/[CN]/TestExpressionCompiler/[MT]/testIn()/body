{
  for (  Boolean value : booleanValues) {
    assertExecute(generateExpression("%s in (true)",value),value == null ? null : value == Boolean.TRUE);
    assertExecute(generateExpression("%s in (false)",value),value == null ? null : value == Boolean.FALSE);
  }
  for (  Long value : longLefts) {
    List<Long> testValues=Arrays.asList(33L,9L,-9L,-33L);
    assertExecute(generateExpression("%s in (33, 9, -9, -33)",value),value == null ? null : testValues.contains(value));
  }
  for (  Double value : doubleLefts) {
    List<Double> testValues=Arrays.asList(33.0,9.0,-9.0,-33.0);
    assertExecute(generateExpression("%s in (33.0, 9.0, -9.0, -33.0)",value),value == null ? null : testValues.contains(value));
    testValues=Arrays.asList(33.0,cos(9.0),cos(-9.0),-33.0);
    assertExecute(generateExpression("cos(%s) in (33.0, cos(9.0), cos(-9.0), -33.0)",value),value == null ? null : testValues.contains(cos(value)));
  }
  for (  String value : stringLefts) {
    List<String> testValues=Arrays.asList("what?","foo","mellow","end");
    assertExecute(generateExpression("%s in ('what?', 'foo', 'mellow', 'end')",value),value == null ? null : testValues.contains(value));
  }
  Futures.allAsList(futures).get();
}
