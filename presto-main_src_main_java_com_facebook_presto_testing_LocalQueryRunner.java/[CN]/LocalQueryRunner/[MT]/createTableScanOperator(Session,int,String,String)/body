{
  TableHandle tableHandle=metadata.getTableHandle(session,new QualifiedTableName(session.getCatalog(),session.getSchema(),tableName)).orElse(null);
  checkArgument(tableHandle != null,"Table %s does not exist",tableName);
  Map<String,ColumnHandle> allColumnHandles=metadata.getColumnHandles(tableHandle);
  ImmutableList.Builder<ColumnHandle> columnHandlesBuilder=ImmutableList.builder();
  ImmutableList.Builder<Type> columnTypesBuilder=ImmutableList.builder();
  for (  String columnName : columnNames) {
    ColumnHandle columnHandle=allColumnHandles.get(columnName);
    checkArgument(columnHandle != null,"Table %s does not have a column %s",tableName,columnName);
    columnHandlesBuilder.add(columnHandle);
    ColumnMetadata columnMetadata=metadata.getColumnMetadata(tableHandle,columnHandle);
    columnTypesBuilder.add(columnMetadata.getType());
  }
  final List<ColumnHandle> columnHandles=columnHandlesBuilder.build();
  final List<Type> columnTypes=columnTypesBuilder.build();
  final Split split=getLocalQuerySplit(tableHandle);
  return new OperatorFactory(){
    @Override public List<Type> getTypes(){
      return columnTypes;
    }
    @Override public Operator createOperator(    DriverContext driverContext){
      OperatorContext operatorContext=driverContext.addOperatorContext(operatorId,"BenchmarkSource");
      ConnectorPageSource pageSource=pageSourceManager.createPageSource(split,columnHandles);
      return new PageSourceOperator(pageSource,columnTypes,operatorContext);
    }
    @Override public void close(){
    }
  }
;
}
