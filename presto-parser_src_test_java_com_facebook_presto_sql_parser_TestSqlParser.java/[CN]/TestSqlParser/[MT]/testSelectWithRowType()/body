{
  assertStatement("SELECT col1.f1, col2, col3.f1.f2.f3 FROM table1",new Query(Optional.empty(),new QuerySpecification(selectList(new DereferenceExpression(new QualifiedNameReference(QualifiedName.of("col1")),"f1"),new QualifiedNameReference(QualifiedName.of("col2")),new DereferenceExpression(new DereferenceExpression(new DereferenceExpression(new QualifiedNameReference(QualifiedName.of("col3")),"f1"),"f2"),"f3")),Optional.of(new Table(QualifiedName.of("table1"))),Optional.empty(),Optional.empty(),Optional.empty(),ImmutableList.of(),Optional.empty()),ImmutableList.<SortItem>of(),Optional.empty(),Optional.empty()));
  assertStatement("SELECT col1.f1[0], col2, col3[2].f2.f3, col4[4] FROM table1",new Query(Optional.empty(),new QuerySpecification(selectList(new SubscriptExpression(new DereferenceExpression(new QualifiedNameReference(QualifiedName.of("col1")),"f1"),new LongLiteral("0")),new QualifiedNameReference(QualifiedName.of("col2")),new DereferenceExpression(new DereferenceExpression(new SubscriptExpression(new QualifiedNameReference(QualifiedName.of("col3")),new LongLiteral("2")),"f2"),"f3"),new SubscriptExpression(new QualifiedNameReference(QualifiedName.of("col4")),new LongLiteral("4"))),Optional.of(new Table(QualifiedName.of("table1"))),Optional.empty(),Optional.empty(),Optional.empty(),ImmutableList.of(),Optional.empty()),ImmutableList.<SortItem>of(),Optional.empty(),Optional.empty()));
  assertStatement("SELECT test_row(11, 12).col0",new Query(Optional.empty(),new QuerySpecification(selectList(new DereferenceExpression(new FunctionCall(QualifiedName.of("test_row"),Lists.newArrayList(new LongLiteral("11"),new LongLiteral("12"))),"col0")),Optional.empty(),Optional.empty(),Optional.empty(),Optional.empty(),ImmutableList.of(),Optional.empty()),ImmutableList.<SortItem>of(),Optional.empty(),Optional.empty()));
}
