{
  Type type=types.get("E");
  MethodHandle methodHandle;
  if (type.getJavaType() == boolean.class) {
    methodHandle=METHOD_HANDLE_BOOLEAN;
  }
 else   if (type.getJavaType() == long.class) {
    methodHandle=METHOD_HANDLE_LONG;
  }
 else   if (type.getJavaType() == double.class) {
    methodHandle=METHOD_HANDLE_DOUBLE;
  }
 else   if (type.getJavaType() == Slice.class) {
    methodHandle=METHOD_HANDLE_SLICE;
  }
 else {
    methodHandle=METHOD_HANDLE_OBJECT;
  }
  methodHandle=methodHandle.bindTo(type);
  TypeSignature typeSignature=type.getTypeSignature();
  TypeSignature returnType=parameterizedTypeName("array",typeSignature);
  Signature signature=new Signature(FUNCTION_NAME,returnType,typeSignature,returnType);
  return new FunctionInfo(signature,getDescription(),isHidden(),methodHandle,isDeterministic(),false,ImmutableList.of(false,false));
}
