{
  ImmutableSet.Builder<Slot> expectedInputs=ImmutableSet.<Slot>builder().addAll(node.getGroupBy());
  ImmutableMap.Builder<Slot,FunctionInfo> functionInfos=ImmutableMap.builder();
  ImmutableMap.Builder<Slot,FunctionCall> functionCalls=ImmutableMap.builder();
  for (  Map.Entry<Slot,FunctionCall> entry : node.getAggregations().entrySet()) {
    Slot slot=entry.getKey();
    if (expectedOutputs.contains(slot)) {
      FunctionCall call=entry.getValue();
      expectedInputs.addAll(new DependencyExtractor().extract(call));
      functionCalls.put(slot,call);
      functionInfos.put(slot,node.getFunctionInfos().get(slot));
    }
  }
  PlanNode source=node.getSource().accept(this,expectedInputs.build());
  return new AggregationNode(source,node.getGroupBy(),functionCalls.build(),functionInfos.build());
}
