{
  ImmutableSet.Builder<Slot> expectedInputs=ImmutableSet.builder();
  ImmutableMap.Builder<Slot,Expression> builder=ImmutableMap.<Slot,Expression>builder();
  for (int i=0; i < node.getOutputs().size(); i++) {
    Slot output=node.getOutputs().get(i);
    Expression expression=node.getExpressions().get(i);
    if (expectedOutputs.contains(output)) {
      expectedInputs.addAll(new DependencyExtractor().extract(expression));
      builder.put(output,expression);
    }
  }
  PlanNode source=Iterables.getOnlyElement(node.getSources()).accept(this,expectedInputs.build());
  return new ProjectNode(source,builder.build());
}
