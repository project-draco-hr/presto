{
  ImmutableList.Builder<PlanNode> sources=ImmutableList.builder();
  ImmutableList.Builder<Slot> outputs=ImmutableList.builder();
  for (int i=0; i < node.getSources().size(); i++) {
    PlanNode source=node.getSources().get(i);
    Slot slot=node.getOutputs().get(i);
    if (expectedOutputs.contains(slot) || expectedOutputs.isEmpty() && (slot.getType() == Type.LONG || slot.getType() == Type.DOUBLE)) {
      sources.add(source);
      outputs.add(slot);
      if (expectedOutputs.isEmpty()) {
        break;
      }
    }
  }
  List<PlanNode> sourceNodes=sources.build();
  List<Slot> outputSlots=outputs.build();
  if (sourceNodes.isEmpty()) {
    sourceNodes=ImmutableList.of(node.getSources().get(0));
    outputSlots=ImmutableList.of(node.getOutputs().get(0));
  }
  return new AlignNode(sourceNodes,outputSlots);
}
