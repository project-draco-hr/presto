{
  List<String> partitionsToFetch=new ArrayList<>();
  Partition[] partitions=new Partition[partitionNames.size()];
  for (int i=0; i < partitionNames.size(); i++) {
    String partitionName=partitionNames.get(i);
    Partition partition=partitionCache.getIfPresent(QualifiedPartitionName.partition(databaseName,tableName,partitionName));
    if (partition == null) {
      partitionsToFetch.add(partitionName);
    }
 else {
      partitions[i]=partition;
    }
  }
  if (!partitionsToFetch.isEmpty()) {
    List<Partition> fetchedPartitions;
    try (HiveMetastoreClient client=clientProvider.createMetastoreClient()){
      fetchedPartitions=client.get_partitions_by_names(databaseName,tableName,partitionsToFetch);
    }
 catch (    TException|MetaException e) {
      throw Throwables.propagate(e);
    }
    checkState(fetchedPartitions.size() == partitionsToFetch.size());
    for (int i=0; i < fetchedPartitions.size(); i++) {
      partitionCache.put(QualifiedPartitionName.partition(databaseName,tableName,partitionsToFetch.get(i)),fetchedPartitions.get(i));
    }
    Iterator<Partition> fetchedPartitionsIterator=fetchedPartitions.iterator();
    for (int i=0; i < partitionNames.size(); i++) {
      if (partitions[i] == null) {
        checkState(fetchedPartitionsIterator.hasNext(),"iterator should always have next");
        partitions[i]=fetchedPartitionsIterator.next();
      }
    }
    checkState(!fetchedPartitionsIterator.hasNext(),"iterator not have any more elements");
  }
  return ImmutableList.copyOf(partitions);
}
