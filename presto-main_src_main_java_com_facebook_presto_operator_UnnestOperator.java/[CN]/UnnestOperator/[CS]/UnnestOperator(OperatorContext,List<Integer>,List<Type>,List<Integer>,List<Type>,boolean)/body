{
  this.operatorContext=requireNonNull(operatorContext,"operatorContext is null");
  this.replicateChannels=ImmutableList.copyOf(requireNonNull(replicateChannels,"replicateChannels is null"));
  this.replicateTypes=ImmutableList.copyOf(requireNonNull(replicateTypes,"replicateTypes is null"));
  this.unnestChannels=ImmutableList.copyOf(requireNonNull(unnestChannels,"unnestChannels is null"));
  this.unnestTypes=ImmutableList.copyOf(requireNonNull(unnestTypes,"unnestTypes is null"));
  this.withOrdinality=withOrdinality;
  checkArgument(replicateChannels.size() == replicateTypes.size(),"replicate channels or types has wrong size");
  checkArgument(unnestChannels.size() == unnestTypes.size(),"unnest channels or types has wrong size");
  ImmutableList.Builder<Type> outputTypesBuilder=ImmutableList.<Type>builder().addAll(replicateTypes).addAll(getUnnestedTypes(unnestTypes));
  if (withOrdinality) {
    outputTypesBuilder.add(BIGINT);
  }
  this.outputTypes=outputTypesBuilder.build();
  this.pageBuilder=new PageBuilder(outputTypes);
  this.unnesters=new ArrayList<>();
}
