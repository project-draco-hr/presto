{
  this.operatorId=operatorId;
  this.replicateChannels=ImmutableList.copyOf(checkNotNull(replicateChannels,"replicateChannels is null"));
  this.replicateTypes=ImmutableList.copyOf(checkNotNull(replicateTypes,"replicateTypes is null"));
  checkArgument(replicateChannels.size() == replicateTypes.size(),"replicateChannels and replicateTypes do not match");
  this.unnestChannels=ImmutableList.copyOf(checkNotNull(unnestChannels,"unnestChannels is null"));
  this.unnestTypes=ImmutableList.copyOf(checkNotNull(unnestTypes,"unnestTypes is null"));
  checkArgument(unnestChannels.size() == unnestTypes.size(),"unnestChannels and unnestTypes do not match");
  this.withOrdinality=withOrdinality;
  ImmutableList.Builder<Type> typesBuilder=ImmutableList.<Type>builder().addAll(replicateTypes).addAll(getUnnestedTypes(unnestTypes));
  if (withOrdinality) {
    typesBuilder.add(BIGINT);
  }
  this.types=typesBuilder.build();
}
