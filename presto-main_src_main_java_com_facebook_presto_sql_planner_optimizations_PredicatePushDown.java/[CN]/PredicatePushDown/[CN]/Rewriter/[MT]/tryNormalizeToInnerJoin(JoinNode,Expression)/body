{
  Preconditions.checkArgument(EnumSet.of(INNER,RIGHT,LEFT,FULL).contains(node.getType()),"Unsupported join type: %s",node.getType());
  if (node.getType() == JoinNode.Type.INNER) {
    return node;
  }
  if (node.getType() == JoinNode.Type.FULL) {
    boolean canConvertToLeftJoin=canConvertOuterToInner(node.getLeft().getOutputSymbols(),inheritedPredicate);
    boolean canConvertToRightJoin=canConvertOuterToInner(node.getRight().getOutputSymbols(),inheritedPredicate);
    if (!canConvertToLeftJoin && !canConvertToRightJoin) {
      return node;
    }
    if (canConvertToLeftJoin && canConvertToRightJoin) {
      return new JoinNode(node.getId(),INNER,node.getLeft(),node.getRight(),node.getCriteria(),node.getLeftHashSymbol(),node.getRightHashSymbol());
    }
 else {
      return new JoinNode(node.getId(),canConvertToLeftJoin ? LEFT : RIGHT,node.getLeft(),node.getRight(),node.getCriteria(),node.getLeftHashSymbol(),node.getRightHashSymbol());
    }
  }
  if (node.getType() == JoinNode.Type.LEFT && !canConvertOuterToInner(node.getRight().getOutputSymbols(),inheritedPredicate) || node.getType() == JoinNode.Type.RIGHT && !canConvertOuterToInner(node.getLeft().getOutputSymbols(),inheritedPredicate)) {
    return node;
  }
  return new JoinNode(node.getId(),JoinNode.Type.INNER,node.getLeft(),node.getRight(),node.getCriteria(),node.getLeftHashSymbol(),node.getRightHashSymbol());
}
