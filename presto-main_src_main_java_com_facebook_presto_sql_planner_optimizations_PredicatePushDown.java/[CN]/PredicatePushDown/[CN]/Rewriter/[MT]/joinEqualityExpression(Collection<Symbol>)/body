{
  return new Predicate<Expression>(){
    @Override public boolean apply(    Expression expression){
      if (isDeterministic(expression) && expression instanceof ComparisonExpression) {
        ComparisonExpression comparison=(ComparisonExpression)expression;
        if (comparison.getType() == ComparisonExpression.Type.EQUAL) {
          Set<Symbol> symbols1=DependencyExtractor.extractUnique(comparison.getLeft());
          Set<Symbol> symbols2=DependencyExtractor.extractUnique(comparison.getRight());
          return (Iterables.all(symbols1,in(leftSymbols)) && Iterables.all(symbols2,not(in(leftSymbols)))) || (Iterables.all(symbols2,in(leftSymbols)) && Iterables.all(symbols1,not(in(leftSymbols))));
        }
      }
      return false;
    }
  }
;
}
