{
  boolean modified=false;
  ImmutableList.Builder<PlanNode> builder=ImmutableList.builder();
  for (int i=0; i < node.getSources().size(); i++) {
    Expression sourcePredicate=ExpressionTreeRewriter.rewriteWith(new ExpressionSymbolInliner(node.sourceSymbolMap(i)),context.get());
    PlanNode source=node.getSources().get(i);
    PlanNode rewrittenSource=context.rewrite(source,sourcePredicate);
    if (rewrittenSource != source) {
      modified=true;
    }
    builder.add(rewrittenSource);
  }
  if (modified) {
    return new UnionNode(node.getId(),builder.build(),node.getSymbolMapping());
  }
  return node;
}
