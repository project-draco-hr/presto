{
  checkNotNull(partitions,"partitions is null");
  if (partitions.isEmpty()) {
    return ImmutableList.of();
  }
  Partition partition=Iterables.getOnlyElement(partitions);
  checkArgument(partition instanceof InformationSchemaPartition,"Partition must be an informationSchema partition");
  InformationSchemaPartition informationSchemaPartition=(InformationSchemaPartition)partition;
  List<HostAddress> localAddress=ImmutableList.of(nodeManager.getCurrentNode().getHostAndPort());
  ImmutableMap.Builder<String,Object> filters=ImmutableMap.builder();
  for (  Entry<ColumnHandle,Comparable<?>> entry : informationSchemaPartition.getFilters().entrySet()) {
    InformationSchemaColumnHandle informationSchemaColumnHandle=(InformationSchemaColumnHandle)entry.getKey();
    filters.put(informationSchemaColumnHandle.getColumnName(),entry.getValue());
  }
  Split split=new InformationSchemaSplit(informationSchemaPartition.table,filters.build(),localAddress);
  return ImmutableList.of(split);
}
