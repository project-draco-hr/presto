{
  TableMetadata tableMeta=getTableMetadata(tableName);
  List<String> columnNames=new ArrayList<>();
  for (  ColumnMetadata columnMetadata : tableMeta.getColumns()) {
    columnNames.add(columnMetadata.getName());
  }
  String comment=tableMeta.getOptions().getComment();
  Set<String> hiddenColumns=ImmutableSet.of();
  if (comment != null && comment.startsWith(PRESTO_COMMENT_METADATA)) {
    String columnOrderingString=comment.substring(PRESTO_COMMENT_METADATA.length());
    List<ExtraColumnMetadata> extras=extraColumnMetadataCodec.fromJson(columnOrderingString);
    List<String> explicitColumnOrder=new ArrayList<>(ImmutableList.copyOf(transform(extras,nameGetter())));
    hiddenColumns=ImmutableSet.copyOf(transform(filter(extras,hiddenPredicate()),nameGetter()));
    Iterables.addAll(explicitColumnOrder,filter(columnNames,not(in(explicitColumnOrder))));
    columnNames=Ordering.explicit(explicitColumnOrder).sortedCopy(columnNames);
  }
  ImmutableList.Builder<CassandraColumnHandle> columnHandles=ImmutableList.builder();
  Set<String> primaryKeySet=new HashSet<>();
  for (  ColumnMetadata columnMeta : tableMeta.getPartitionKey()) {
    primaryKeySet.add(columnMeta.getName());
    boolean hidden=hiddenColumns.contains(columnMeta.getName());
    CassandraColumnHandle columnHandle=buildColumnHandle(columnMeta,true,false,columnNames.indexOf(columnMeta.getName()),hidden);
    columnHandles.add(columnHandle);
  }
  for (  ColumnMetadata columnMeta : tableMeta.getClusteringColumns()) {
    primaryKeySet.add(columnMeta.getName());
    boolean hidden=hiddenColumns.contains(columnMeta.getName());
    CassandraColumnHandle columnHandle=buildColumnHandle(columnMeta,false,true,columnNames.indexOf(columnMeta.getName()),hidden);
    columnHandles.add(columnHandle);
  }
  for (  ColumnMetadata columnMeta : tableMeta.getColumns()) {
    if (!primaryKeySet.contains(columnMeta.getName())) {
      boolean hidden=hiddenColumns.contains(columnMeta.getName());
      CassandraColumnHandle columnHandle=buildColumnHandle(columnMeta,false,false,columnNames.indexOf(columnMeta.getName()),hidden);
      columnHandles.add(columnHandle);
    }
  }
  List<CassandraColumnHandle> sortedColumnHandles=Ordering.natural().onResultOf(new Function<CassandraColumnHandle,Integer>(){
    @Nullable @Override public Integer apply(    CassandraColumnHandle columnHandle){
      return columnHandle.getOrdinalPosition();
    }
  }
).sortedCopy(columnHandles.build());
  CassandraTableHandle tableHandle=new CassandraTableHandle(connectorId,tableMeta.getKeyspace().getName(),tableMeta.getName());
  return new CassandraTable(tableHandle,sortedColumnHandles);
}
