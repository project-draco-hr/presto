{
  CassandraTableHandle tableHandle=table.getTableHandle();
  List<CassandraColumnHandle> partitionKeyColumns=table.getPartitionKeyColumns();
  boolean fullPartitionKey=filterPrefix.size() == partitionKeyColumns.size();
  ResultSetFuture countFuture;
  if (!fullPartitionKey) {
    Select countAll=CassandraCqlUtils.selectCountAllFrom(tableHandle).limit(limitForPartitionKeySelect);
    countFuture=session.executeAsync(countAll);
  }
 else {
    countFuture=null;
  }
  int limit=fullPartitionKey ? 1 : limitForPartitionKeySelect;
  Select partitionKeys=CassandraCqlUtils.selectDistinctFrom(tableHandle,partitionKeyColumns);
  partitionKeys.limit(limit);
  partitionKeys.setFetchSize(fetchSizeForPartitionKeySelect);
  if (!fullPartitionKey) {
    addWhereClause(partitionKeys.where(),partitionKeyColumns,new ArrayList<Comparable<?>>());
    ResultSetFuture partitionKeyFuture=session.executeAsync(partitionKeys);
    long count=countFuture.getUninterruptibly().one().getLong(0);
    if (count == limitForPartitionKeySelect) {
      partitionKeyFuture.cancel(true);
      return null;
    }
 else {
      return partitionKeyFuture.getUninterruptibly();
    }
  }
 else {
    addWhereClause(partitionKeys.where(),partitionKeyColumns,filterPrefix);
    ResultSetFuture partitionKeyFuture=session.executeAsync(partitionKeys);
    return partitionKeyFuture.getUninterruptibly();
  }
}
