{
  long result=0;
  result+=multiplyBaseline(leftOperand0,rightOperand0);
  result+=multiplyBaseline(leftOperand1,rightOperand0);
  result+=multiplyBaseline(leftOperand2,rightOperand0);
  result+=multiplyBaseline(leftOperand3,rightOperand0);
  result+=multiplyBaseline(leftOperand4,rightOperand0);
  result+=multiplyBaseline(leftOperand0,rightOperand1);
  result+=multiplyBaseline(leftOperand1,rightOperand1);
  result+=multiplyBaseline(leftOperand2,rightOperand1);
  result+=multiplyBaseline(leftOperand3,rightOperand1);
  result+=multiplyBaseline(leftOperand4,rightOperand1);
  result+=multiplyBaseline(leftOperand0,rightOperand2);
  result+=multiplyBaseline(leftOperand1,rightOperand2);
  result+=multiplyBaseline(leftOperand2,rightOperand2);
  result+=multiplyBaseline(leftOperand3,rightOperand2);
  result+=multiplyBaseline(leftOperand4,rightOperand2);
  result+=multiplyBaseline(leftOperand0,rightOperand3);
  result+=multiplyBaseline(leftOperand1,rightOperand3);
  result+=multiplyBaseline(leftOperand2,rightOperand3);
  result+=multiplyBaseline(leftOperand3,rightOperand3);
  result+=multiplyBaseline(leftOperand4,rightOperand3);
  result+=multiplyBaseline(leftOperand0,rightOperand4);
  result+=multiplyBaseline(leftOperand1,rightOperand4);
  result+=multiplyBaseline(leftOperand2,rightOperand4);
  result+=multiplyBaseline(leftOperand3,rightOperand4);
  result+=multiplyBaseline(leftOperand4,rightOperand4);
  return result;
}
