{
  try {
    TaskInfo taskInfo=getTaskInfo();
    if (response.getStatusCode() == HttpStatus.OK.code() && response.hasValue()) {
      updateTaskInfo(response.getValue());
      lastSuccessfulRequest.set(System.nanoTime());
      errorCount.set(0);
      errorsSinceLastSuccess.clear();
      acknowledgeSources(sources);
    }
 else     if (response.getStatusCode() == HttpStatus.SERVICE_UNAVAILABLE.code()) {
      requestFailed(startTime,new RuntimeException("Server at %s returned SERVICE_UNAVAILABLE"));
    }
 else {
      Exception cause=response.getException();
      if (cause == null) {
        cause=new RuntimeException(String.format("Expected response code from %s to be %s, but was %s: %s",taskInfo.getSelf(),HttpStatus.OK.code(),response.getStatusCode(),response.getStatusMessage()));
      }
      log.debug(cause,"Remote task failed: %s",taskInfo.getSelf());
      failTask(cause);
    }
  }
 catch (  Throwable t) {
    if (!(t instanceof CancellationException)) {
      setException(t);
      requestFailed(startTime,t);
    }
  }
 finally {
    set(null);
    updateIfNecessary();
  }
}
