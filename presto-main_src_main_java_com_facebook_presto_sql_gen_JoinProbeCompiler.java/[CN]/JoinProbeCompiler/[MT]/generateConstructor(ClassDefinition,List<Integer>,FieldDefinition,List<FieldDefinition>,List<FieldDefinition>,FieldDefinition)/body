{
  Block constructor=classDefinition.declareConstructor(new CompilerContext(bootstrapMethod),a(PUBLIC),arg("lookupSource",LookupSource.class),arg("page",Page.class)).getBody().comment("super();").pushThis().invokeConstructor(Object.class);
  constructor.comment("this.lookupSource = lookupSource;");
  constructor.pushThis().getVariable("lookupSource").putField(lookupSourceField);
  constructor.comment("Set cursor fields");
  for (int index=0; index < cursorFields.size(); index++) {
    constructor.pushThis().getVariable("page").push(index).invokeVirtual(Page.class,"getBlock",com.facebook.presto.spi.block.Block.class,int.class).invokeInterface(com.facebook.presto.spi.block.Block.class,"cursor",BlockCursor.class).putField(cursorFields.get(index));
  }
  constructor.comment("Set probe channel fields");
  for (int index=0; index < probeChannelFields.size(); index++) {
    constructor.pushThis().pushThis().getField(cursorFields.get(probeChannels.get(index))).putField(probeChannelFields.get(index));
  }
  constructor.comment("this.probeCursors = new BlockCursor[<probeChannelCount>];");
  constructor.pushThis().push(probeChannelFields.size()).newArray(BlockCursor.class).putField(probeCursorsArrayField);
  for (int index=0; index < probeChannelFields.size(); index++) {
    constructor.pushThis().getField(probeCursorsArrayField).push(index).pushThis().getField(probeChannelFields.get(index)).putObjectArrayElement();
  }
  constructor.ret();
}
