{
  CompilerContext context=new CompilerContext(BOOTSTRAP_METHOD);
  Block constructor=classDefinition.declareConstructor(context,a(PUBLIC),arg("lookupSource",LookupSource.class),arg("page",Page.class)).getBody().comment("super();").pushThis().invokeConstructor(Object.class);
  constructor.comment("this.lookupSource = lookupSource;").append(context.getVariable("this").setField(lookupSourceField,context.getVariable("lookupSource")));
  constructor.comment("this.positionCount = page.getPositionCount();").append(context.getVariable("this").setField(positionCountField,context.getVariable("page").invoke("getPositionCount",int.class)));
  constructor.comment("Set block fields");
  for (int index=0; index < blockFields.size(); index++) {
    constructor.append(context.getVariable("this").setField(blockFields.get(index),context.getVariable("page").invoke("getBlock",com.facebook.presto.spi.block.Block.class,constantInt(index))));
  }
  constructor.comment("Set probe channel fields");
  for (int index=0; index < probeChannelFields.size(); index++) {
    constructor.append(context.getVariable("this").setField(probeChannelFields.get(index),context.getVariable("this").getField(blockFields.get(probeChannels.get(index)))));
  }
  constructor.comment("this.probeBlocks = new Block[<probeChannelCount>];");
  constructor.pushThis().push(probeChannelFields.size()).newArray(com.facebook.presto.spi.block.Block.class).putField(probeBlocksArrayField);
  for (int index=0; index < probeChannelFields.size(); index++) {
    constructor.pushThis().getField(probeBlocksArrayField).push(index).pushThis().getField(probeChannelFields.get(index)).putObjectArrayElement();
  }
  constructor.comment("this.position = -1;").append(context.getVariable("this").setField(positionField,constantInt(-1)));
  constructor.ret();
}
