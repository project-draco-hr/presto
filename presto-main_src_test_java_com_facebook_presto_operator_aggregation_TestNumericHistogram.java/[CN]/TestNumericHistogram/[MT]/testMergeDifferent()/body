{
  NumericHistogram histogram1=new NumericHistogram(10,3);
  NumericHistogram histogram2=new NumericHistogram(10,3);
  for (int i=0; i < 1000; i++) {
    histogram1.add(i);
    histogram2.add(i + 1000);
  }
  NumericHistogram expected=new NumericHistogram(10,1000);
  for (  Map.Entry<Double,Double> entry : histogram1.getBuckets().entrySet()) {
    expected.add(entry.getKey(),entry.getValue());
  }
  for (  Map.Entry<Double,Double> entry : histogram2.getBuckets().entrySet()) {
    expected.add(entry.getKey(),entry.getValue());
  }
  expected.compact();
  histogram1.mergeWith(histogram2);
  assertEquals(histogram1.getBuckets(),expected.getBuckets());
}
