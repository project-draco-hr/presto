{
  HadoopNative.requireHadoopNative();
  ReaderWriterProfiler.setProfilerOptions(JOB_CONF);
  JOB_CONF.set(IOConstants.COLUMNS,Joiner.on(',').join(transform(COLUMNS,columnNameGetter())));
  DATA_DIR.mkdirs();
  List<BenchmarkFile> benchmarkFiles=ImmutableList.of(new BenchmarkFile("orc","orc",new org.apache.hadoop.hive.ql.io.orc.OrcInputFormat(),new org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat(),new org.apache.hadoop.hive.ql.io.orc.OrcSerde(),null,new OrcRecordCursorProvider()),new BenchmarkFile("rc binary gzip","rc-binary.gz",new RCFileInputFormat<>(),new RCFileOutputFormat(),new LazyBinaryColumnarSerDe(),"gzip",new ColumnarBinaryHiveRecordCursorProvider()),new BenchmarkFile("parquet gzip","parquet.gz",new MapredParquetInputFormat(),new MapredParquetOutputFormat(),new ParquetHiveSerDe(),"gzip",new ParquetRecordCursorProvider()),new BenchmarkFile("dwrf","dwrf",new com.facebook.hive.orc.OrcInputFormat(),new com.facebook.hive.orc.OrcOutputFormat(),new com.facebook.hive.orc.OrcSerde(),null,new DwrfRecordCursorProvider()));
  if (!benchmarkWriteSpeed) {
    for (    BenchmarkFile benchmarkFile : benchmarkFiles) {
      if (!benchmarkFile.getFile().exists()) {
        writeLineItems(benchmarkFile.getFile(),benchmarkFile.getOutputFormat(),benchmarkFile.getSerDe(),benchmarkFile.getCompressionCodec(),COLUMNS);
      }
    }
  }
  for (int run=0; run < 2; run++) {
    System.out.println("==== Run " + run + " ====");
    if (benchmarkWriteSpeed) {
      benchmarkWrite(benchmarkFiles,2);
    }
    if (benchmarkReadSpeed) {
      benchmarkRead(benchmarkFiles,1);
    }
  }
}
