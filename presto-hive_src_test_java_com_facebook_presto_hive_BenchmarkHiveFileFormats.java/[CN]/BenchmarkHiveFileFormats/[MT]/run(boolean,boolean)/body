{
  HadoopNative.requireHadoopNative();
  ReaderWriterProfiler.setProfilerOptions(JOB_CONF);
  DATA_DIR.mkdirs();
  List<BenchmarkFile> benchmarkFiles=ImmutableList.<BenchmarkFile>builder().add(new BenchmarkFile("rc-binary",new RCFileInputFormat<>(),new RCFileOutputFormat(),new LazyBinaryColumnarSerDe(),ImmutableList.<HiveRecordCursorProvider>builder().add(new ColumnarBinaryHiveRecordCursorProvider()).build(),ImmutableList.<HivePageSourceFactory>builder().add(new RcFilePageSourceFactory(TYPE_MANAGER)).build())).add(new BenchmarkFile("rc-text",new RCFileInputFormat<>(),new RCFileOutputFormat(),new ColumnarSerDe(),ImmutableList.<HiveRecordCursorProvider>builder().add(new ColumnarTextHiveRecordCursorProvider()).build(),ImmutableList.<HivePageSourceFactory>builder().add(new RcFilePageSourceFactory(TYPE_MANAGER)).build())).add(new BenchmarkFile("parquet",new MapredParquetInputFormat(),new MapredParquetOutputFormat(),new ParquetHiveSerDe(),ImmutableList.<HiveRecordCursorProvider>builder().add(new ParquetRecordCursorProvider(false)).build(),ImmutableList.<HivePageSourceFactory>builder().build())).add(new BenchmarkFile("dwrf",new com.facebook.hive.orc.OrcInputFormat(),new com.facebook.hive.orc.OrcOutputFormat(),new com.facebook.hive.orc.OrcSerde(),ImmutableList.<HiveRecordCursorProvider>builder().add(new DwrfRecordCursorProvider()).build(),ImmutableList.<HivePageSourceFactory>builder().add(new DwrfPageSourceFactory(TYPE_MANAGER)).build())).add(new BenchmarkFile("orc",new org.apache.hadoop.hive.ql.io.orc.OrcInputFormat(),new org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat(),new org.apache.hadoop.hive.ql.io.orc.OrcSerde(),ImmutableList.<HiveRecordCursorProvider>builder().add(new OrcRecordCursorProvider()).build(),ImmutableList.<HivePageSourceFactory>builder().add(new OrcPageSourceFactory(TYPE_MANAGER,false)).build())).build();
  if (!benchmarkWriteSpeed) {
    for (    BenchmarkFile benchmarkFile : benchmarkFiles) {
      for (      CompressionType compressionType : ENABLED_COMPRESSION) {
        if (!benchmarkFile.getFile(compressionType).exists()) {
          writeLineItems(benchmarkFile.getFile(compressionType),benchmarkFile.getOutputFormat(),benchmarkFile.getSerDe(),compressionType,COLUMNS);
        }
      }
    }
  }
  for (int run=0; run < 2; run++) {
    System.out.println("==== Run " + run + " ====");
    if (benchmarkWriteSpeed) {
      benchmarkWrite(benchmarkFiles,2,ENABLED_COMPRESSION);
    }
    if (benchmarkReadSpeed) {
      benchmarkRead(benchmarkFiles,2 + (run > 0 ? 3 : 0),ENABLED_COMPRESSION);
    }
  }
}
