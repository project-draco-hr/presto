{
  long start;
  System.out.println("bigint");
  ColumnProjectionUtils.setReadColumnIDs(JOB_CONF,BIGINT_COLUMN_INDEX);
  for (  BenchmarkFile benchmarkFile : benchmarkFiles) {
    for (    HiveRecordCursorProvider recordCursorProvider : benchmarkFile.getRecordCursorProviders()) {
      long result=0;
      start=System.nanoTime();
      for (int loop=0; loop < loopCount; loop++) {
        result=benchmarkReadBigint(benchmarkFile.getFileSplit(),createPartitionProperties(benchmarkFile),recordCursorProvider);
      }
      logDuration(benchmarkFile.getName() + " " + getCursorType(recordCursorProvider),start,loopCount,result);
    }
  }
  System.out.println();
  System.out.println("double");
  ColumnProjectionUtils.setReadColumnIDs(JOB_CONF,DOUBLE_COLUMN_INDEX);
  for (  BenchmarkFile benchmarkFile : benchmarkFiles) {
    for (    HiveRecordCursorProvider recordCursorProvider : benchmarkFile.getRecordCursorProviders()) {
      double result=0;
      start=System.nanoTime();
      for (int loop=0; loop < loopCount; loop++) {
        result=benchmarkReadDouble(benchmarkFile.getFileSplit(),createPartitionProperties(benchmarkFile),recordCursorProvider);
      }
      logDuration(benchmarkFile.getName() + " " + getCursorType(recordCursorProvider),start,loopCount,result);
    }
  }
  System.out.println();
  System.out.println("varchar");
  ColumnProjectionUtils.setReadColumnIDs(JOB_CONF,VARCHAR_COLUMN_INDEX);
  for (  BenchmarkFile benchmarkFile : benchmarkFiles) {
    for (    HiveRecordCursorProvider recordCursorProvider : benchmarkFile.getRecordCursorProviders()) {
      long result=0;
      start=System.nanoTime();
      for (int loop=0; loop < loopCount; loop++) {
        result=benchmarkReadVarchar(benchmarkFile.getFileSplit(),createPartitionProperties(benchmarkFile),recordCursorProvider);
      }
      logDuration(benchmarkFile.getName() + " " + getCursorType(recordCursorProvider),start,loopCount,result);
    }
  }
  System.out.println();
  System.out.println("tpch6");
  ColumnProjectionUtils.setReadColumnIDs(JOB_CONF,TPCH_6_COLUMN_INDEXES);
  for (  BenchmarkFile benchmarkFile : benchmarkFiles) {
    for (    HiveRecordCursorProvider recordCursorProvider : benchmarkFile.getRecordCursorProviders()) {
      double result=0;
      start=System.nanoTime();
      for (int loop=0; loop < loopCount; loop++) {
        result=benchmarkReadTpch6(benchmarkFile.getFileSplit(),createPartitionProperties(benchmarkFile),recordCursorProvider);
      }
      logDuration(benchmarkFile.getName() + " " + getCursorType(recordCursorProvider),start,loopCount,result);
    }
  }
  System.out.println();
  System.out.println("tpch1");
  ColumnProjectionUtils.setReadColumnIDs(JOB_CONF,TPCH_1_COLUMN_INDEXES);
  for (  BenchmarkFile benchmarkFile : benchmarkFiles) {
    for (    HiveRecordCursorProvider recordCursorProvider : benchmarkFile.getRecordCursorProviders()) {
      double result=0;
      start=System.nanoTime();
      for (int loop=0; loop < loopCount; loop++) {
        result=benchmarkReadTpch1(benchmarkFile.getFileSplit(),createPartitionProperties(benchmarkFile),recordCursorProvider);
      }
      logDuration(benchmarkFile.getName() + " " + getCursorType(recordCursorProvider),start,loopCount,result);
    }
  }
  System.out.println();
  System.out.println("all");
  ColumnProjectionUtils.setReadColumnIDs(JOB_CONF,ALL_COLUMN_INDEXES);
  for (  BenchmarkFile benchmarkFile : benchmarkFiles) {
    for (    HiveRecordCursorProvider recordCursorProvider : benchmarkFile.getRecordCursorProviders()) {
      double result=0;
      start=System.nanoTime();
      for (int loop=0; loop < loopCount; loop++) {
        result=benchmarkReadAll(benchmarkFile.getFileSplit(),createPartitionProperties(benchmarkFile),recordCursorProvider);
      }
      logDuration(benchmarkFile.getName() + " " + getCursorType(recordCursorProvider),start,loopCount,result);
    }
  }
  System.out.println();
  System.out.println("one (load all)");
  ColumnProjectionUtils.setReadColumnIDs(JOB_CONF,BIGINT_COLUMN_INDEX);
  for (  BenchmarkFile benchmarkFile : benchmarkFiles) {
    for (    HiveRecordCursorProvider recordCursorProvider : benchmarkFile.getRecordCursorProviders()) {
      double result=0;
      start=System.nanoTime();
      for (int loop=0; loop < loopCount; loop++) {
        result=benchmarkLoadAllReadOne(benchmarkFile.getFileSplit(),createPartitionProperties(benchmarkFile),recordCursorProvider);
      }
      logDuration(benchmarkFile.getName() + " " + getCursorType(recordCursorProvider),start,loopCount,result);
    }
  }
  System.out.println();
}
