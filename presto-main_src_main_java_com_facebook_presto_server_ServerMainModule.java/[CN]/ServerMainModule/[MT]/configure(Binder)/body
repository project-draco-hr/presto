{
  binder.bind(QueryResource.class).in(Scopes.SINGLETON);
  binder.bind(QueryManager.class).to(StaticQueryManager.class).in(Scopes.SINGLETON);
  binder.bind(PagesMapper.class).in(Scopes.SINGLETON);
  binder.bind(StorageManager.class).to(DatabaseStorageManager.class).in(Scopes.SINGLETON);
  binder.bind(LegacyStorageManager.class).to(LegacyStorageManagerFacade.class).in(Scopes.SINGLETON);
  binder.bind(DataStreamProvider.class).to(DataStreamManager.class).in(Scopes.SINGLETON);
  binder.bind(NativeDataStreamProvider.class).in(Scopes.SINGLETON);
  binder.bind(ImportDataStreamProvider.class).in(Scopes.SINGLETON);
  binder.bind(Metadata.class).to(MetadataManager.class).in(Scopes.SINGLETON);
  binder.bind(DatabaseMetadata.class).in(Scopes.SINGLETON);
  binder.bind(ImportClient.class).to(HiveClient.class).in(Scopes.SINGLETON);
  binder.bind(ImportClientFactory.class).in(Scopes.SINGLETON);
  binder.bind(ImportMetadata.class).in(Scopes.SINGLETON);
  binder.bind(SplitManager.class).in(Scopes.SINGLETON);
  jsonCodecBinder(binder).bindJsonCodec(QueryFragmentRequest.class);
  binder.bind(ServiceSelector.class).annotatedWith(ServiceTypes.serviceType("presto")).toInstance(new StaticServiceSelector(new ServiceDescriptor(UUID.randomUUID(),"myid","default","local","localhost",ServiceState.RUNNING,ImmutableMap.<String,String>of("http","http://localhost:8080"))));
  binder.bind(NodeManager.class).in(Scopes.SINGLETON);
  binder.bind(NodeWorkerQueue.class).in(Scopes.SINGLETON);
  binder.bind(ShardManager.class).to(DatabaseShardManager.class).in(Scopes.SINGLETON);
  binder.bind(ImportManager.class).in(Scopes.SINGLETON);
  httpClientBinder(binder).bindHttpClient("importer",ForImportManager.class).withFilter(NodeIdUserAgentRequestFilter.class);
  binder.bind(ShardImporter.class).in(Scopes.SINGLETON);
  binder.bind(ShardResource.class).in(Scopes.SINGLETON);
  jsonCodecBinder(binder).bindJsonCodec(ShardImport.class);
  discoveryBinder(binder).bindHttpAnnouncement("presto");
}
