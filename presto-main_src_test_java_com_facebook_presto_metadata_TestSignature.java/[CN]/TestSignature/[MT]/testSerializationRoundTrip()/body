{
  ObjectMapperProvider objectMapperProvider=new ObjectMapperProvider();
  objectMapperProvider.setJsonDeserializers(ImmutableMap.<Class<?>,JsonDeserializer<?>>of(Type.class,new TypeDeserializer(new TypeRegistry())));
  JsonCodec<Signature> codec=new JsonCodecFactory(objectMapperProvider,true).jsonCodec(Signature.class);
  Signature expected=new Signature("function",SCALAR,parseTypeSignature(StandardTypes.BIGINT),ImmutableList.of(parseTypeSignature(StandardTypes.BOOLEAN),parseTypeSignature(StandardTypes.DOUBLE),parseTypeSignature(StandardTypes.VARCHAR)));
  String json=codec.toJson(expected);
  Signature actual=codec.fromJson(json);
  assertEquals(actual.getName(),expected.getName());
  assertEquals(actual.getKind(),expected.getKind());
  assertEquals(actual.getReturnType(),expected.getReturnType());
  assertEquals(actual.getArgumentTypes(),expected.getArgumentTypes());
}
