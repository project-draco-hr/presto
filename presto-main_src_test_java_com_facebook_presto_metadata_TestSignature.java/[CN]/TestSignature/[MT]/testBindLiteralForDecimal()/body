{
  TypeSignature booleanSignature=BooleanType.BOOLEAN.getTypeSignature();
  TypeSignature decimal=new TypeSignature(StandardTypes.DECIMAL,ImmutableList.of(TypeSignatureParameter.of(new TypeLiteralCalculation("p")),TypeSignatureParameter.of(new TypeLiteralCalculation("s"))));
  TypeSignature decimal21=DECIMAL.createType(ImmutableList.of(TypeParameter.of(2),TypeParameter.of(1))).getTypeSignature();
  TypeSignature decimal10=DECIMAL.createType(ImmutableList.of(TypeParameter.of(1),TypeParameter.of(0))).getTypeSignature();
  Signature function=new Signature("function",SCALAR,ImmutableList.of(),booleanSignature,ImmutableList.of(decimal,decimal),false);
  assertEquals(function.bindLiteralParameters(ImmutableList.of(decimal21,decimal10)),ImmutableMap.of("P",OptionalLong.of(2),"S",OptionalLong.of(1)));
  assertEquals(function.bindLiteralParameters(ImmutableList.of(decimal10,decimal21)),ImmutableMap.of("P",OptionalLong.of(2),"S",OptionalLong.of(1)));
}
