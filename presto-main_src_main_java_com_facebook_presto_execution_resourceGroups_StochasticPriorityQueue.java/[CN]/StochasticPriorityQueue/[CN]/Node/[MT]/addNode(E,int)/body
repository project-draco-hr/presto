{
  descendants++;
  if (left.isPresent() && right.isPresent()) {
    if (left.get().descendants < right.get().descendants) {
      return left.get().addNode(value,tickets);
    }
 else {
      return right.get().addNode(value,tickets);
    }
  }
  Node<E> child=new Node<>(Optional.of(this),value);
  if (left.isPresent()) {
    right=Optional.of(child);
  }
 else {
    left=Optional.of(child);
  }
  child.setTickets(tickets);
  return child;
}
