{
  assertFunction("LPAD('text', 5, 'x')",VARCHAR,"xtext");
  assertFunction("LPAD('text', 4, 'x')",VARCHAR,"text");
  assertFunction("LPAD('text', 6, 'xy')",VARCHAR,"xytext");
  assertFunction("LPAD('text', 7, 'xy')",VARCHAR,"xyxtext");
  assertFunction("LPAD('text', 9, 'xyz')",VARCHAR,"xyzxytext");
  assertFunction("LPAD('\u4FE1\u5FF5 \u7231 \u5E0C\u671B  ', 10, '\u671B')",VARCHAR,"\u671B\u4FE1\u5FF5 \u7231 \u5E0C\u671B  ");
  assertFunction("LPAD('\u4FE1\u5FF5 \u7231 \u5E0C\u671B  ', 11, '\u671B')",VARCHAR,"\u671B\u671B\u4FE1\u5FF5 \u7231 \u5E0C\u671B  ");
  assertFunction("LPAD('\u4FE1\u5FF5 \u7231 \u5E0C\u671B  ', 12, '\u5E0C\u671B')",VARCHAR,"\u5E0C\u671B\u5E0C\u4FE1\u5FF5 \u7231 \u5E0C\u671B  ");
  assertFunction("LPAD('\u4FE1\u5FF5 \u7231 \u5E0C\u671B  ', 13, '\u5E0C\u671B')",VARCHAR,"\u5E0C\u671B\u5E0C\u671B\u4FE1\u5FF5 \u7231 \u5E0C\u671B  ");
  assertFunction("LPAD('', 3, 'a')",VARCHAR,"aaa");
  assertFunction("LPAD('abc', 0, 'e')",VARCHAR,"");
  assertFunction("LPAD('text', 3, 'xy')",VARCHAR,"tex");
  assertFunction("LPAD('\u4FE1\u5FF5 \u7231 \u5E0C\u671B  ', 5, '\u671B')",VARCHAR,"\u4FE1\u5FF5 \u7231 ");
  assertInvalidFunction("LPAD('abc', 3, '')","Padding string must not be empty");
  long maxSize=Integer.MAX_VALUE;
  assertInvalidFunction("LPAD('abc', -1, 'foo')","Target length must be in the range [0.." + maxSize + "]");
  assertInvalidFunction("LPAD('abc', " + (maxSize + 1) + ", '')","Target length must be in the range [0.." + maxSize + "]");
}
