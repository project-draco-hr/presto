{
  assertFunction("SUBSTR('Quadratically', 5)",VARCHAR,"ratically");
  assertFunction("SUBSTR('Quadratically', 50)",VARCHAR,"");
  assertFunction("SUBSTR('Quadratically', -5)",VARCHAR,"cally");
  assertFunction("SUBSTR('Quadratically', -50)",VARCHAR,"");
  assertFunction("SUBSTR('Quadratically', 0)",VARCHAR,"");
  assertFunction("SUBSTR('Quadratically', 5, 6)",VARCHAR,"ratica");
  assertFunction("SUBSTR('Quadratically', 5, 10)",VARCHAR,"ratically");
  assertFunction("SUBSTR('Quadratically', 5, 50)",VARCHAR,"ratically");
  assertFunction("SUBSTR('Quadratically', 50, 10)",VARCHAR,"");
  assertFunction("SUBSTR('Quadratically', -5, 4)",VARCHAR,"call");
  assertFunction("SUBSTR('Quadratically', -5, 40)",VARCHAR,"cally");
  assertFunction("SUBSTR('Quadratically', -50, 4)",VARCHAR,"");
  assertFunction("SUBSTR('Quadratically', 0, 4)",VARCHAR,"");
  assertFunction("SUBSTR('Quadratically', 5, 0)",VARCHAR,"");
  assertFunction("SUBSTRING('Quadratically' FROM 5)",VARCHAR,"ratically");
  assertFunction("SUBSTRING('Quadratically' FROM 50)",VARCHAR,"");
  assertFunction("SUBSTRING('Quadratically' FROM -5)",VARCHAR,"cally");
  assertFunction("SUBSTRING('Quadratically' FROM -50)",VARCHAR,"");
  assertFunction("SUBSTRING('Quadratically' FROM 0)",VARCHAR,"");
  assertFunction("SUBSTRING('Quadratically' FROM 5 FOR 6)",VARCHAR,"ratica");
  assertFunction("SUBSTRING('Quadratically' FROM 5 FOR 50)",VARCHAR,"ratically");
  assertFunction("SUBSTRING('\u4FE1\u5FF5,\u7231,\u5E0C\u671B' FROM 1 FOR 1)",VARCHAR,"\u4FE1");
  assertFunction("SUBSTRING('\u4FE1\u5FF5,\u7231,\u5E0C\u671B' FROM 3 FOR 5)",VARCHAR,",\u7231,\u5E0C\u671B");
  assertFunction("SUBSTRING('\u4FE1\u5FF5,\u7231,\u5E0C\u671B' FROM 4)",VARCHAR,"\u7231,\u5E0C\u671B");
  assertFunction("SUBSTRING('\u4FE1\u5FF5,\u7231,\u5E0C\u671B' FROM -2)",VARCHAR,"\u5E0C\u671B");
  assertFunction("SUBSTRING('\uD801\uDC2Dend' FROM 1 FOR 1)",VARCHAR,"\uD801\uDC2D");
  assertFunction("SUBSTRING('\uD801\uDC2Dend' FROM 2 FOR 3)",VARCHAR,"end");
}
