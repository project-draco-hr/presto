{
  assertInvalidFunction("MAP(ARRAY [CAST(null as bigint)], ARRAY [1])","map key cannot be null");
  assertInvalidFunction("MAP(ARRAY [CAST(null as bigint)], ARRAY [CAST(null as bigint)])","map key cannot be null");
  assertInvalidFunction("MAP(ARRAY [1,null], ARRAY [null,2])","map key cannot be null");
  assertFunction("MAP(ARRAY [1, 3], ARRAY [2, 4])[3]",4L);
  assertFunction("MAP(ARRAY [1, 3], ARRAY[2, NULL])[3]",null);
  assertFunction("MAP(ARRAY [1, 3], ARRAY [2.0, 4.0])[1]",2.0);
  assertFunction("MAP(ARRAY[1.0, 2.0], ARRAY[ ARRAY[1, 2], ARRAY[3]])[1.0]",ImmutableList.of(1L,2L));
  assertFunction("MAP(ARRAY['puppies'], ARRAY['kittens'])['puppies']","kittens");
  assertFunction("MAP(ARRAY[TRUE,FALSE],ARRAY[2,4])[TRUE]",2L);
  assertFunction("MAP(ARRAY['1', '100'], ARRAY[from_unixtime(1), from_unixtime(100)])['1']",new SqlTimestamp(1000,TEST_SESSION.getTimeZoneKey()));
  assertFunction("MAP(ARRAY[from_unixtime(1), from_unixtime(100)], ARRAY[1.0, 100.0])[from_unixtime(1)]",1.0);
}
