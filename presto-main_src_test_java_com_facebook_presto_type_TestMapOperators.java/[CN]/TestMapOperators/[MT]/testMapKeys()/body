{
  assertFunction("MAP_KEYS(MAP(ARRAY['1', '3'], ARRAY['2', '4']))",new ArrayType(createVarcharType(1)),ImmutableList.of("1","3"));
  assertFunction("MAP_KEYS(MAP(ARRAY[1.0, 2.0], ARRAY[ARRAY[1, 2], ARRAY[3]]))",new ArrayType(DOUBLE),ImmutableList.of(1.0,2.0));
  assertFunction("MAP_KEYS(MAP(ARRAY['puppies'], ARRAY['kittens']))",new ArrayType(createVarcharType(7)),ImmutableList.of("puppies"));
  assertFunction("MAP_KEYS(MAP(ARRAY[TRUE], ARRAY[2]))",new ArrayType(BOOLEAN),ImmutableList.of(true));
  assertFunction("MAP_KEYS(MAP(ARRAY[from_unixtime(1)], ARRAY[1.0]))",new ArrayType(TIMESTAMP),ImmutableList.of(new SqlTimestamp(1000,TEST_SESSION.getTimeZoneKey())));
  assertFunction("MAP_KEYS(MAP(ARRAY[CAST('puppies' as varbinary)], ARRAY['kittens']))",new ArrayType(VARBINARY),ImmutableList.of(new SqlVarbinary("puppies".getBytes(UTF_8))));
  assertFunction("MAP_KEYS(MAP(ARRAY[1,2],  ARRAY[ARRAY[1, 2], ARRAY[3]]))",new ArrayType(INTEGER),ImmutableList.of(1,2));
  assertFunction("MAP_KEYS(MAP(ARRAY[1,4], ARRAY[MAP(ARRAY[2], ARRAY[3]), MAP(ARRAY[5], ARRAY[6])]))",new ArrayType(INTEGER),ImmutableList.of(1,4));
  assertFunction("MAP_KEYS(MAP(ARRAY [ARRAY [1], ARRAY [2, 3]],  ARRAY [ARRAY [3, 4], ARRAY [5]]))",new ArrayType(new ArrayType(INTEGER)),ImmutableList.of(ImmutableList.of(1),ImmutableList.of(2,3)));
}
