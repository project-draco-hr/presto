{
  Query query=analysis.getRewrittenQuery();
  PlanNode root=createRelationPlan(query.getFrom(),analysis);
  if (analysis.getPredicate() != null) {
    root=createFilterPlan(root,analysis.getPredicate());
  }
  Map<Expression,Symbol> substitutions=new HashMap<>();
  if (!analysis.getAggregations().isEmpty() || !analysis.getGroupByExpressions().isEmpty()) {
    root=createAggregatePlan(root,ImmutableList.copyOf(analysis.getOutputExpressions().values()),Lists.transform(analysis.getOrderBy(),expressionGetter()),analysis.getAggregations(),analysis.getGroupByExpressions(),analysis.getSymbolAllocator(),substitutions);
  }
  if (!analysis.getWindowFunctions().isEmpty()) {
    root=createWindowPlan(root,ImmutableList.copyOf(analysis.getOutputExpressions().values()),analysis.getWindowFunctions(),analysis.getSymbolAllocator(),substitutions);
  }
  if (analysis.isDistinct()) {
    root=createProjectPlan(root,analysis.getOutputExpressions(),substitutions);
    root=createDistinctPlan(root);
  }
  if (!analysis.getOrderBy().isEmpty()) {
    if (analysis.getLimit() != null) {
      root=createTopNPlan(root,analysis.getLimit(),analysis.getOrderBy(),analysis.getSymbolAllocator(),substitutions);
    }
 else {
      root=createSortPlan(root,analysis.getOrderBy(),analysis.getSymbolAllocator(),substitutions);
    }
  }
  if (!analysis.isDistinct()) {
    root=createProjectPlan(root,analysis.getOutputExpressions(),substitutions);
  }
  if (analysis.getLimit() != null && analysis.getOrderBy().isEmpty()) {
    root=createLimitPlan(root,analysis.getLimit());
  }
  return root;
}
