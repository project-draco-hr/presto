{
  RelationPlan plan;
  Statement statement=analysis.getStatement();
  if (statement instanceof CreateTableAsSelect) {
    checkState(analysis.getCreateTableDestination().isPresent(),"Table destination is missing");
    plan=createTableCreationPlan(analysis,((CreateTableAsSelect)statement).getQuery());
  }
 else   if (statement instanceof Insert) {
    checkState(analysis.getInsert().isPresent(),"Insert handle is missing");
    plan=createInsertPlan(analysis,(Insert)statement);
  }
 else   if (statement instanceof Delete) {
    plan=createDeletePlan(analysis,(Delete)statement);
  }
 else   if (statement instanceof Query) {
    plan=createRelationPlan(analysis,(Query)statement);
  }
 else {
    throw new PrestoException(NOT_SUPPORTED,"Unsupported statement type " + statement.getClass().getSimpleName());
  }
  PlanNode root=createOutputPlan(plan,analysis);
  PlanSanityChecker.validate(root);
  for (  PlanOptimizer optimizer : planOptimizers) {
    root=optimizer.optimize(root,session,symbolAllocator.getTypes(),symbolAllocator,idAllocator);
    requireNonNull(root,format("%s returned a null plan",optimizer.getClass().getName()));
  }
  PlanSanityChecker.validate(root);
  return new Plan(root,symbolAllocator);
}
