{
  super(blocks.length);
  this.blocks=blocks;
  int sizeInBytes=0;
  int retainedSizeInBytes=INSTANCE_SIZE;
  int positionCount=0;
  int firstSubBlockPositionCount=blocks[0].getPositionCount();
  for (int i=0; i < getBlockCount(); i++) {
    sizeInBytes+=blocks[i].getSizeInBytes();
    retainedSizeInBytes+=blocks[i].getRetainedSizeInBytes();
    positionCount+=blocks[i].getPositionCount();
    if (firstSubBlockPositionCount != blocks[i].getPositionCount()) {
      throw new IllegalArgumentException("length of sub blocks differ: block 0: " + firstSubBlockPositionCount + ", block "+ i+ ": "+ blocks[i].getPositionCount());
    }
  }
  this.blockEncoding=computeBlockEncoding();
  this.start=0;
  this.positionCount=positionCount;
  this.sizeInBytes=new AtomicInteger(sizeInBytes);
  this.retainedSizeInBytes=retainedSizeInBytes;
}
