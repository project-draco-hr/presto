{
  assertByteCodeExpression(constantString("foo").invoke("length",int.class),"foo".length(),"\"foo\".length()");
  assertByteCodeExpression(constantString("foo").invoke("concat",String.class,constantString("bar")),"foo".concat("bar"),"\"foo\".concat(\"bar\")");
  assertByteCodeExpression(constantString("foo").invoke("concat",String.class,ImmutableList.of(String.class),constantString("bar")),"foo".concat("bar"),"\"foo\".concat(\"bar\")");
  assertByteCodeExpression(constantString("foo").invoke("concat",type(String.class),ImmutableList.of(type(String.class)),constantString("bar")),"foo".concat("bar"),"\"foo\".concat(\"bar\")");
}
