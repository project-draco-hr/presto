{
  super(id);
  Preconditions.checkNotNull(source,"source is null");
  Preconditions.checkArgument(count > 0,"count must be positive");
  Preconditions.checkNotNull(orderBy,"orderBy is null");
  Preconditions.checkArgument(!orderBy.isEmpty(),"orderBy is empty");
  Preconditions.checkArgument(orderings.size() == orderBy.size(),"orderBy and orderings sizes don't match");
  Preconditions.checkNotNull(sampleWeight,"sampleWeight is null");
  if (sampleWeight.isPresent()) {
    Preconditions.checkArgument(source.getOutputSymbols().contains(sampleWeight.get()),"source does not output sample weight");
  }
  this.source=source;
  this.count=count;
  this.orderBy=ImmutableList.copyOf(orderBy);
  this.orderings=ImmutableMap.copyOf(orderings);
  this.partial=partial;
  this.sampleWeight=sampleWeight;
}
