{
  PlanWithProperties source=node.getSource().accept(this,PreferredProperties.any());
  PlanWithProperties filteringSource=node.getFilteringSource().accept(this,PreferredProperties.any());
  if (source.getProperties().isPartitioned()) {
    filteringSource=withDerivedProperties(new ExchangeNode(idAllocator.getNextId(),ExchangeNode.Type.REPLICATE,ImmutableList.of(),Optional.<Symbol>empty(),ImmutableList.of(filteringSource.getNode()),filteringSource.getNode().getOutputSymbols(),ImmutableList.of(filteringSource.getNode().getOutputSymbols())),filteringSource.getProperties());
  }
 else {
    filteringSource=withDerivedProperties(gatheringExchange(idAllocator.getNextId(),filteringSource.getNode()),filteringSource.getProperties());
  }
  return rebaseAndDeriveProperties(node,ImmutableList.of(source,filteringSource));
}
