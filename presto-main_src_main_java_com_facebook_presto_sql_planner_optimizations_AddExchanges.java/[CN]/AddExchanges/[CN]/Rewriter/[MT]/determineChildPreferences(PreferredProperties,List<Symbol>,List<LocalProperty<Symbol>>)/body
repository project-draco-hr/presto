{
  List<LocalProperty<Symbol>> local=ImmutableList.<LocalProperty<Symbol>>builder().addAll(localProperties).addAll(preferencesFromParent.getLocalProperties()).build();
  Set<Symbol> partitioning=ImmutableSet.copyOf(partitioningColumns);
  Optional<PartitioningPreferences> parentsPartitioningPreference=preferencesFromParent.getPartitioningProperties();
  if (parentsPartitioningPreference.isPresent()) {
    Optional<Set<Symbol>> parentsPartitioningColumns=parentsPartitioningPreference.get().getPartitioningColumns();
    if (parentsPartitioningColumns.isPresent()) {
      partitioning=Sets.intersection(parentsPartitioningColumns.get(),partitioning);
    }
  }
  if (partitioning.isEmpty()) {
    partitioning=ImmutableSet.copyOf(partitioningColumns);
  }
  return PreferredProperties.partitionedWithLocal(partitioning,local);
}
