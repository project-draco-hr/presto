{
  checkNotNull(config,"config is null");
  try (ThreadContextClassLoader ignored=new ThreadContextClassLoader(classLoader)){
    Bootstrap app=new Bootstrap(new NodeModule(),new DiscoveryModule(),new MBeanModule(),new JsonModule(),new HiveClientModule(connectorId,metastore,typeManager),new Module(){
      @Override public void configure(      Binder binder){
        MBeanServer platformMBeanServer=ManagementFactory.getPlatformMBeanServer();
        binder.bind(MBeanServer.class).toInstance(new RebindSafeMBeanServer(platformMBeanServer));
      }
    }
);
    Injector injector=app.strictConfig().doNotInitializeLogging().setRequiredConfigurationProperties(config).setOptionalConfigurationProperties(optionalConfig).initialize();
    ConnectorMetadata metadata=injector.getInstance(ConnectorMetadata.class);
    ConnectorSplitManager splitManager=injector.getInstance(ConnectorSplitManager.class);
    ConnectorPageSourceProvider connectorPageSource=injector.getInstance(ConnectorPageSourceProvider.class);
    ConnectorRecordSinkProvider recordSinkProvider=injector.getInstance(ConnectorRecordSinkProvider.class);
    ConnectorHandleResolver handleResolver=injector.getInstance(ConnectorHandleResolver.class);
    return new HiveConnector(new ClassLoaderSafeConnectorMetadata(metadata,classLoader),new ClassLoaderSafeConnectorSplitManager(splitManager,classLoader),new ClassLoaderSafeConnectorPageSourceProvider(connectorPageSource,classLoader),new ClassLoaderSafeConnectorRecordSinkProvider(recordSinkProvider,classLoader),new ClassLoaderSafeConnectorHandleResolver(handleResolver,classLoader));
  }
 catch (  Exception e) {
    throw Throwables.propagate(e);
  }
}
