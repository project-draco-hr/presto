{
  checkNotNull(types,"types is null");
  checkArgument(!types.isEmpty(),"types is empty");
  boolean[] includes=new boolean[types.size()];
  includes[0]=true;
  Type root=types.get(0);
  List<Integer> included=Lists.transform(columns,HiveColumnHandle.hiveColumnIndexGetter());
  for (int i=0; i < root.getSubtypesCount(); ++i) {
    if (included.contains(i)) {
      includeColumnRecursive(types,includes,root.getSubtypes(i));
    }
  }
  for (  boolean include : includes) {
    if (!include) {
      return includes;
    }
  }
  return null;
}
