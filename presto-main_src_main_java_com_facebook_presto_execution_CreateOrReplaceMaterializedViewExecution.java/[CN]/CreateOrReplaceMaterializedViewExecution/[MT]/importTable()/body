{
  QualifiedTableName dstTableName=MetadataUtil.createQualifiedTableName(stateMachine.getSession(),statement.getName());
  checkState(DataSourceType.NATIVE == metadataManager.lookupDataSource(dstTableName.getCatalogName(),dstTableName.getSchemaName(),dstTableName.getTableName()),"%s is not a native table, can only create native tables",dstTableName);
  checkState(statement.getTableDefinition() instanceof Query,"Can only create a table from a query");
  Query subQuery=(Query)statement.getTableDefinition();
  List<Relation> relations=subQuery.getFrom();
  Relation srcTableRelation=Iterables.getOnlyElement(relations);
  checkState(srcTableRelation instanceof Table,"create table queries must use as table as source");
  Select select=subQuery.getSelect();
  checkState(Iterables.getOnlyElement(select.getSelectItems()) instanceof AllColumns,"create table query can have only a single column and it must be '*'");
  final QualifiedTableName srcTableName=MetadataUtil.createQualifiedTableName(stateMachine.getSession(),((Table)srcTableRelation).getName());
  checkState(DataSourceType.IMPORT == metadataManager.lookupDataSource(srcTableName.getCatalogName(),srcTableName.getSchemaName(),srcTableName.getTableName()),"Can not import from %s, not an importable table",srcTableName);
  List<SchemaField> schema=retry().stopOn(ObjectNotFoundException.class).stopOnIllegalExceptions().runUnchecked(new Callable<List<SchemaField>>(){
    @Override public List<SchemaField> call() throws Exception {
      ImportClient importClient=importClientManager.getClient(srcTableName.getCatalogName());
      return importClient.getTableSchema(srcTableName.getSchemaName(),srcTableName.getTableName());
    }
  }
);
  List<ColumnMetadata> sourceColumns=convertToMetadata(srcTableName.getCatalogName(),schema);
  TableMetadata table=new TableMetadata(dstTableName.getCatalogName(),dstTableName.getSchemaName(),dstTableName.getTableName(),sourceColumns);
  metadataManager.createTable(table);
  table=metadataManager.getTable(dstTableName.getCatalogName(),dstTableName.getSchemaName(),dstTableName.getTableName());
  long tableId=((NativeTableHandle)table.getTableHandle().get()).getTableId();
  List<ImportField> fields=getImportFields(sourceColumns,table.getColumns());
  importManager.importTable(tableId,srcTableName.getCatalogName(),srcTableName.getSchemaName(),srcTableName.getTableName(),fields);
}
