{
  checkArgument(boundVariables.getTypeVariables().size() == 1,"Expected one type, got %s",boundVariables.getTypeVariables());
  Type elementType=boundVariables.getTypeVariable("E");
  MethodHandle methodHandle;
  if (elementType.getJavaType() == void.class) {
    methodHandle=METHOD_HANDLE_UNKNOWN;
  }
 else   if (elementType.getJavaType() == boolean.class) {
    methodHandle=METHOD_HANDLE_BOOLEAN;
  }
 else   if (elementType.getJavaType() == long.class) {
    methodHandle=METHOD_HANDLE_LONG;
  }
 else   if (elementType.getJavaType() == double.class) {
    methodHandle=METHOD_HANDLE_DOUBLE;
  }
 else   if (elementType.getJavaType() == Slice.class) {
    methodHandle=METHOD_HANDLE_SLICE;
  }
 else {
    methodHandle=METHOD_HANDLE_OBJECT;
  }
  methodHandle=methodHandle.bindTo(elementType);
  requireNonNull(methodHandle,"methodHandle is null");
  return new ScalarFunctionImplementation(true,ImmutableList.of(false,false),methodHandle,isDeterministic());
}
