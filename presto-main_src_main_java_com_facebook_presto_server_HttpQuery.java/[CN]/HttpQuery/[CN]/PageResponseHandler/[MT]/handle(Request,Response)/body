{
  if (isDone()) {
    return null;
  }
  try {
    if (response.getStatusCode() == Status.GONE.getStatusCode()) {
      done();
      return null;
    }
    if (response.getStatusCode() != Status.OK.getStatusCode()) {
      throw new UnexpectedResponseException(String.format("Expected response code to be 200, but was %d: %s",response.getStatusCode(),response.getStatusMessage()),request,response);
    }
    String contentType=response.getHeader("Content-Type");
    if (!MediaType.valueOf(contentType).isCompatible(PRESTO_PAGES_TYPE)) {
      throw new UnexpectedResponseException(String.format("Expected %s response from server but got %s",PRESTO_PAGES_TYPE,contentType),request,response);
    }
    InputStreamSliceInput sliceInput=new InputStreamSliceInput(response.getInputStream());
    Iterator<Page> pageIterator=PagesSerde.readPages(sliceInput);
    while (pageIterator.hasNext()) {
      Page page=pageIterator.next();
      queryState.addPage(page);
    }
    setCurrentRequest(httpClient.execute(prepareGet().setUri(queryUri).build(),this));
    return null;
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
    fail(e);
    throw Throwables.propagate(e);
  }
catch (  Throwable e) {
    fail(e);
    throw Throwables.propagate(e);
  }
}
