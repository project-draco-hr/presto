{
  Expression parsedExpression=createExpression(expression);
  Expression roundtrip=createExpression(ExpressionFormatter.formatExpression(parsedExpression));
  assertEquals(parsedExpression,roundtrip);
  ExpressionInterpreter interpreter=ExpressionInterpreter.expressionOptimizer(parsedExpression,DUAL_METADATA_MANAGER,new Session("user","test",DEFAULT_CATALOG,DEFAULT_SCHEMA,null,null));
  return interpreter.optimize(new SymbolResolver(){
    @Override public Object getValue(    Symbol symbol){
switch (symbol.getName().toLowerCase()) {
case "boundlong":
        return 1234L;
case "boundstring":
      return Slices.wrappedBuffer("hello".getBytes(UTF_8));
case "bounddouble":
    return 12.34;
case "boundtimestamp":
  DateTime dateTime=new DateTime(2001,8,22,3,4,5,321,DateTimeZone.UTC);
return MILLISECONDS.toSeconds(dateTime.getMillis());
case "boundpattern":
return Slices.wrappedBuffer("%el%".getBytes(UTF_8));
}
return new QualifiedNameReference(symbol.toQualifiedName());
}
}
);
}
