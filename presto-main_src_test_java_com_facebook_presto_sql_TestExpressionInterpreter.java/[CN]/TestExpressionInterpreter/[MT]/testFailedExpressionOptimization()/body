{
  assertOptimizedEqualsSelf("if(unbound_boolean, 1, 0 / 0)");
  assertOptimizedEqualsSelf("if(unbound_boolean, 0 / 0, 1)");
  assertOptimizedEqualsSelf("case unbound_long when 1 then 1 when 0 / 0 then 2 end");
  assertOptimizedEqualsSelf("case unbound_boolean when true then 1 else 0 / 0 end");
  assertOptimizedEqualsSelf("case unbound_boolean when true then 0 / 0 else 1 end");
  assertOptimizedEqualsSelf("case when unbound_boolean then 1 when 0 / 0 = 0 then 2 end");
  assertOptimizedEqualsSelf("case when unbound_boolean then 1 else 0 / 0  end");
  assertOptimizedEqualsSelf("case when unbound_boolean then 0 / 0 else 1 end");
  assertOptimizedEqualsSelf("coalesce(unbound_boolean, 0 / 0 = 0)");
}
