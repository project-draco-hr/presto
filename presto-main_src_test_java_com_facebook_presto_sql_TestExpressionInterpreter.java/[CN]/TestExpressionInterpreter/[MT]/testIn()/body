{
  assertOptimizedEquals("3 in (2, 4, 3, 5)","true");
  assertOptimizedEquals("3 in (2, 4, 9, 5)","false");
  assertOptimizedEquals("3 in (2, null, 3, 5)","true");
  assertOptimizedEquals("'foo' in ('bar', 'baz', 'foo', 'blah')","true");
  assertOptimizedEquals("'foo' in ('bar', 'baz', 'buz', 'blah')","false");
  assertOptimizedEquals("'foo' in ('bar', null, 'foo', 'blah')","true");
  assertOptimizedEquals("null in (2, null, 3, 5)","null");
  assertOptimizedEquals("3 in (2, null)","null");
  assertOptimizedEquals("bound_long in (2, 1234, 3, 5)","true");
  assertOptimizedEquals("bound_long in (2, 4, 3, 5)","false");
  assertOptimizedEquals("1234 in (2, bound_long, 3, 5)","true");
  assertOptimizedEquals("99 in (2, bound_long, 3, 5)","false");
  assertOptimizedEquals("bound_long in (2, bound_long, 3, 5)","true");
  assertOptimizedEquals("bound_string in ('bar', 'hello', 'foo', 'blah')","true");
  assertOptimizedEquals("bound_string in ('bar', 'baz', 'foo', 'blah')","false");
  assertOptimizedEquals("'hello' in ('bar', bound_string, 'foo', 'blah')","true");
  assertOptimizedEquals("'baz' in ('bar', bound_string, 'foo', 'blah')","false");
  assertOptimizedEquals("bound_long in (2, 1234, unbound_long, 5)","true");
  assertOptimizedEquals("bound_string in ('bar', 'hello', unbound_string, 'blah')","true");
  assertOptimizedEquals("bound_long in (2, 4, unbound_long, unbound_long2, 9)","1234 in (unbound_long, unbound_long2)");
  assertOptimizedEquals("unbound_long in (2, 4, bound_long, unbound_long2, 5)","unbound_long in (2, 4, 1234, unbound_long2, 5)");
}
