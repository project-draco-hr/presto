{
  DateTime dateTime=new DateTime(2001,8,22,3,4,5,321,DateTimeZone.UTC);
  long seconds=MILLISECONDS.toSeconds(dateTime.getMillis());
  assertOptimizedEquals("extract (CENTURY from " + seconds + ")","20");
  assertOptimizedEquals("extract (YEAR from " + seconds + ")","2001");
  assertOptimizedEquals("extract (QUARTER from " + seconds + ")","3");
  assertOptimizedEquals("extract (MONTH from " + seconds + ")","8");
  assertOptimizedEquals("extract (WEEK from " + seconds + ")","34");
  assertOptimizedEquals("extract (DOW from " + seconds + ")","3");
  assertOptimizedEquals("extract (DOY from " + seconds + ")","234");
  assertOptimizedEquals("extract (DAY from " + seconds + ")","22");
  assertOptimizedEquals("extract (HOUR from " + seconds + ")","3");
  assertOptimizedEquals("extract (MINUTE from " + seconds + ")","4");
  assertOptimizedEquals("extract (SECOND from " + seconds + ")","5");
  assertOptimizedEquals("extract (TIMEZONE_HOUR from " + seconds + ")","0");
  assertOptimizedEquals("extract (TIMEZONE_MINUTE from " + seconds + ")","0");
  assertOptimizedEquals("extract (CENTURY from boundTimestamp)","20");
  assertOptimizedEquals("extract (YEAR from boundTimestamp)","2001");
  assertOptimizedEquals("extract (QUARTER from boundTimestamp)","3");
  assertOptimizedEquals("extract (MONTH from boundTimestamp)","8");
  assertOptimizedEquals("extract (WEEK from boundTimestamp)","34");
  assertOptimizedEquals("extract (DOW from boundTimestamp)","3");
  assertOptimizedEquals("extract (DOY from boundTimestamp)","234");
  assertOptimizedEquals("extract (DAY from boundTimestamp)","22");
  assertOptimizedEquals("extract (HOUR from boundTimestamp)","3");
  assertOptimizedEquals("extract (MINUTE from boundTimestamp)","4");
  assertOptimizedEquals("extract (SECOND from boundTimestamp)","5");
  assertOptimizedEquals("extract (TIMEZONE_HOUR from boundTimestamp)","0");
  assertOptimizedEquals("extract (TIMEZONE_MINUTE from boundTimestamp)","0");
  assertOptimizedEquals("extract (YEAR from a)","extract (YEAR from a)");
  assertOptimizedEquals("extract (SECOND from boundTimestamp + 3)","8");
}
