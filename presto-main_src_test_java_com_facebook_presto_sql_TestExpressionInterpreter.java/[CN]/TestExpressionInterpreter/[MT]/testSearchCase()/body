{
  assertOptimizedEquals("case " + "when true then 33 " + "end","33");
  assertOptimizedEquals("case " + "when false then 1 " + "else 33 "+ "end","33");
  assertOptimizedEquals("case " + "when boundLong = 1234 then 33 " + "end","33");
  assertOptimizedEquals("case " + "when true then boundLong " + "end","1234");
  assertOptimizedEquals("case " + "when false then 1 " + "else boundLong "+ "end","1234");
  assertOptimizedEquals("case " + "when boundLong = 1234 then 33 " + "else a "+ "end","33");
  assertOptimizedEquals("case " + "when true then boundLong " + "else a "+ "end","1234");
  assertOptimizedEquals("case " + "when false then a " + "else boundLong "+ "end","1234");
  assertOptimizedEquals("case " + "when a = 1234 then 33 " + "else 1 "+ "end","" + "case " + "when a = 1234 then 33 "+ "else 1 "+ "end");
}
