{
  assertOptimizedEquals("3 between 2 and 4","true");
  assertOptimizedEquals("2 between 3 and 4","false");
  assertOptimizedEquals("null between 2 and 4","null");
  assertOptimizedEquals("3 between null and 4","null");
  assertOptimizedEquals("3 between 2 and null","null");
  assertOptimizedEquals("'cc' between 'b' and 'd'","true");
  assertOptimizedEquals("'b' between 'cc' and 'd'","false");
  assertOptimizedEquals("null between 'b' and 'd'","null");
  assertOptimizedEquals("'cc' between null and 'd'","null");
  assertOptimizedEquals("'cc' between 'b' and null","null");
  assertOptimizedEquals("bound_long between 1000 and 2000","true");
  assertOptimizedEquals("bound_long between 3 and 4","false");
  assertOptimizedEquals("bound_string between 'e' and 'i'","true");
  assertOptimizedEquals("bound_string between 'a' and 'b'","false");
  assertOptimizedEquals("bound_long between unbound_long and 2000 + 1","1234 between unbound_long and 2001");
  assertOptimizedEquals("bound_string between unbound_string and 'bar'",format("CAST('hello' AS VARCHAR(%s)) between unbound_string and 'bar'",TEST_VARCHAR_TYPE_LENGTH));
}
