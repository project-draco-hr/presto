{
  assertOptimizedEquals("cast(0 as DOUBLE)","0.0");
  assertOptimizedEquals("cast(123 as DOUBLE)","123.0");
  assertOptimizedEquals("cast(-123 as DOUBLE)","-123.0");
  assertOptimizedEquals("cast(123.0 as DOUBLE)","123.0");
  assertOptimizedEquals("cast(-123.0 as DOUBLE)","-123.0");
  assertOptimizedEquals("cast(123.456 as DOUBLE)","123.456");
  assertOptimizedEquals("cast(-123.456 as DOUBLE)","-123.456");
  assertOptimizedEquals("cast('0' as DOUBLE)","0.0");
  assertOptimizedEquals("cast('123' as DOUBLE)","123.0");
  assertOptimizedEquals("cast('-123' as DOUBLE)","-123.0");
  assertOptimizedEquals("cast('123.0' as DOUBLE)","123.0");
  assertOptimizedEquals("cast('-123.0' as DOUBLE)","-123.0");
  assertOptimizedEquals("cast('123.456' as DOUBLE)","123.456");
  assertOptimizedEquals("cast('-123.456' as DOUBLE)","-123.456");
  assertOptimizedEquals("cast(null as DOUBLE)","null");
  assertOptimizedEquals("cast(true as DOUBLE)","1.0");
  assertOptimizedEquals("cast(false as DOUBLE)","0.0");
}
