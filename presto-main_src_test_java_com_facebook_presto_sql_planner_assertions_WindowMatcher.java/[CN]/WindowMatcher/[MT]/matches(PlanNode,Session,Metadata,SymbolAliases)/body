{
  if (!(node instanceof WindowNode)) {
    return false;
  }
  WindowNode windowNode=(WindowNode)node;
  Collection<FunctionCall> actualCalls=windowNode.getWindowFunctions().values();
  if (actualCalls.size() != functionCalls.size()) {
    return false;
  }
  LinkedList<FunctionCall> expectedCalls=new LinkedList<>(functionCalls);
  actualCalls:   for (  FunctionCall actualCall : actualCalls) {
    for (int i=0; i < expectedCalls.size(); ++i) {
      FunctionCall expectedCall=expectedCalls.get(i);
      if (sameCall(expectedCall,actualCall)) {
        expectedCalls.remove(i);
        continue actualCalls;
      }
    }
    return false;
  }
  return expectedCalls.isEmpty();
}
