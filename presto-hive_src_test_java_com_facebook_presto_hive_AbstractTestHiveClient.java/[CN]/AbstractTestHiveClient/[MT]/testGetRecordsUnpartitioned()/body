{
  TableHandle tableHandle=client.getTableHandle(TABLE_UNPARTITIONED);
  List<ColumnHandle> columnHandles=ImmutableList.copyOf(client.getColumnHandles(tableHandle).values());
  Map<String,Integer> columnIndex=indexColumns(columnHandles);
  List<Partition> partitions=client.getPartitions(tableHandle,ImmutableMap.<ColumnHandle,Object>of());
  List<Split> splits=ImmutableList.copyOf(client.getPartitionSplits(partitions));
  assertEquals(splits.size(),1);
  for (  Split split : splits) {
    HiveSplit hiveSplit=(HiveSplit)split;
    assertEquals(hiveSplit.getPartitionKeys(),ImmutableList.of());
    long rowNumber=0;
    try (RecordCursor cursor=client.getRecords(split,columnHandles).cursor()){
      assertEquals(cursor.getTotalBytes(),hiveSplit.getLength());
      while (cursor.advanceNextPosition()) {
        rowNumber++;
        if (rowNumber % 19 == 0) {
          assertTrue(cursor.isNull(columnIndex.get("t_string")));
        }
 else {
          assertEquals(cursor.getString(columnIndex.get("t_string")),"unpartitioned".getBytes(Charsets.UTF_8));
        }
        assertEquals(cursor.getLong(columnIndex.get("t_tinyint")),1 + rowNumber);
      }
    }
     assertEquals(rowNumber,100);
  }
}
