{
  try (Transaction transaction=newTransaction()){
    ConnectorMetadata metadata=transaction.getMetadata();
    ConnectorSession session=newSession();
    ConnectorTableHandle tableHandle=getTableHandle(metadata,tableBucketedBigintBoolean);
    List<ColumnHandle> columnHandles=ImmutableList.copyOf(metadata.getColumnHandles(session,tableHandle).values());
    Map<String,Integer> columnIndex=indexColumns(columnHandles);
    assertTableIsBucketed(tableHandle);
    String testString="test";
    Long testBigint=89L;
    Boolean testBoolean=true;
    ImmutableMap<ColumnHandle,NullableValue> bindings=ImmutableMap.<ColumnHandle,NullableValue>builder().put(columnHandles.get(columnIndex.get("t_string")),NullableValue.of(createUnboundedVarcharType(),utf8Slice(testString))).put(columnHandles.get(columnIndex.get("t_bigint")),NullableValue.of(BIGINT,testBigint)).put(columnHandles.get(columnIndex.get("t_boolean")),NullableValue.of(BOOLEAN,testBoolean)).build();
    MaterializedResult result=readTable(transaction,tableHandle,columnHandles,session,TupleDomain.fromFixedValues(bindings),OptionalInt.of(1),Optional.empty());
    boolean rowFound=false;
    for (    MaterializedRow row : result) {
      if (testString.equals(row.getField(columnIndex.get("t_string"))) && testBigint.equals(row.getField(columnIndex.get("t_bigint"))) && testBoolean.equals(row.getField(columnIndex.get("t_boolean")))) {
        rowFound=true;
        break;
      }
    }
    assertTrue(rowFound);
  }
 }
