{
  ConnectorTableHandle tableHandle=getTableHandle(tableBucketedBigintBoolean);
  List<ConnectorColumnHandle> columnHandles=ImmutableList.copyOf(metadata.getColumnHandles(tableHandle).values());
  Map<String,Integer> columnIndex=indexColumns(columnHandles);
  assertTableIsBucketed(tableHandle);
  String testString="test";
  Long testBigint=89L;
  Boolean testBoolean=true;
  ImmutableMap<ConnectorColumnHandle,Comparable<?>> bindings=ImmutableMap.<ConnectorColumnHandle,Comparable<?>>builder().put(columnHandles.get(columnIndex.get("t_string")),utf8Slice(testString)).put(columnHandles.get(columnIndex.get("t_bigint")),testBigint).put(columnHandles.get(columnIndex.get("t_boolean")),testBoolean).build();
  ConnectorPartitionResult partitionResult=splitManager.getPartitions(tableHandle,TupleDomain.withFixedValues(bindings));
  List<ConnectorSplit> splits=getAllSplits(splitManager.getPartitionSplits(tableHandle,partitionResult.getPartitions()));
  assertEquals(splits.size(),1);
  try (ConnectorPageSource pageSource=pageSourceProvider.createPageSource(splits.get(0),columnHandles)){
    MaterializedResult result=materializeSourceDataStream(SESSION,pageSource,getTypes(columnHandles));
    boolean rowFound=false;
    for (    MaterializedRow row : result) {
      if (testString.equals(row.getField(columnIndex.get("t_string"))) && testBigint.equals(row.getField(columnIndex.get("t_bigint"))) && testBoolean.equals(row.getField(columnIndex.get("t_boolean")))) {
        rowFound=true;
        break;
      }
    }
    assertTrue(rowFound);
  }
 }
