{
  TableHandle tableHandle=getTableHandle(tableBucketedBigintBoolean);
  List<ColumnHandle> columnHandles=ImmutableList.copyOf(metadata.getColumnHandles(tableHandle).values());
  Map<String,Integer> columnIndex=indexColumns(columnHandles);
  assertTableIsBucketed(tableHandle);
  String testString="textfile test";
  Long testBigint=608L;
  Boolean testBoolean=true;
  ImmutableMap<ColumnHandle,Comparable<?>> bindings=ImmutableMap.<ColumnHandle,Comparable<?>>builder().put(columnHandles.get(columnIndex.get("t_string")),testString).put(columnHandles.get(columnIndex.get("t_bigint")),testBigint).put(columnHandles.get(columnIndex.get("t_boolean")),testBoolean).build();
  PartitionResult partitionResult=splitManager.getPartitions(tableHandle,TupleDomain.withFixedValues(bindings));
  List<Split> splits=getAllSplits(splitManager.getPartitionSplits(tableHandle,partitionResult.getPartitions()));
  assertEquals(splits.size(),1);
  boolean rowFound=false;
  try (RecordCursor cursor=recordSetProvider.getRecordSet(splits.get(0),columnHandles).cursor()){
    while (cursor.advanceNextPosition()) {
      if (testString.equals(new String(cursor.getString(columnIndex.get("t_string")))) && testBigint == cursor.getLong(columnIndex.get("t_bigint")) && testBoolean == cursor.getBoolean(columnIndex.get("t_boolean"))) {
        rowFound=true;
        break;
      }
    }
    assertTrue(rowFound);
  }
 }
