{
  ConnectorSession session=newSession();
  ConnectorTableMetadata tableMetadata=new ConnectorTableMetadata(tableName,CREATE_TABLE_COLUMNS,createTableProperties(storageFormat),session.getUser());
  ConnectorOutputTableHandle outputHandle=metadata.beginCreateTable(session,tableMetadata);
  ConnectorPageSink sink=pageSinkProvider.createPageSink(session,outputHandle);
  sink.appendPage(CREATE_TABLE_DATA.toPage(),null);
  Collection<Slice> fragments=sink.commit();
  for (  String filePath : listAllDataFiles(outputHandle)) {
    assertTrue(new Path(filePath).getName().startsWith(getFilePrefix(outputHandle)));
  }
  metadata.commitCreateTable(session,outputHandle,fragments);
  ConnectorTableHandle tableHandle=getTableHandle(tableName);
  List<ColumnHandle> columnHandles=ImmutableList.copyOf(metadata.getColumnHandles(session,tableHandle).values());
  tableMetadata=metadata.getTableMetadata(session,getTableHandle(tableName));
  assertEquals(tableMetadata.getOwner(),session.getUser());
  assertEquals(tableMetadata.getColumns(),CREATE_TABLE_COLUMNS);
  MaterializedResult result=readTable(tableHandle,columnHandles,session,TupleDomain.all(),OptionalInt.empty(),Optional.of(storageFormat));
  assertEqualsIgnoreOrder(result.getMaterializedRows(),CREATE_TABLE_DATA.getMaterializedRows());
}
