{
  doCreateEmptyTable(tableName,storageFormat,CREATE_TABLE_COLUMNS);
  MaterializedResult.Builder resultBuilder=MaterializedResult.resultBuilder(SESSION,CREATE_TABLE_DATA.getTypes());
  for (int i=0; i < 3; i++) {
    ConnectorTableHandle tableHandle=getTableHandle(tableName);
    ConnectorInsertTableHandle insertTableHandle=metadata.beginInsert(SESSION,tableHandle);
    ConnectorPageSink sink=pageSinkProvider.createPageSink(SESSION,insertTableHandle);
    sink.appendPage(CREATE_TABLE_DATA.toPage(),null);
    Collection<Slice> fragments=sink.commit();
    metadata.commitInsert(SESSION,insertTableHandle,fragments);
    List<ColumnHandle> columnHandles=ImmutableList.copyOf(metadata.getColumnHandles(SESSION,tableHandle).values());
    ConnectorTableMetadata tableMetadata=metadata.getTableMetadata(SESSION,getTableHandle(tableName));
    assertEquals(tableMetadata.getOwner(),SESSION.getUser());
    assertEquals(tableMetadata.getColumns(),CREATE_TABLE_COLUMNS);
    resultBuilder.rows(CREATE_TABLE_DATA.getMaterializedRows());
    MaterializedResult result=readTable(tableHandle,columnHandles,SESSION,TupleDomain.<ColumnHandle>all(),OptionalInt.empty(),Optional.empty());
    assertEqualsIgnoreOrder(result.getMaterializedRows(),resultBuilder.build().getMaterializedRows());
  }
  Set<String> existingFiles=listAllDataFiles(tableName.getSchemaName(),tableName.getTableName());
  assertFalse(existingFiles.isEmpty());
  ConnectorTableHandle tableHandle=getTableHandle(tableName);
  List<ColumnHandle> columnHandles=ImmutableList.copyOf(metadata.getColumnHandles(SESSION,tableHandle).values());
  ConnectorInsertTableHandle insertTableHandle=metadata.beginInsert(SESSION,tableHandle);
  ConnectorPageSink sink=pageSinkProvider.createPageSink(SESSION,insertTableHandle);
  sink.appendPage(CREATE_TABLE_DATA.toPage(),null);
  sink.appendPage(CREATE_TABLE_DATA.toPage(),null);
  sink.commit();
  assertEquals(listAllDataFiles(tableName.getSchemaName(),tableName.getTableName()),existingFiles);
  Set<String> tempFiles=listAllDataFiles(insertTableHandle);
  assertTrue(!tempFiles.isEmpty());
  for (  String filePath : tempFiles) {
    assertTrue(new Path(filePath).getName().startsWith(getFilePrefix(insertTableHandle)));
  }
  metadata.rollbackInsert(SESSION,insertTableHandle);
  MaterializedResult result=readTable(tableHandle,columnHandles,SESSION,TupleDomain.<ColumnHandle>all(),OptionalInt.empty(),Optional.empty());
  assertEqualsIgnoreOrder(result.getMaterializedRows(),resultBuilder.build().getMaterializedRows());
  assertEquals(listAllDataFiles(tableName.getSchemaName(),tableName.getTableName()),existingFiles);
  assertTrue(listAllDataFiles(insertTableHandle).isEmpty());
}
