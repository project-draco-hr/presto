{
  database=databaseName;
  tablePartitionFormat=new SchemaTableName(database,"presto_test_partition_format");
  tableUnpartitioned=new SchemaTableName(database,"presto_test_unpartitioned");
  tableOffline=new SchemaTableName(database,"presto_test_offline");
  tableOfflinePartition=new SchemaTableName(database,"presto_test_offline_partition");
  view=new SchemaTableName(database,"presto_test_view");
  invalidTable=new SchemaTableName(database,INVALID_TABLE);
  tableBucketedStringInt=new SchemaTableName(database,"presto_test_bucketed_by_string_int");
  tableBucketedBigintBoolean=new SchemaTableName(database,"presto_test_bucketed_by_bigint_boolean");
  tableBucketedDoubleFloat=new SchemaTableName(database,"presto_test_bucketed_by_double_float");
  temporaryCreateTable=new SchemaTableName(database,"tmp_presto_test_create_" + randomName());
  temporaryCreateSampledTable=new SchemaTableName(database,"tmp_presto_test_create_" + randomName());
  temporaryRenameTableOld=new SchemaTableName(database,"tmp_presto_test_rename_" + randomName());
  temporaryRenameTableNew=new SchemaTableName(database,"tmp_presto_test_rename_" + randomName());
  temporaryCreateView=new SchemaTableName(database,"tmp_presto_test_create_" + randomName());
  tableOwner="presto_test";
  invalidTableHandle=new HiveTableHandle("hive",database,INVALID_TABLE,SESSION);
  dsColumn=new HiveColumnHandle(connectorId,"ds",0,HiveType.STRING,-1,true);
  fileFormatColumn=new HiveColumnHandle(connectorId,"file_format",1,HiveType.STRING,-1,true);
  dummyColumn=new HiveColumnHandle(connectorId,"dummy",2,HiveType.INT,-1,true);
  intColumn=new HiveColumnHandle(connectorId,"t_int",0,HiveType.INT,-1,true);
  invalidColumnHandle=new HiveColumnHandle(connectorId,INVALID_COLUMN,0,HiveType.STRING,0,false);
  partitions=ImmutableSet.<ConnectorPartition>builder().add(new HivePartition(tablePartitionFormat,"ds=2012-12-29/file_format=textfile/dummy=1",ImmutableMap.<ConnectorColumnHandle,Comparable<?>>builder().put(dsColumn,utf8Slice("2012-12-29")).put(fileFormatColumn,utf8Slice("textfile")).put(dummyColumn,1L).build(),Optional.<HiveBucket>absent())).add(new HivePartition(tablePartitionFormat,"ds=2012-12-29/file_format=sequencefile/dummy=2",ImmutableMap.<ConnectorColumnHandle,Comparable<?>>builder().put(dsColumn,utf8Slice("2012-12-29")).put(fileFormatColumn,utf8Slice("sequencefile")).put(dummyColumn,2L).build(),Optional.<HiveBucket>absent())).add(new HivePartition(tablePartitionFormat,"ds=2012-12-29/file_format=rcfile-text/dummy=3",ImmutableMap.<ConnectorColumnHandle,Comparable<?>>builder().put(dsColumn,utf8Slice("2012-12-29")).put(fileFormatColumn,utf8Slice("rcfile-text")).put(dummyColumn,3L).build(),Optional.<HiveBucket>absent())).add(new HivePartition(tablePartitionFormat,"ds=2012-12-29/file_format=rcfile-binary/dummy=4",ImmutableMap.<ConnectorColumnHandle,Comparable<?>>builder().put(dsColumn,utf8Slice("2012-12-29")).put(fileFormatColumn,utf8Slice("rcfile-binary")).put(dummyColumn,4L).build(),Optional.<HiveBucket>absent())).build();
  unpartitionedPartitions=ImmutableSet.<ConnectorPartition>of(new HivePartition(tableUnpartitioned));
  invalidPartition=new HivePartition(invalidTable,"unknown",ImmutableMap.<ConnectorColumnHandle,Comparable<?>>of(),Optional.<HiveBucket>absent());
  timeZone=DateTimeZone.forTimeZone(TimeZone.getTimeZone(timeZoneId));
}
