{
  OrcDataSource orcDataSource;
  try {
    FileSystem fileSystem=path.getFileSystem(configuration);
    long size=fileSystem.getFileStatus(path).getLen();
    FSDataInputStream inputStream=fileSystem.open(path);
    orcDataSource=new HdfsOrcDataSource(path.toString(),inputStream,size,maxMergeDistance);
  }
 catch (  Exception e) {
    if (nullToEmpty(e.getMessage()).trim().equals("Filesystem closed")) {
      throw new PrestoException(HIVE_CANNOT_OPEN_SPLIT,e);
    }
    throw Throwables.propagate(e);
  }
  ImmutableSet.Builder<Integer> includedColumns=ImmutableSet.builder();
  ImmutableList.Builder<ColumnReference<HiveColumnHandle>> columnReferences=ImmutableList.builder();
  for (  HiveColumnHandle column : columns) {
    if (!column.isPartitionKey()) {
      includedColumns.add(column.getHiveColumnIndex());
      Type type=typeManager.getType(column.getTypeSignature());
      columnReferences.add(new ColumnReference<>(column,column.getHiveColumnIndex(),type));
    }
  }
  OrcPredicate predicate=new TupleDomainOrcPredicate<>(effectivePredicate,columnReferences.build());
  try {
    OrcReader reader=new OrcReader(orcDataSource,metadataReader);
    OrcRecordReader recordReader=reader.createRecordReader(includedColumns.build(),predicate,start,length,hiveStorageTimeZone);
    return new OrcPageSource(recordReader,orcDataSource,partitionKeys,columns,hiveStorageTimeZone,typeManager);
  }
 catch (  Exception e) {
    try {
      orcDataSource.close();
    }
 catch (    IOException ignored) {
    }
    if (e instanceof BlockMissingException) {
      throw new PrestoException(HIVE_MISSING_DATA,e);
    }
    throw Throwables.propagate(e);
  }
}
