{
  assertFunction("cast(JSON 'null' as BIGINT)",BIGINT,null);
  assertFunction("cast(JSON '128' as BIGINT)",BIGINT,128L);
  assertInvalidFunction("cast(JSON '12345678901234567890' as BIGINT)",INVALID_CAST_ARGUMENT);
  assertFunction("cast(JSON '128.9' as BIGINT)",BIGINT,129L);
  assertFunction("cast(JSON '1234567890123456789.0' as BIGINT)",BIGINT,1234567890123456768L);
  assertFunction("cast(JSON '12345678901234567890.0' as BIGINT)",BIGINT,9223372036854775807L);
  assertFunction("cast(JSON '1e-324' as BIGINT)",BIGINT,0L);
  assertInvalidFunction("cast(JSON '1e309' as BIGINT)",INVALID_CAST_ARGUMENT);
  assertFunction("cast(JSON 'true' as BIGINT)",BIGINT,1L);
  assertFunction("cast(JSON 'false' as BIGINT)",BIGINT,0L);
  assertFunction("cast(JSON '\"128\"' as BIGINT)",BIGINT,128L);
  assertInvalidFunction("cast(JSON '\"12345678901234567890\"' as BIGINT)",INVALID_CAST_ARGUMENT);
  assertInvalidFunction("cast(JSON '\"128.9\"' as BIGINT)",INVALID_CAST_ARGUMENT);
  assertInvalidFunction("cast(JSON '\"true\"' as BIGINT)",INVALID_CAST_ARGUMENT);
  assertInvalidFunction("cast(JSON '\"false\"' as BIGINT)",INVALID_CAST_ARGUMENT);
  assertFunction("cast(JSON ' 128' as BIGINT)",BIGINT,128L);
  assertFunction("cast(json_extract('{\"x\":999}', '$.x') as BIGINT)",BIGINT,999L);
  assertInvalidCast("cast(JSON '{ \"x\" : 123}' as BIGINT)");
}
