{
  binder.bind(CassandraConnectorId.class).toInstance(new CassandraConnectorId(connectorId));
  binder.bind(CassandraConnector.class).in(Scopes.SINGLETON);
  binder.bind(CassandraMetadata.class).in(Scopes.SINGLETON);
  binder.bind(CassandraSplitManager.class).in(Scopes.SINGLETON);
  binder.bind(CassandraTokenSplitManager.class).in(Scopes.SINGLETON);
  binder.bind(CassandraRecordSetProvider.class).in(Scopes.SINGLETON);
  binder.bind(CassandraConnectorRecordSinkProvider.class).in(Scopes.SINGLETON);
  binder.bind(CassandraThriftConnectionFactory.class).in(Scopes.SINGLETON);
  configBinder(binder).bindConfig(CassandraClientConfig.class);
  binder.bind(CassandraThriftConnectionFactory.class).in(Scopes.SINGLETON);
  binder.bind(CachingCassandraSchemaProvider.class).in(Scopes.SINGLETON);
  newExporter(binder).export(CachingCassandraSchemaProvider.class).as(generatedNameOf(CachingCassandraSchemaProvider.class,connectorId));
  jsonCodecBinder(binder).bindListJsonCodec(ExtraColumnMetadata.class);
}
