{
  try {
    QueryDriversOperator operator=new QueryDriversOperator(10,Iterables.transform(servers,new Function<URI,QueryDriverProvider>(){
      @Override public QueryDriverProvider apply(      URI uri){
        return new HttpQueryProvider("sum-partial",asyncHttpClient,uri,ImmutableList.of(new TupleInfo(VARIABLE_BINARY,FIXED_INT_64)));
      }
    }
));
    HashAggregationOperator aggregation=new HashAggregationOperator(operator,0,ImmutableList.of(finalAggregation(longSumAggregation(1,0))),ImmutableList.of(concat(singleColumn(VARIABLE_BINARY,0,0),singleColumn(FIXED_INT_64,2,0))));
    for (    Page page : aggregation) {
      queryState.addPage(page);
    }
    queryState.sourceFinished();
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
    queryState.queryFailed(e);
    throw Throwables.propagate(e);
  }
catch (  Exception e) {
    queryState.queryFailed(e);
    throw Throwables.propagate(e);
  }
}
