{
  this.fragment=fragment;
  this.splits=sourceSplits.get("source");
  this.dataStreamProvider=dataStreamProvider;
  this.shardExecutor=shardExecutor;
  this.metadata=metadata;
  this.tupleInfos=ImmutableList.copyOf(IterableTransformer.on(fragment.getRoot().getOutputSymbols()).transform(Functions.forMap(fragment.getSymbols())).transform(com.facebook.presto.sql.compiler.Type.toRaw()).transform(new Function<Type,TupleInfo>(){
    @Override public TupleInfo apply(    Type input){
      return new TupleInfo(input);
    }
  }
).list());
  this.queryState=new QueryState(tupleInfos,1,pageBufferMax);
}
