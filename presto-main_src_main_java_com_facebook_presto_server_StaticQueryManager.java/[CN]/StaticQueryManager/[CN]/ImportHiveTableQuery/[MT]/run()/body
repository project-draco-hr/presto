{
  try {
    List<String> partitionNames=runWithRetry(new Callable<List<String>>(){
      @Override public List<String> call() throws Exception {
        return Ordering.natural().immutableSortedCopy(hiveClient.getPartitionNames(databaseName,tableName));
      }
    }
,databaseName + "." + tableName+ ".getPartitionNames");
    for (    List<String> subPartitionList : Lists.partition(partitionNames,MAX_SIMULTANEOUS_IMPORTS)) {
      ImmutableList.Builder<QueryDriverProvider> queryDriverProviderBuilder=ImmutableList.builder();
      for (      String subPartitionName : subPartitionList) {
        queryDriverProviderBuilder.add(new HttpQueryProvider("import-hive-table-partition:" + databaseName + ":"+ tableName+ ":"+ subPartitionName,asyncHttpClient,URI.create("http://localhost:8080/v1/presto/query")));
      }
      QueryDriversOperator operator=new QueryDriversOperator(10,queryDriverProviderBuilder.build());
      AggregationOperator sumOperator=new AggregationOperator(operator,ImmutableList.of(LongSumAggregation.provider(0,0)),ImmutableList.of(concat(singleColumn(Type.FIXED_INT_64,0,0))));
      for (      Page page : sumOperator) {
        queryState.addPage(page);
      }
    }
    queryState.sourceFinished();
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
    queryState.queryFailed(e);
    throw Throwables.propagate(e);
  }
catch (  Exception e) {
    queryState.queryFailed(e);
    throw Throwables.propagate(e);
  }
}
