{
  this.taskId=taskId;
  this.fragment=fragment;
  this.splits=splits;
  this.exchangeSources=exchangeSources;
  this.sourceProvider=sourceProvider;
  this.shardExecutor=shardExecutor;
  this.metadata=metadata;
  List<TupleInfo> tupleInfos=ImmutableList.copyOf(IterableTransformer.on(fragment.getRoot().getOutputSymbols()).transform(Functions.forMap(fragment.getSymbols())).transform(com.facebook.presto.sql.analyzer.Type.toRaw()).transform(new Function<Type,TupleInfo>(){
    @Override public TupleInfo apply(    Type input){
      return new TupleInfo(input);
    }
  }
).list());
  this.taskOutput=new TaskOutput(taskId,location,outputIds,tupleInfos,pageBufferMax,splits.size());
}
