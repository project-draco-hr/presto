{
  final ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream(1024);
  TupleStreamSerde serde=TupleStreamSerdes.Encoding.RAW.createSerde();
  StreamWriterTupleValueSink streamWriterTupleValueSink=new StreamWriterTupleValueSink(new OutputSupplier<OutputStream>(){
    @Override public OutputStream getOutput() throws IOException {
      return byteArrayOutputStream;
    }
  }
,serde.createSerializer());
  TupleStream tupleStream=new GroupByOperator(Blocks.createTupleStream(0,"a","a","b","b"));
  Cursor cursor=tupleStream.cursor(new QuerySession());
  cursor.advanceNextValue();
  streamWriterTupleValueSink.process(Cursors.asTupleStreamPosition(cursor));
  cursor.advanceNextValue();
  streamWriterTupleValueSink.process(Cursors.asTupleStreamPosition(cursor));
  cursor.advanceNextValue();
  streamWriterTupleValueSink.finished();
  TupleStream resultStream=serde.createDeserializer().deserialize(Range.ALL,Slices.wrappedBuffer(byteArrayOutputStream.toByteArray()));
  Blocks.assertTupleStreamEquals(resultStream,tupleStream);
}
