{
  long now=(System.currentTimeMillis() / 1000) * 1000;
  String nowString=FORMATTER.print(now);
  byte[] json=format("{\"a_number\":%d,\"a_string\":\"%s\"}",now,nowString).getBytes(StandardCharsets.UTF_8);
  JsonRowDecoder rowDecoder=new JsonRowDecoder(PROVIDER.get());
  DecoderTestColumnHandle row1=new DecoderTestColumnHandle("",0,"row1",BigintType.BIGINT,"a_number",DEFAULT_FIELD_DECODER_NAME,null,false,false,false);
  DecoderTestColumnHandle row2=new DecoderTestColumnHandle("",1,"row2",VarcharType.VARCHAR,"a_string",DEFAULT_FIELD_DECODER_NAME,null,false,false,false);
  DecoderTestColumnHandle row3=new DecoderTestColumnHandle("",2,"row3",BigintType.BIGINT,"a_number",RFC2822JsonFieldDecoder.NAME,null,false,false,false);
  DecoderTestColumnHandle row4=new DecoderTestColumnHandle("",3,"row4",BigintType.BIGINT,"a_string",RFC2822JsonFieldDecoder.NAME,null,false,false,false);
  DecoderTestColumnHandle row5=new DecoderTestColumnHandle("",4,"row5",VarcharType.VARCHAR,"a_number",RFC2822JsonFieldDecoder.NAME,null,false,false,false);
  DecoderTestColumnHandle row6=new DecoderTestColumnHandle("",5,"row6",VarcharType.VARCHAR,"a_string",RFC2822JsonFieldDecoder.NAME,null,false,false,false);
  List<DecoderColumnHandle> columns=ImmutableList.of(row1,row2,row3,row4,row5,row6);
  Set<FieldValueProvider> providers=new HashSet<>();
  boolean corrupt=rowDecoder.decodeRow(json,null,providers,columns,map(columns));
  assertFalse(corrupt);
  assertEquals(providers.size(),columns.size());
  checkValue(providers,row1,now);
  checkValue(providers,row2,nowString);
  checkValue(providers,row3,now);
  checkValue(providers,row4,now);
  checkValue(providers,row5,Long.toString(now));
  checkValue(providers,row6,nowString);
}
