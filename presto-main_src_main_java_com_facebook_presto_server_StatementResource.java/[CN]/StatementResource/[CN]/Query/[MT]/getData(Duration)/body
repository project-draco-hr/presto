{
  QueryInfo queryInfo=queryManager.getQueryInfo(queryId);
  while (maxWait.toMillis() > 1 && !isQueryStarted(queryInfo)) {
    maxWait=queryManager.waitForStateChange(queryId,queryInfo.getState(),maxWait);
    queryInfo=queryManager.getQueryInfo(queryId);
  }
  if (!isQueryStarted(queryInfo) || queryInfo.getOutputStage() == null) {
    return null;
  }
  if (columns == null) {
    columns=createColumnsList(queryInfo);
  }
  List<Type> types=queryInfo.getOutputStage().getTypes();
  updateExchangeClient(queryInfo.getOutputStage());
  ImmutableList.Builder<RowIterable> pages=ImmutableList.builder();
  int bytes=0;
  while (bytes < DESIRED_RESULT_BYTES) {
    Page page=exchangeClient.getNextPage(maxWait);
    if (page == null) {
      break;
    }
    bytes+=page.getSizeInBytes();
    pages.add(new RowIterable(session,types,page));
    maxWait=new Duration(0,TimeUnit.MILLISECONDS);
  }
  if (bytes == 0) {
    return null;
  }
  return Iterables.concat(pages.build());
}
