{
  PlanNodeId sourceId=new PlanNodeId("source");
  final List<Type> types=ImmutableList.<Type>of(VARCHAR,BIGINT,BIGINT);
  TableScanOperator source=new TableScanOperator(driverContext.addOperatorContext(99,new PlanNodeId("test"),"values"),sourceId,new PageSourceProvider(){
    @Override public ConnectorPageSource createPageSource(    Session session,    Split split,    List<ColumnHandle> columns){
      return new FixedPageSource(rowPagesBuilder(types).addSequencePage(10,20,30,40).build());
    }
  }
,types,ImmutableList.<ColumnHandle>of());
  PageConsumerOperator sink=createSinkOperator(source);
  Driver driver=new Driver(driverContext,source,sink);
  assertSame(driver.getDriverContext(),driverContext);
  assertFalse(driver.isFinished());
  assertFalse(driver.processFor(new Duration(1,TimeUnit.MILLISECONDS)).isDone());
  assertFalse(driver.isFinished());
  driver.updateSource(new TaskSource(sourceId,ImmutableSet.of(new ScheduledSplit(0,sourceId,newMockSplit())),true));
  assertFalse(driver.isFinished());
  assertTrue(driver.processFor(new Duration(1,TimeUnit.SECONDS)).isDone());
  assertTrue(driver.isFinished());
  assertTrue(sink.isFinished());
  assertTrue(source.isFinished());
}
