{
  PlanNodeId sourceId=new PlanNodeId("source");
  TableScanOperator source=new TableScanOperator(driverContext.addOperatorContext(99,"values"),sourceId,new DataStreamProvider(){
    @Override public Operator createNewDataStream(    OperatorContext operatorContext,    Split split,    List<ColumnHandle> columns){
      return new ValuesOperator(driverContext.addOperatorContext(0,"values"),rowPagesBuilder(VARCHAR,BIGINT,BIGINT).addSequencePage(10,20,30,40).build());
    }
  }
,ImmutableList.of(VARCHAR,BIGINT,BIGINT),ImmutableList.<ColumnHandle>of());
  MaterializingOperator sink=createSinkOperator(source);
  Driver driver=new Driver(driverContext,source,sink);
  assertSame(driver.getDriverContext(),driverContext);
  assertFalse(driver.isFinished());
  assertTrue(driver.processFor(new Duration(1,TimeUnit.MILLISECONDS)).isDone());
  assertFalse(driver.isFinished());
  driver.updateSource(new TaskSource(sourceId,ImmutableSet.of(new ScheduledSplit(0,newMockSplit())),true));
  assertFalse(driver.isFinished());
  assertTrue(driver.processFor(new Duration(1,TimeUnit.SECONDS)).isDone());
  assertTrue(driver.isFinished());
  assertTrue(sink.isFinished());
  assertTrue(source.isFinished());
}
