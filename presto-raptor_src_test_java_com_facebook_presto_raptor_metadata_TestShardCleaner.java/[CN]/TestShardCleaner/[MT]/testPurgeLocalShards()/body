{
  TestingDao dao=dbi.onDemand(TestingDao.class);
  ShardManagerDao shardDao=dbi.onDemand(ShardManagerDao.class);
  UUID shard1=randomUUID();
  UUID shard2=randomUUID();
  UUID shard3=randomUUID();
  UUID shard4=randomUUID();
  int node1=shardDao.insertNode("node1");
  int node2=shardDao.insertNode("node2");
  long now=System.currentTimeMillis();
  Timestamp time1=new Timestamp(now - DAYS.toMillis(4));
  Timestamp time2=new Timestamp(now - DAYS.toMillis(2));
  dao.insertDeletedShardNode(shard1,node1,time1);
  dao.insertDeletedShardNode(shard2,node1,time1);
  dao.insertDeletedShardNode(shard3,node1,time2);
  dao.insertDeletedShardNode(shard4,node2,time1);
  createShardFiles(shard1,shard2,shard3,shard4);
  cleaner.purgeLocalShards();
  assertFalse(shardFileExists(shard1));
  assertFalse(shardFileExists(shard2));
  assertTrue(shardFileExists(shard3));
  assertTrue(shardFileExists(shard4));
  assertQuery("SELECT shard_uuid, node_id, purge_time IS NULL FROM deleted_shard_nodes",row(shard1,node1,false),row(shard2,node1,false),row(shard3,node1,true),row(shard4,node2,true));
}
