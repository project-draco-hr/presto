{
  if (sourceIterator.hasNext()) {
    Split sourceSplit=sourceIterator.next();
    NativeSplit writingSplit=new NativeSplit(shardManager.allocateShard(tableWriterNode.getTable()),sourceSplit.getAddresses());
    String partition="unpartitioned";
    boolean lastSplit=false;
    if (sourceSplit instanceof PartitionedSplit) {
      PartitionedSplit partitionedSplit=(PartitionedSplit)sourceSplit;
      partition=partitionedSplit.getPartition();
      lastSplit=partitionedSplit.isLastSplit();
    }
    addPartitionShard(partition,lastSplit,writingSplit.getShardId());
    CollocatedSplit collocatedSplit=new CollocatedSplit(ImmutableMap.of(planNodeId,sourceSplit,tableWriterNode.getId(),writingSplit),sourceSplit.getAddresses(),sourceSplit.isRemotelyAccessible());
    shardsInFlight.incrementAndGet();
    return collocatedSplit;
  }
 else {
    finishOpenPartitions();
    dropAdditionalPartitions();
    return endOfData();
  }
}
