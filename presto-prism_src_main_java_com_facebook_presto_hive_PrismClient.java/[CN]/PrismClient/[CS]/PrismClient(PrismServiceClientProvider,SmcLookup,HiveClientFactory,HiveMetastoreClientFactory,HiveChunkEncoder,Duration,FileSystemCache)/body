{
  this.prismServiceClientProvider=checkNotNull(prismServiceClientProvider,"prismServiceClientProvider is null");
  this.smcLookup=checkNotNull(smcLookup,"smcLookup is null");
  this.hiveClientFactory=checkNotNull(hiveClientFactory,"hiveClientFactory is null");
  this.metastoreClientFactory=checkNotNull(metastoreClientFactory,"metastoreClientFactory is null");
  this.hiveChunkEncoder=checkNotNull(hiveChunkEncoder,"hiveChunkEncoder is null");
  checkNotNull(cacheDuration,"cacheDuration is null");
  namespaceCache=CacheBuilder.newBuilder().expireAfterWrite((long)cacheDuration.toMillis(),TimeUnit.MILLISECONDS).build(new CacheLoader<String,HiveNamespace>(){
    @Override public HiveNamespace load(    String namespace) throws Exception {
      return readNamespaceData(namespace);
    }
  }
);
  namespaceListCache=CacheBuilder.newBuilder().expireAfterWrite((long)cacheDuration.toMillis(),TimeUnit.MILLISECONDS).build();
  this.fileSystemCache=fileSystemCache;
}
