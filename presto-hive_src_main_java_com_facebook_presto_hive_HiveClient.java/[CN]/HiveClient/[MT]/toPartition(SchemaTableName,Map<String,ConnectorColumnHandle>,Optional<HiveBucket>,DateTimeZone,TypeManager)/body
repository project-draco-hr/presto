{
  return new Function<String,HivePartition>(){
    @Override public HivePartition apply(    String partitionId){
      try {
        if (partitionId.equals(UNPARTITIONED_ID)) {
          return new HivePartition(tableName);
        }
        ImmutableMap.Builder<ConnectorColumnHandle,SerializableNativeValue> builder=ImmutableMap.builder();
        for (        Entry<String,String> entry : makeSpecFromName(partitionId).entrySet()) {
          ConnectorColumnHandle handle=columnsByName.get(entry.getKey());
          checkArgument(handle != null,"Invalid partition key %s in partition %s",entry.getKey(),partitionId);
          HiveColumnHandle columnHandle=checkType(handle,HiveColumnHandle.class,"handle");
          builder.put(columnHandle,parsePartitionValue(partitionId,entry.getValue(),columnHandle.getHiveType(),timeZone));
        }
        return new HivePartition(tableName,partitionId,builder.build(),bucket);
      }
 catch (      MetaException e) {
        throw Throwables.propagate(e);
      }
    }
  }
;
}
