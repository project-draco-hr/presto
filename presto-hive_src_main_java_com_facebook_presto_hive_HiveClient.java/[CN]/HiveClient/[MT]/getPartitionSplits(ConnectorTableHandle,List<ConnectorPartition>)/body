{
  HiveTableHandle hiveTableHandle=checkType(tableHandle,HiveTableHandle.class,"tableHandle");
  checkNotNull(partitions,"partitions is null");
  ConnectorPartition partition=Iterables.getFirst(partitions,null);
  if (partition == null) {
    return new FixedSplitSource(connectorId,ImmutableList.<ConnectorSplit>of());
  }
  HivePartition hivePartition=checkType(partition,HivePartition.class,"partition");
  SchemaTableName tableName=hivePartition.getTableName();
  Optional<HiveBucket> bucket=hivePartition.getBucket();
  List<String> partitionNames=new ArrayList<>(Lists.transform(partitions,HiveUtil.partitionIdGetter()));
  Collections.sort(partitionNames,Ordering.natural().reverse());
  Table table;
  Iterable<Partition> hivePartitions;
  try {
    table=metastore.getTable(tableName.getSchemaName(),tableName.getTableName());
    hivePartitions=getPartitions(table,tableName,partitionNames);
  }
 catch (  NoSuchObjectException e) {
    throw new TableNotFoundException(tableName);
  }
  return new HiveSplitSourceProvider(connectorId,table,partitionNames,hivePartitions,bucket,maxSplitSize,maxOutstandingSplits,maxSplitIteratorThreads,hdfsEnvironment,namenodeStats,directoryLister,executor,maxPartitionBatchSize,hiveTableHandle.getSession(),maxInitialSplitSize,maxInitialSplits).get();
}
