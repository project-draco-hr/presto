{
  HiveTableHandle hiveTableHandle=checkType(tableHandle,HiveTableHandle.class,"tableHandle");
  checkNotNull(connectorPartitions,"connectorPartitions is null");
  List<HivePartition> partitions=Lists.transform(connectorPartitions,new Function<ConnectorPartition,HivePartition>(){
    @Override public HivePartition apply(    ConnectorPartition partition){
      return checkType(partition,HivePartition.class,"partition");
    }
  }
);
  HivePartition partition=Iterables.getFirst(partitions,null);
  if (partition == null) {
    return new FixedSplitSource(connectorId,ImmutableList.<ConnectorSplit>of());
  }
  SchemaTableName tableName=partition.getTableName();
  Optional<HiveBucket> bucket=partition.getBucket();
  partitions=Ordering.natural().onResultOf(partitionIdGetter()).reverse().sortedCopy(partitions);
  Table table;
  Iterable<HivePartitionMetadata> hivePartitions;
  try {
    table=metastore.getTable(tableName.getSchemaName(),tableName.getTableName());
    hivePartitions=getPartitionMetadata(table,tableName,partitions);
  }
 catch (  NoSuchObjectException e) {
    throw new TableNotFoundException(tableName);
  }
  return new HiveSplitSourceProvider(connectorId,table,hivePartitions,bucket,maxSplitSize,maxOutstandingSplits,maxSplitIteratorThreads,hdfsEnvironment,namenodeStats,directoryLister,executor,maxPartitionBatchSize,hiveTableHandle.getSession(),maxInitialSplitSize,maxInitialSplits,recursiveDfsWalkerEnabled).get();
}
