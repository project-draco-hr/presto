{
  try {
    Deserializer deserializer=MetaStoreUtils.getDeserializer(null,MetaStoreUtils.getSchema(table));
    ObjectInspector inspector=deserializer.getObjectInspector();
    checkArgument(inspector.getCategory() == ObjectInspector.Category.STRUCT,"expected STRUCT: %s",inspector.getCategory());
    StructObjectInspector structObjectInspector=(StructObjectInspector)inspector;
    ImmutableList.Builder<HiveColumnHandle> columns=ImmutableList.builder();
    List<FieldSchema> partitionKeys=table.getPartitionKeys();
    for (int i=0; i < partitionKeys.size(); i++) {
      FieldSchema field=partitionKeys.get(i);
      HiveType hiveType=getHiveType(field.getType());
      columns.add(new HiveColumnHandle(field.getName(),i,hiveType,-1,true));
    }
    int hiveColumnIndex=0;
    for (    StructField field : structObjectInspector.getAllStructFieldRefs()) {
      HiveType hiveType=getHiveType(field.getFieldObjectInspector());
      if (hiveType != null) {
        columns.add(new HiveColumnHandle(field.getFieldName(),partitionKeys.size() + hiveColumnIndex,hiveType,hiveColumnIndex,false));
      }
      hiveColumnIndex++;
    }
    return columns.build();
  }
 catch (  MetaException|SerDeException e) {
    throw Throwables.propagate(e);
  }
}
