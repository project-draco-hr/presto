{
  checkNotNull(partitions,"partitions is null");
  Partition partition=Iterables.getFirst(partitions,null);
  if (partition == null) {
    return ImmutableList.of();
  }
  checkArgument(partition instanceof HivePartition,"Partition must be a hive partition");
  SchemaTableName tableName=((HivePartition)partition).getTableName();
  List<String> partitionNames=Lists.transform(partitions,new Function<Partition,String>(){
    @Override public String apply(    Partition input){
      return input.getPartitionId();
    }
  }
);
  Table table;
  Iterable<org.apache.hadoop.hive.metastore.api.Partition> hivePartitions;
  try {
    table=metastore.getTable(tableName.getSchemaName(),tableName.getTableName());
    hivePartitions=getPartitions(tableName,partitionNames);
  }
 catch (  NoSuchObjectException e) {
    throw new TableNotFoundException(tableName);
  }
  return new PartitionChunkIterable(clientId,table,partitionNames,hivePartitions,maxChunkBytes,maxOutstandingChunks,maxChunkIteratorThreads,hdfsEnvironment,executor,partitionBatchSize);
}
