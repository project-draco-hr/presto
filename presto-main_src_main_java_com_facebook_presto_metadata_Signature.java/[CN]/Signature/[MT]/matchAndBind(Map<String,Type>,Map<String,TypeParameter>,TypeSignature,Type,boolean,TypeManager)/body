{
  List<TypeSignature> typeSignatures=parameter.getTypeParametersAsTypeSignatures();
  if (boundParameters.containsKey(parameter.getBase())) {
    checkArgument(typeSignatures.isEmpty(),"Unexpected parameteric type");
    if (allowCoercion) {
      if (canCoerce(type,boundParameters.get(parameter.getBase()))) {
        return true;
      }
 else       if (canCoerce(boundParameters.get(parameter.getBase()),type) && typeParameters.get(parameter.getBase()).canBind(type)) {
        boundParameters.put(parameter.getBase(),type);
        return true;
      }
      return false;
    }
 else {
      return type.equals(boundParameters.get(parameter.getBase()));
    }
  }
  if (!typeSignatures.isEmpty()) {
    if (type.getTypeParameters().size() != typeSignatures.size()) {
      return false;
    }
    for (int i=0; i < typeSignatures.size(); i++) {
      Type componentType=type.getTypeParameters().get(i);
      TypeSignature componentSignature=typeSignatures.get(i);
      if (!matchAndBind(boundParameters,typeParameters,componentSignature,componentType,allowCoercion,typeManager)) {
        return false;
      }
    }
  }
  if (typeParameters.containsKey(parameter.getBase())) {
    TypeParameter typeParameter=typeParameters.get(parameter.getBase());
    if (!typeParameter.canBind(type)) {
      return false;
    }
    boundParameters.put(parameter.getBase(),type);
    return true;
  }
  if (!typeSignatures.isEmpty()) {
    return type.getTypeSignature().getBase().equals(parameter.getBase());
  }
  if (allowCoercion) {
    return canCoerce(type,typeManager.getType(parseTypeSignature(parameter.getBase())));
  }
 else {
    return type.equals(typeManager.getType(parseTypeSignature(parameter.getBase())));
  }
}
