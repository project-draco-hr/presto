{
  List<TypeSignatureParameter> parameters=parameter.getParameters();
  if (boundParameters.containsKey(parameter.getBase())) {
    checkArgument(parameters.isEmpty(),"Unexpected parameteric type");
    if (allowCoercion) {
      if (canCoerce(type,boundParameters.get(parameter.getBase()))) {
        return true;
      }
 else       if (canCoerce(boundParameters.get(parameter.getBase()),type) && typeParameters.get(parameter.getBase()).canBind(type)) {
        boundParameters.put(parameter.getBase(),type);
        return true;
      }
      return false;
    }
 else {
      return type.equals(boundParameters.get(parameter.getBase()));
    }
  }
  if (!parameters.isEmpty()) {
    if (type.getTypeParameters().size() != parameters.size()) {
      return false;
    }
    for (int i=0; i < parameters.size(); i++) {
      Type componentType=type.getTypeParameters().get(i);
      TypeSignatureParameter componentParameter=parameters.get(i);
      TypeSignature componentSignature;
switch (componentParameter.getKind()) {
case TYPE_SIGNATURE:
        componentSignature=componentParameter.getTypeSignature();
      break;
case NAMED_TYPE_SIGNATURE:
    componentSignature=componentParameter.getNamedTypeSignature().getTypeSignature();
  break;
default :
return false;
}
if (!matchAndBind(boundParameters,typeParameters,componentSignature,componentType,allowCoercion,typeManager)) {
return false;
}
}
}
if (typeParameters.containsKey(parameter.getBase())) {
TypeParameterRequirement typeParameterRequirement=typeParameters.get(parameter.getBase());
if (!typeParameterRequirement.canBind(type)) {
return false;
}
boundParameters.put(parameter.getBase(),type);
return true;
}
if (!parameters.isEmpty()) {
return type.getTypeSignature().getBase().equals(parameter.getBase());
}
if (allowCoercion) {
return canCoerce(type,typeManager.getType(parseTypeSignature(parameter.getBase())));
}
 else {
return type.equals(typeManager.getType(parseTypeSignature(parameter.getBase())));
}
}
