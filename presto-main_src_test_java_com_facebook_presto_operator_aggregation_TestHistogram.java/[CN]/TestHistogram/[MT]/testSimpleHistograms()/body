{
  MapType mapType=new MapType(VARCHAR,BIGINT);
  InternalAggregationFunction aggregationFunction=metadata.getFunctionRegistry().getAggregateFunctionImplementation(new Signature(NAME,AGGREGATE,mapType.getTypeSignature(),parseTypeSignature(StandardTypes.VARCHAR)));
  assertAggregation(aggregationFunction,1.0,ImmutableMap.of("a",1L,"b",1L,"c",1L),createStringsBlock("a","b","c"));
  mapType=new MapType(BIGINT,BIGINT);
  aggregationFunction=metadata.getFunctionRegistry().getAggregateFunctionImplementation(new Signature(NAME,AGGREGATE,mapType.getTypeSignature(),parseTypeSignature(StandardTypes.BIGINT)));
  assertAggregation(aggregationFunction,1.0,ImmutableMap.of(100L,1L,200L,1L,300L,1L),createLongsBlock(100L,200L,300L));
  mapType=new MapType(DOUBLE,BIGINT);
  aggregationFunction=metadata.getFunctionRegistry().getAggregateFunctionImplementation(new Signature(NAME,AGGREGATE,mapType.getTypeSignature(),parseTypeSignature(StandardTypes.DOUBLE)));
  assertAggregation(aggregationFunction,1.0,ImmutableMap.of(0.1,1L,0.3,1L,0.2,1L),createDoublesBlock(0.1,0.3,0.2));
  mapType=new MapType(BOOLEAN,BIGINT);
  aggregationFunction=metadata.getFunctionRegistry().getAggregateFunctionImplementation(new Signature(NAME,AGGREGATE,mapType.getTypeSignature(),parseTypeSignature(StandardTypes.BOOLEAN)));
  assertAggregation(aggregationFunction,1.0,ImmutableMap.of(true,1L,false,1L),createBooleansBlock(true,false));
}
