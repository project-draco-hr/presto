{
  if (pages.isEmpty()) {
    return pages;
  }
  PageBuilder pageBuilder=new PageBuilder(types);
  ImmutableList.Builder<Page> partitionedPages=ImmutableList.builder();
  for (  Page page : pages) {
    for (int position=0; position < page.getPositionCount(); position++) {
      int partitionHashBucket=getPartitionHashBucket(position,page);
      if (partitionHashBucket != partition) {
        continue;
      }
      pageBuilder.declarePosition();
      for (int channel=0; channel < types.size(); channel++) {
        Type type=types.get(channel);
        type.appendTo(page.getBlock(channel),position,pageBuilder.getBlockBuilder(channel));
      }
      if (pageBuilder.isFull()) {
        partitionedPages.add(pageBuilder.build());
        pageBuilder.reset();
      }
    }
  }
  if (!pageBuilder.isEmpty()) {
    partitionedPages.add(pageBuilder.build());
  }
  return partitionedPages.build();
}
