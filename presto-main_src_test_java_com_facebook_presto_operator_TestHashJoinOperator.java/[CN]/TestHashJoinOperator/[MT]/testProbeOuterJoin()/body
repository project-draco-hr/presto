{
  Operator buildSource=createOperator(new Page(createStringSequenceBlock(20,30),createLongSequenceBlock(30,40),createLongSequenceBlock(40,50)));
  Operator probeSource=createOperator(new Page(createStringSequenceBlock(0,1000),createLongSequenceBlock(1000,2000),createLongSequenceBlock(2000,3000)));
  SourceHashSupplier sourceHashSupplier=new SourceHashSupplier(buildSource,0,10,new TaskMemoryManager(new DataSize(1,MEGABYTE)),new OperatorStats());
  HashJoinOperator joinOperator=HashJoinOperator.outerjoin(sourceHashSupplier,probeSource,0);
  Operator expected=createOperator(new Page(createStringSequenceBlock(0,1000),createLongSequenceBlock(1000,2000),createLongSequenceBlock(2000,3000),createStringsBlock(concat(createStringNullSequence(20),createStringSequence(20,30),createStringNullSequence(970))),createLongsBlock(concat(createLongNullSequence(20),createLongSequence(30,40),createLongNullSequence(970))),createLongsBlock(concat(createLongNullSequence(20),createLongSequence(40,50),createLongNullSequence(970)))));
  assertOperatorEquals(joinOperator,expected);
}
