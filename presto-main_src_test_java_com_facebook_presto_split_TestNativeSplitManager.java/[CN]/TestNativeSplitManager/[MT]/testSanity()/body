{
  PartitionResult partitionResult=nativeSplitManager.getPartitions(tableHandle,TupleDomain.all());
  assertEquals(partitionResult.getPartitions().size(),2);
  assertTrue(partitionResult.getUndeterminedTupleDomain().isAll());
  List<Partition> partitions=partitionResult.getPartitions();
  TupleDomain columnUnionedTupleDomain=partitions.get(0).getTupleDomain().columnWiseUnion(partitions.get(1).getTupleDomain());
  assertEquals(columnUnionedTupleDomain,TupleDomain.withColumnDomains(ImmutableMap.of(dsColumnHandle,Domain.create(SortedRangeSet.of(Range.equal("1"),Range.equal("2")),false))));
  SplitSource splitSource=nativeSplitManager.getPartitionSplits(tableHandle,partitions);
  int splitCount=0;
  while (!splitSource.isFinished()) {
    splitCount+=splitSource.getNextBatch(1000).size();
  }
  assertEquals(splitCount,4);
}
