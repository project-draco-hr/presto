{
  List<Symbol> newOutputSymbols=FluentIterable.from(node.getOutputSymbols()).filter(in(expectedOutputs)).toList();
  Set<Symbol> newLookupSymbols=FluentIterable.from(node.getLookupSymbols()).filter(in(expectedOutputs)).toSet();
  Set<Symbol> requiredAssignmentSymbols=expectedOutputs;
  if (!node.getEffectiveTupleDomain().isNone()) {
    Set<Symbol> requiredSymbols=Maps.filterValues(node.getAssignments(),Predicates.in(node.getEffectiveTupleDomain().getDomains().keySet())).keySet();
    requiredAssignmentSymbols=Sets.union(expectedOutputs,requiredSymbols);
  }
  Map<Symbol,ColumnHandle> newAssignments=Maps.filterKeys(node.getAssignments(),in(requiredAssignmentSymbols));
  return new IndexSourceNode(node.getId(),node.getIndexHandle(),node.getTableHandle(),newLookupSymbols,newOutputSymbols,newAssignments,node.getEffectiveTupleDomain());
}
