{
  ImmutableSet.Builder<Symbol> expectedInputs=ImmutableSet.<Symbol>builder().addAll(expectedOutputs).addAll(node.getPartitionBy()).addAll(node.getOrderBy());
  ImmutableMap.Builder<Symbol,Signature> functions=ImmutableMap.builder();
  ImmutableMap.Builder<Symbol,FunctionCall> functionCalls=ImmutableMap.builder();
  for (  Map.Entry<Symbol,FunctionCall> entry : node.getWindowFunctions().entrySet()) {
    Symbol symbol=entry.getKey();
    if (expectedOutputs.contains(symbol)) {
      FunctionCall call=entry.getValue();
      expectedInputs.addAll(DependencyExtractor.extractUnique(call));
      functionCalls.put(symbol,call);
      functions.put(symbol,node.getSignatures().get(symbol));
    }
  }
  PlanNode source=planRewriter.rewrite(node.getSource(),expectedInputs.build());
  return new WindowNode(node.getId(),source,node.getPartitionBy(),node.getOrderBy(),node.getOrderings(),functionCalls.build(),functions.build());
}
