{
  if (expectedOutputs.isEmpty()) {
    for (    Symbol symbol : node.getOutputSymbols()) {
      if (Type.isNumeric(types.get(symbol))) {
        expectedOutputs=ImmutableSet.of(symbol);
        break;
      }
    }
    if (expectedOutputs.isEmpty()) {
      expectedOutputs=ImmutableSet.of(node.getOutputSymbols().get(0));
    }
  }
  checkState(!expectedOutputs.isEmpty());
  Set<Symbol> requiredSymbols=Sets.union(expectedOutputs,DependencyExtractor.extract(node.getPartitionPredicate()));
  Map<Symbol,ColumnHandle> newAssignments=Maps.filterKeys(node.getAssignments(),in(requiredSymbols));
  return new TableScanNode(node.getId(),node.getTable(),ImmutableList.copyOf(expectedOutputs),newAssignments,node.getPartitionPredicate(),node.getUpstreamPredicateHint());
}
