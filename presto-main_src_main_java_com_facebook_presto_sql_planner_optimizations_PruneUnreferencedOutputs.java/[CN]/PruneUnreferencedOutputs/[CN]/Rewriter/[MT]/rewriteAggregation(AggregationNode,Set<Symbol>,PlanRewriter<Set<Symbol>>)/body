{
  ImmutableSet.Builder<Symbol> expectedInputs=ImmutableSet.<Symbol>builder().addAll(node.getGroupBy());
  ImmutableMap.Builder<Symbol,FunctionHandle> functions=ImmutableMap.builder();
  ImmutableMap.Builder<Symbol,FunctionCall> functionCalls=ImmutableMap.builder();
  for (  Map.Entry<Symbol,FunctionCall> entry : node.getAggregations().entrySet()) {
    Symbol symbol=entry.getKey();
    if (expectedOutputs.contains(symbol)) {
      FunctionCall call=entry.getValue();
      expectedInputs.addAll(DependencyExtractor.extract(call));
      functionCalls.put(symbol,call);
      functions.put(symbol,node.getFunctions().get(symbol));
    }
  }
  PlanNode source=planRewriter.rewrite(node.getSource(),expectedInputs.build());
  return new AggregationNode(node.getId(),source,node.getGroupBy(),functionCalls.build(),functions.build());
}
