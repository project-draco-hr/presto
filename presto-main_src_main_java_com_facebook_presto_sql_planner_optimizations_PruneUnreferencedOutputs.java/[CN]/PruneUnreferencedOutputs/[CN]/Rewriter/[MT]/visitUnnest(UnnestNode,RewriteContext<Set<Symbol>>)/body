{
  List<Symbol> replicateSymbols=FluentIterable.from(node.getReplicateSymbols()).filter(in(context.get())).toList();
  Optional<Symbol> ordinalitySymbol=node.getOrdinalitySymbol();
  if (ordinalitySymbol.isPresent() && !context.get().contains(ordinalitySymbol.get())) {
    ordinalitySymbol=Optional.empty();
  }
  Map<Symbol,List<Symbol>> unnestSymbols=node.getUnnestSymbols();
  ImmutableSet.Builder<Symbol> expectedInputs=ImmutableSet.<Symbol>builder().addAll(replicateSymbols).addAll(unnestSymbols.keySet());
  PlanNode source=context.rewrite(node.getSource(),expectedInputs.build());
  return new UnnestNode(node.getId(),source,replicateSymbols,unnestSymbols,ordinalitySymbol);
}
