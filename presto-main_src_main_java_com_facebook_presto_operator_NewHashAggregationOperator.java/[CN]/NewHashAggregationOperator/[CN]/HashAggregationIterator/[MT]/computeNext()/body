{
  if (!groupByBlocksIterator.hasNext()) {
    endOfData();
    return null;
  }
  Block[] blocks=new Block[getChannelCount()];
  blocks[0]=groupByBlocksIterator.next();
  int pagePositionCount=blocks[0].getPositionCount();
  for (int channel=1; channel < getChannelCount(); channel++) {
    Aggregator aggregator=aggregates.get(channel - 1);
    BlockBuilder blockBuilder=new BlockBuilder(aggregator.getTupleInfo());
    for (int position=0; position < pagePositionCount; position++) {
      aggregator.evaluate(currentPosition + position,blockBuilder);
    }
    blocks[channel]=blockBuilder.build();
  }
  Page page=new Page(blocks);
  currentPosition+=pagePositionCount;
  return page;
}
