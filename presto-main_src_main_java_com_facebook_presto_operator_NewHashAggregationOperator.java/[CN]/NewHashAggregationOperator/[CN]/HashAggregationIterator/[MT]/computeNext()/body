{
  if (!groupByBlocksIterator.hasNext()) {
    endOfData();
    return null;
  }
  BlockBuilder[] outputs=new BlockBuilder[getChannelCount() - 1];
  for (int i=0; i < outputs.length; i++) {
    outputs[i]=new BlockBuilder(getTupleInfos().get(i + 1));
  }
  UncompressedBlock groupByBlock=groupByBlocksIterator.next();
  for (int i=0; i < groupByBlock.getPositionCount(); i++) {
    for (int channel=0; channel < outputs.length; channel++) {
      aggregates.get(channel).evaluate(currentPosition,outputs[channel]);
    }
    currentPosition++;
  }
  Block[] blocks=new Block[outputs.length + 1];
  blocks[0]=groupByBlock;
  for (int i=0; i < outputs.length; i++) {
    blocks[i + 1]=outputs[i].build();
  }
  Page page=new Page(blocks);
  return page;
}
