{
  requireNonNull(queryId,"queryId is null");
  requireNonNull(session,"session is null");
  requireNonNull(state,"state is null");
  requireNonNull(self,"self is null");
  requireNonNull(fieldNames,"fieldNames is null");
  requireNonNull(queryStats,"queryStats is null");
  requireNonNull(setSessionProperties,"setSessionProperties is null");
  requireNonNull(resetSessionProperties,"resetSessionProperties is null");
  requireNonNull(addedPreparedStatements,"addedPreparedStatemetns is null");
  requireNonNull(deallocatedPreparedStatements,"deallocatedPreparedStatements is null");
  requireNonNull(startedTransactionId,"startedTransactionId is null");
  requireNonNull(query,"query is null");
  requireNonNull(outputStage,"outputStage is null");
  requireNonNull(inputs,"inputs is null");
  this.queryId=queryId;
  this.session=session;
  this.state=state;
  this.memoryPool=requireNonNull(memoryPool,"memoryPool is null");
  this.scheduled=scheduled;
  this.self=self;
  this.fieldNames=ImmutableList.copyOf(fieldNames);
  this.query=query;
  this.queryStats=queryStats;
  this.setSessionProperties=ImmutableMap.copyOf(setSessionProperties);
  this.resetSessionProperties=ImmutableSet.copyOf(resetSessionProperties);
  this.addedPreparedStatements=ImmutableMap.copyOf(addedPreparedStatements);
  this.deallocatedPreparedStatements=ImmutableSet.copyOf(deallocatedPreparedStatements);
  this.startedTransactionId=startedTransactionId;
  this.clearTransactionId=clearTransactionId;
  this.updateType=updateType;
  this.outputStage=outputStage;
  this.failureInfo=failureInfo;
  this.errorType=errorCode == null ? null : errorCode.getType();
  this.errorCode=errorCode;
  this.inputs=ImmutableSet.copyOf(inputs);
}
