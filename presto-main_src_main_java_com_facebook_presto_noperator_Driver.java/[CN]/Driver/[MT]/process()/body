{
  operatorStats.start();
  try {
    for (int i=0; i < operators.size() - 1 && !operatorStats.isDone(); i++) {
      NewOperator current=operators.get(i);
      ListenableFuture<?> blocked=current.isBlocked();
      if (!blocked.isDone()) {
        return blocked;
      }
      NewOperator next=operators.get(i + 1);
      blocked=next.isBlocked();
      if (!blocked.isDone()) {
        return blocked;
      }
      if (current.isFinished()) {
        next.finish();
      }
 else       if (next.needsInput()) {
        Page page=current.getOutput();
        if (page != null) {
          if (i == 0) {
            operatorStats.addCompletedDataSize(page.getDataSize().toBytes());
            operatorStats.addCompletedPositions(page.getPositionCount());
          }
          next.addInput(page);
        }
      }
    }
    return NOT_BLOCKED;
  }
 catch (  Throwable t) {
    operatorStats.fail(t);
    throw t;
  }
}
