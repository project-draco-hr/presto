{
  ComparisonExpression.Type type=node.getType();
  Object left=process(node.getLeft(),context);
  if (left == null && !(type == ComparisonExpression.Type.IS_DISTINCT_FROM)) {
    return null;
  }
  Object right=process(node.getRight(),context);
  if (type == ComparisonExpression.Type.IS_DISTINCT_FROM) {
    if (left == null && right == null) {
      return false;
    }
 else     if (left == null || right == null) {
      return true;
    }
  }
 else   if (right == null) {
    return null;
  }
  if (hasUnresolvedValue(left,right)) {
    return new ComparisonExpression(type,toExpression(left,expressionTypes.get(node.getLeft())),toExpression(right,expressionTypes.get(node.getRight())));
  }
  if (type == ComparisonExpression.Type.IS_DISTINCT_FROM) {
    type=ComparisonExpression.Type.NOT_EQUAL;
  }
  return invokeOperator(OperatorType.valueOf(type.name()),types(node.getLeft(),node.getRight()),ImmutableList.of(left,right));
}
