{
  List<Type> argumentTypes=new ArrayList<>();
  List<Object> argumentValues=new ArrayList<>();
  for (  Expression expression : node.getArguments()) {
    Object value=process(expression,context);
    if (value == null) {
      return null;
    }
    Type type=expressionTypes.get(expression);
    argumentValues.add(value);
    argumentTypes.add(type);
  }
  FunctionInfo function=metadata.resolveFunction(node.getName(),argumentTypes,false);
  if (optimize && (!function.isDeterministic() || hasUnresolvedValue(argumentValues))) {
    return new FunctionCall(node.getName(),node.getWindow().orNull(),node.isDistinct(),toExpressions(argumentValues,argumentTypes));
  }
  return invoke(session,function.getScalarFunction(),argumentValues);
}
