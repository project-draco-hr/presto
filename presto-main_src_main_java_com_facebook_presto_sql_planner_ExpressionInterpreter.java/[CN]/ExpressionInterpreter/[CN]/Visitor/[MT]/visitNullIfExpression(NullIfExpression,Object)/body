{
  Object first=process(node.getFirst(),context);
  if (first == null) {
    return null;
  }
  Object second=process(node.getSecond(),context);
  if (second == null) {
    return first;
  }
  Type firstType=expressionTypes.get(node.getFirst());
  Type secondType=expressionTypes.get(node.getSecond());
  if (hasUnresolvedValue(first,second)) {
    return new NullIfExpression(toExpression(first,firstType),toExpression(second,secondType));
  }
  Type commonType=FunctionRegistry.getCommonSuperType(firstType,secondType).get();
  FunctionInfo firstCast=metadata.getExactOperator(OperatorType.CAST,commonType,ImmutableList.of(firstType));
  FunctionInfo secondCast=metadata.getExactOperator(OperatorType.CAST,commonType,ImmutableList.of(secondType));
  boolean equal=(Boolean)invokeOperator(OperatorType.EQUAL,ImmutableList.of(commonType,commonType),ImmutableList.of(invoke(session,firstCast.getMethodHandle(),ImmutableList.of(first)),invoke(session,secondCast.getMethodHandle(),ImmutableList.of(second))));
  if (equal) {
    return null;
  }
 else {
    return first;
  }
}
