{
  Object operand=processWithExceptionHandling(node.getOperand(),context);
  Type operandType=type(node.getOperand());
  Expression defaultClause=node.getDefaultValue().orElse(null);
  Object defaultResult=processWithExceptionHandling(defaultClause,context);
  if (operand == null) {
    return defaultResult;
  }
  List<WhenClause> whenClauses=new ArrayList<>();
  for (  WhenClause whenClause : node.getWhenClauses()) {
    Object whenOperand=processWithExceptionHandling(whenClause.getOperand(),context);
    Object result=processWithExceptionHandling(whenClause.getResult(),context);
    if (whenOperand instanceof Expression || operand instanceof Expression) {
      whenClauses.add(new WhenClause(toExpression(whenOperand,type(whenClause.getOperand())),toExpression(result,type(whenClause.getResult()))));
    }
 else     if (whenOperand != null && isEqual(operand,operandType,whenOperand,type(whenClause.getOperand()))) {
      defaultResult=result;
      break;
    }
  }
  if (whenClauses.isEmpty()) {
    return defaultResult;
  }
  Expression defaultExpression=(defaultResult == null) ? null : toExpression(defaultResult,type(node));
  return new SimpleCaseExpression(toExpression(operand,type(node.getOperand())),whenClauses,Optional.ofNullable(defaultExpression));
}
