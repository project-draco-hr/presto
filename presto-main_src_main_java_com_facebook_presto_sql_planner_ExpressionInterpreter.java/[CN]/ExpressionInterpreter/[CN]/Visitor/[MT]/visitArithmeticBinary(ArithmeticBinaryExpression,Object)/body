{
  Object left=process(node.getLeft(),context);
  if (left == null) {
    return null;
  }
  Object right=process(node.getRight(),context);
  if (right == null) {
    return null;
  }
  if (hasUnresolvedValue(left,right)) {
    return new ArithmeticBinaryExpression(node.getType(),toExpression(left,expressionTypes.get(node.getLeft())),toExpression(right,expressionTypes.get(node.getRight())));
  }
  return invokeOperator(OperatorType.valueOf(node.getType().name()),types(node.getLeft(),node.getRight()),ImmutableList.of(left,right));
}
