{
  Object value=process(node.getValue(),context);
  if (!(value instanceof Slice)) {
    return node;
  }
  String valueString=((Slice)value).toString(UTF_8);
  Matcher matcher;
  if (node.getPattern() instanceof StringLiteral && (node.getEscape() instanceof StringLiteral || node.getEscape() == null)) {
    matcher=getConstantPattern(node).matcher(valueString);
  }
 else {
    Object pattern=process(node.getPattern(),context);
    if (!(pattern instanceof Slice)) {
      return node;
    }
    String patternString=((Slice)pattern).toString(UTF_8);
    char escapeChar;
    if (node.getEscape() != null) {
      Object escape=process(node.getEscape(),context);
      if (!(escape instanceof Slice)) {
        return node;
      }
      escapeChar=getEscapeChar((Slice)escape);
    }
 else {
      escapeChar='\\';
    }
    matcher=likeToPattern(patternString,escapeChar).matcher(valueString);
  }
  return matcher.matches();
}
