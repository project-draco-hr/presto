{
  List<Page> pages=createPages();
  ExecutorService executor=Executors.newCachedThreadPool();
  try {
    StaticQueryDriverProvider provider=new StaticQueryDriverProvider(executor,pages);
    QueryDriversOperator operator=new QueryDriversOperator(1,provider,provider,provider);
    int count=0;
    QueryDriversIterator iterator=operator.iterator();
    while (count < 20 && iterator.hasNext()) {
      Page page=iterator.next();
      BlockCursor cursor=page.getBlock(0).cursor();
      while (count < 20 && cursor.advanceNextPosition()) {
        count++;
      }
    }
    assertEquals(count,20);
    assertTrue(iterator.hasNext());
    IdentityHashMap<StaticQueryDriver,Integer> driverPagesAdded=new IdentityHashMap<>();
    for (    StaticQueryDriver driver : provider.getCreatedDrivers()) {
      assertFalse(driver.isDone());
      driverPagesAdded.put(driver,driver.getPagesAdded());
    }
    iterator.close();
    for (    StaticQueryDriver driver : provider.getCreatedDrivers()) {
      assertTrue(driver.isDone());
      assertEquals(driver.getPagesAdded(),(int)driverPagesAdded.get(driver));
    }
    while (iterator.hasNext()) {
      iterator.next();
    }
    assertFalse(iterator.hasNext());
  }
  finally {
    executor.shutdownNow();
  }
}
