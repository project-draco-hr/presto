{
  CyclicBarrier beforeRequest=new CyclicBarrier(2);
  CyclicBarrier afterRequest=new CyclicBarrier(2);
  StaticRequestProcessor processor=new StaticRequestProcessor(beforeRequest,afterRequest);
  processor.setResponse(new TestingResponse(HttpStatus.NO_CONTENT,ImmutableListMultimap.<String,String>of(),new byte[0]));
  CyclicBarrier requestComplete=new CyclicBarrier(2);
  TestingClientCallback callback=new TestingClientCallback(requestComplete);
  URI location=URI.create("http://localhost:8080");
  HttpPageBufferClient client=new HttpPageBufferClient(new TestingHttpClient(processor,newCachedThreadPool(daemonThreadsNamed("test-%s"))),new DataSize(10,Unit.MEGABYTE),location,callback);
  assertStatus(client,location,"queued",0,0,0,"queued");
  client.scheduleRequest();
  beforeRequest.await(1,TimeUnit.SECONDS);
  assertStatus(client,location,"running",0,1,0,"PROCESSING_REQUEST");
  assertEquals(client.isRunning(),true);
  afterRequest.await(1,TimeUnit.SECONDS);
  requestComplete.await(1,TimeUnit.SECONDS);
  assertStatus(client,location,"queued",0,1,1,"queued");
  client.close();
  assertStatus(client,location,"closed",0,1,1,"queued");
}
