{
  Function<Request,Response> processor=new Function<Request,Response>(){
    @Override public Response apply(    Request input){
      throw new RuntimeException("Foo");
    }
  }
;
  CyclicBarrier requestComplete=new CyclicBarrier(2);
  TestingClientCallback callback=new TestingClientCallback(requestComplete);
  URI location=URI.create("http://localhost:8080");
  HttpPageBufferClient client=new HttpPageBufferClient(new TestingHttpClient(processor,executor),new DataSize(10,Unit.MEGABYTE),location,callback,createTestingBlockEncodingManager(),executor);
  assertStatus(client,location,"queued",0,0,0,0,"queued");
  client.scheduleRequest();
  requestComplete.await(1,TimeUnit.SECONDS);
  assertEquals(callback.getPages().size(),0);
  assertEquals(callback.getCompletedRequests(),1);
  assertEquals(callback.getFinishedBuffers(),0);
  assertEquals(callback.getFailedBuffers(),0);
  assertStatus(client,location,"queued",0,1,1,1,"queued");
}
