{
  Bootstrap app=new Bootstrap(new TestingNodeModule(),new InMemoryEventModule(),new TestingHttpServerModule(),new JsonModule(),new JaxrsModule(true),new Module(){
    @Override public void configure(    Binder binder){
      jaxrsBinder(binder).bind(QueryResource.class);
      jaxrsBinder(binder).bind(StageResource.class);
      jaxrsBinder(binder).bind(TaskResource.class);
      binder.bind(QueryManager.class).to(MockQueryManager.class).in(Scopes.SINGLETON);
      binder.bind(MockTaskManager.class).in(Scopes.SINGLETON);
      binder.bind(TaskManager.class).to(Key.get(MockTaskManager.class)).in(Scopes.SINGLETON);
      jaxrsBinder(binder).bind(PagesResponseWriter.class);
      binder.bind(InternalNodeManager.class).to(InMemoryNodeManager.class).in(Scopes.SINGLETON);
      binder.bind(NodeManager.class).to(Key.get(InternalNodeManager.class)).in(Scopes.SINGLETON);
      binder.bind(LocationFactory.class).to(HttpLocationFactory.class).in(Scopes.SINGLETON);
    }
  }
);
  Injector injector=app.strictConfig().doNotInitializeLogging().initialize();
  lifeCycleManager=injector.getInstance(LifeCycleManager.class);
  server=injector.getInstance(TestingHttpServer.class);
  client=new JettyHttpClient();
}
