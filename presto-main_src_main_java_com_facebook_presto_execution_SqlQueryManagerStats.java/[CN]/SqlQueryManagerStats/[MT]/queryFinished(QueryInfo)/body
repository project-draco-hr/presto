{
  completedQueries.update(1);
  long rawInputBytes=info.getQueryStats().getRawInputDataSize().toBytes();
  long executionWallMillis=info.getQueryStats().getEndTime().getMillis() - info.getQueryStats().getCreateTime().getMillis();
  executionTime.add(executionWallMillis,MILLISECONDS);
  if (executionWallMillis > 0) {
    wallInputBytesRate.add(rawInputBytes * 1000 / executionWallMillis);
  }
  long executionCpuMillis=info.getQueryStats().getTotalCpuTime().toMillis();
  if (executionCpuMillis > 0) {
    cpuInputByteRate.add(rawInputBytes * 1000 / executionCpuMillis);
  }
  if (info.getErrorCode() != null) {
switch (StandardErrorCode.toErrorType(info.getErrorCode().getCode())) {
case USER_ERROR:
      userErrorFailures.update(1);
    break;
case INTERNAL_ERROR:
  internalFailures.update(1);
break;
case INSUFFICIENT_RESOURCES:
insufficientResourcesFailures.update(1);
break;
case EXTERNAL:
externalFailures.update(1);
break;
}
if (info.getErrorCode().getCode() == ABANDONED_QUERY.toErrorCode().getCode()) {
abandonedQueries.update(1);
}
 else if (info.getErrorCode().getCode() == USER_CANCELED.toErrorCode().getCode()) {
canceledQueries.update(1);
}
failedQueries.update(1);
}
}
