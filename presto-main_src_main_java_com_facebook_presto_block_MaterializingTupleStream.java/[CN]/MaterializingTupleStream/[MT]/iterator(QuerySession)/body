{
  final Cursor cursor=delegate.cursor(session);
  return new AbstractYieldingIterator<TupleStream>(){
    private long position;
    @Override protected TupleStream computeNext(){
      BlockBuilder blockBuilder=new BlockBuilder(position,delegate.getTupleInfo(),blockSize,storageMultiplier);
      do {
        AdvanceResult result=cursor.advanceNextPosition();
switch (result) {
case SUCCESS:
          Cursors.appendCurrentTupleToBlockBuilder(cursor,blockBuilder);
        position++;
      break;
case MUST_YIELD:
    if (!blockBuilder.isEmpty()) {
      return blockBuilder.build();
    }
  return setMustYield();
case FINISHED:
if (!blockBuilder.isEmpty()) {
  return blockBuilder.build();
}
return endOfData();
default :
throw new AssertionError("unknown result: " + result);
}
}
 while (!blockBuilder.isFull());
return blockBuilder.build();
}
}
;
}
