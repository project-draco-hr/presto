{
  TupleStream tupleStream=new RepositioningTupleStream(new GroupByOperator(new GenericTupleStream<>(TupleInfo.SINGLE_VARBINARY,Blocks.createLongsBlock(4,0L,1L,1L),Blocks.createLongsBlock(10,2L,2L,2L),Blocks.createLongsBlock(50,-1L,-2L))),100);
  Cursor cursor=tupleStream.cursor(new QuerySession());
  cursor.advanceNextPosition();
  Assert.assertEquals(cursor.getLong(0),0L);
  Assert.assertEquals(cursor.getPosition(),100);
  cursor.advanceNextValue();
  Assert.assertEquals(cursor.getLong(0),1L);
  Assert.assertEquals(cursor.getPosition(),101);
  cursor.advanceNextPosition();
  Assert.assertEquals(cursor.getLong(0),1L);
  Assert.assertEquals(cursor.getPosition(),102);
  cursor.advanceNextValue();
  Assert.assertEquals(cursor.getLong(0),2L);
  Assert.assertEquals(cursor.getPosition(),103);
  cursor.advanceNextValue();
  Assert.assertEquals(cursor.getLong(0),-1L);
  Assert.assertEquals(cursor.getPosition(),106);
  cursor.advanceNextPosition();
  Assert.assertEquals(cursor.getLong(0),-2L);
  Assert.assertEquals(cursor.getPosition(),107);
  Assert.assertEquals(cursor.advanceNextPosition(),Cursor.AdvanceResult.FINISHED);
}
