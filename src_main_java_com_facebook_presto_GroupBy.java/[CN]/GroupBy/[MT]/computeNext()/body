{
  if (!advanceGroupByBlock()) {
    endOfData();
    return null;
  }
  Pair entry=currentGroupByBlock.next();
  Tuple groupByKey=entry.getValue();
  long startPosition=entry.getPosition();
  while (true) {
    while (currentGroupByBlock.hasNext() && currentGroupByBlock.peek().getValue().equals(groupByKey)) {
      entry=currentGroupByBlock.next();
    }
    if (currentGroupByBlock.hasNext()) {
      break;
    }
    if (!groupBySource.hasNext()) {
      break;
    }
    currentGroupByBlock=groupBySource.next().pairIterator();
  }
  long endPosition=entry.getPosition();
  Range<Long> range=Ranges.closed(startPosition,endPosition);
  RunLengthEncodedBlock group=new RunLengthEncodedBlock(groupByKey,range);
  return group;
}
