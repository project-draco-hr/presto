{
  if (this == that) {
    return 0;
  }
  while (length >= SIZE_OF_LONG) {
    long thisLong=unsafe.getLong(base,this.address + offset);
    thisLong=Long.reverseBytes(thisLong);
    long thatLong=unsafe.getLong(that.base,that.address + otherOffset);
    thatLong=Long.reverseBytes(thatLong);
    int v=UnsignedLongs.compare(thisLong,thatLong);
    if (v != 0) {
      return v;
    }
    offset+=SIZE_OF_LONG;
    otherOffset+=SIZE_OF_LONG;
    length-=SIZE_OF_LONG;
  }
  while (length > 0) {
    byte thisByte=unsafe.getByte(base,this.address + offset);
    byte thatByte=unsafe.getByte(that.base,that.address + otherOffset);
    int v=UnsignedBytes.compare(thisByte,thatByte);
    if (v != 0) {
      return v;
    }
    offset++;
    otherOffset++;
    length--;
  }
  return this.size - that.size;
}
