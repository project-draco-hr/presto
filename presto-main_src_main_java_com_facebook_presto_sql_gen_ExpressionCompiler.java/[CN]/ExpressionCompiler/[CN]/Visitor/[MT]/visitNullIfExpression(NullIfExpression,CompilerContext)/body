{
  TypedByteCodeNode first=process(node.getFirst(),context);
  TypedByteCodeNode second=process(node.getSecond(),context);
  if (first.type == void.class || second.type == void.class) {
    return first;
  }
  Class<?> type=getType(first,second);
  LabelNode notMatch=new LabelNode("notMatch");
  Block block=new Block(context).comment(node.toString()).append(coerceToType(context,first,type).node).dup(type).append(ifWasNullPopAndGoto(context,notMatch,void.class,type)).append(coerceToType(context,second,type).node).append(ifWasNullClearPopAndGoto(context,notMatch,void.class,type,type));
  Block conditionBlock=new Block(context).invokeStatic(Operations.class,"equal",boolean.class,type,type);
  Block trueBlock=new Block(context).loadConstant(true).storeVariable("wasNull").pop(type).loadJavaDefault(type);
  block.append(new IfStatement(context,conditionBlock,trueBlock,notMatch));
  return typedByteCodeNode(block,type);
}
