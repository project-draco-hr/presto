{
  List<TypedByteCodeNode> operands=new ArrayList<>();
  for (  Expression expression : node.getOperands()) {
    operands.add(process(expression,context));
  }
  Class<?> type=getType(operands);
  TypedByteCodeNode nullValue=coerceToType(context,process(new NullLiteral(),context),type);
  for (  TypedByteCodeNode operand : Lists.reverse(operands)) {
    Block condition=new Block(context).append(coerceToType(context,operand,type).node).loadVariable("wasNull");
    Block nullBlock=new Block(context).pop(type).loadConstant(false).storeVariable("wasNull").append(nullValue.node);
    nullValue=typedByteCodeNode(new IfStatement(context,condition,nullBlock,NOP),type);
  }
  return typedByteCodeNode(nullValue.node,type);
}
