{
  MethodDefinition filterMethod;
  if (sourceIsCursor) {
    filterMethod=classDefinition.declareMethod(new CompilerContext(bootstrapMethod),a(PUBLIC),"filter",type(boolean.class),arg("cursor",RecordCursor.class));
  }
 else {
    filterMethod=classDefinition.declareMethod(new CompilerContext(bootstrapMethod),a(PUBLIC),"filter",type(boolean.class),toBlockCursorParameters(inputTypes));
  }
  filterMethod.comment("Filter: %s",filter.toString());
  filterMethod.getCompilerContext().declareVariable(type(boolean.class),"wasNull");
  Block getSessionByteCode=new Block(filterMethod.getCompilerContext()).pushThis().getField(classDefinition.getType(),"session",type(Session.class));
  TypedByteCodeNode body=new ByteCodeExpressionVisitor(bootstrapFunctionBinder,inputTypes,getSessionByteCode,sourceIsCursor).process(filter,filterMethod.getCompilerContext());
  if (body.getType() == void.class) {
    filterMethod.getBody().push(false).retBoolean();
  }
 else {
    LabelNode end=new LabelNode("end");
    filterMethod.getBody().comment("boolean wasNull = false;").putVariable("wasNull",false).append(body.getNode()).getVariable("wasNull").ifFalseGoto(end).pop(boolean.class).push(false).visitLabel(end).retBoolean();
  }
}
