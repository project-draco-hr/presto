{
  this.operatorId=operatorId;
  this.sourceTypes=ImmutableList.copyOf(sourceTypes);
  this.outputChannels=ImmutableList.copyOf(checkNotNull(outputChannels,"outputChannels is null"));
  this.partitionChannels=ImmutableList.copyOf(checkNotNull(partitionChannels,"partitionChannels is null"));
  this.partitionTypes=ImmutableList.copyOf(checkNotNull(partitionTypes,"partitionTypes is null"));
  this.sortChannels=ImmutableList.copyOf(checkNotNull(sortChannels));
  this.sortOrder=ImmutableList.copyOf(checkNotNull(sortOrder));
  checkArgument(maxRowCountPerPartition > 0,"maxRowCountPerPartition must be > 0");
  this.maxRowCountPerPartition=maxRowCountPerPartition;
  checkArgument(expectedPositions > 0,"expectedPositions must be > 0");
  this.expectedPositions=expectedPositions;
  this.types=toTypes(sourceTypes,outputChannels);
  ImmutableList.Builder<Type> sortTypes=ImmutableList.builder();
  for (  int channel : sortChannels) {
    sortTypes.add(types.get(channel));
  }
  this.sortTypes=sortTypes.build();
}
