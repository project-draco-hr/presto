{
  this.operatorContext=checkNotNull(operatorContext,"operatorContext is null");
  this.outputChannels=Ints.toArray(checkNotNull(outputChannels,"outputChannels is null"));
  this.sortChannels=checkNotNull(sortChannels,"sortChannels is null");
  this.sortOrders=checkNotNull(sortOrders,"sortOrders is null");
  this.sortTypes=checkNotNull(sortTypes,"sortTypes is null");
  checkArgument(maxRowCountPerPartition > 0,"maxRowCountPerPartition must be > 0");
  this.maxRowCountPerPartition=maxRowCountPerPartition;
  this.generateRowNumber=generateRowNumber;
  checkArgument(expectedPositions > 0,"expectedPositions must be > 0");
  this.types=toTypes(sourceTypes,outputChannels,generateRowNumber);
  this.memoryManager=new MemoryManager(operatorContext);
  this.partitionRows=new HashMap<>();
  if (partitionChannels.isEmpty()) {
    this.groupByHash=Optional.empty();
  }
 else {
    this.groupByHash=Optional.of(createGroupByHash(partitionTypes,Ints.toArray(partitionChannels),hashChannel,expectedPositions));
  }
  this.flushingPartition=Optional.empty();
  this.pageBuilder=new PageBuilder(types);
}
