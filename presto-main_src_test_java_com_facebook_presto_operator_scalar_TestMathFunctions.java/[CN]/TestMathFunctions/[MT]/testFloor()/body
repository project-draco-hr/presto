{
  assertFunction("floor(TINYINT'123')",TINYINT,(byte)123);
  assertFunction("floor(TINYINT'-123')",TINYINT,(byte)-123);
  assertFunction("floor(CAST(NULL AS TINYINT))",TINYINT,null);
  assertFunction("floor(SMALLINT'123')",SMALLINT,(short)123);
  assertFunction("floor(SMALLINT'-123')",SMALLINT,(short)-123);
  assertFunction("floor(CAST(NULL AS SMALLINT))",SMALLINT,null);
  assertFunction("floor(123)",INTEGER,123);
  assertFunction("floor(-123)",INTEGER,-123);
  assertFunction("floor(CAST(NULL AS INTEGER))",INTEGER,null);
  assertFunction("floor(BIGINT '123')",BIGINT,123L);
  assertFunction("floor(BIGINT '-123')",BIGINT,-123L);
  assertFunction("floor(12300000000)",BIGINT,12300000000L);
  assertFunction("floor(-12300000000)",BIGINT,-12300000000L);
  assertFunction("floor(CAST(NULL as BIGINT))",BIGINT,null);
  assertFunction("floor(123.0)",DOUBLE,123.0);
  assertFunction("floor(-123.0)",DOUBLE,-123.0);
  assertFunction("floor(123.45)",DOUBLE,123.0);
  assertFunction("floor(-123.45)",DOUBLE,-124.0);
  assertFunction("floor(CAST(NULL as DOUBLE))",DOUBLE,null);
}
