{
  for (  long left : intLefts) {
    for (    long right : intRights) {
      assertFunction("power(" + left + ", "+ right+ ")",DOUBLE,Math.pow(left,right));
    }
  }
  for (  int left : intLefts) {
    for (    int right : intRights) {
      assertFunction("power( BIGINT '" + left + "' , BIGINT '"+ right+ "')",DOUBLE,Math.pow(left,right));
    }
  }
  for (  long left : intLefts) {
    for (    long right : intRights) {
      assertFunction("power(" + left * 10000000000L + ", " + right + ")",DOUBLE,Math.pow(left * 10000000000L,right));
    }
  }
  for (  long left : intLefts) {
    for (    double right : doubleRights) {
      assertFunction("power(" + left + ", "+ right+ ")",DOUBLE,Math.pow(left,right));
      assertFunction("power(" + left + ", REAL '"+ (float)right+ "')",DOUBLE,Math.pow(left,(float)right));
    }
  }
  for (  double left : doubleLefts) {
    for (    long right : intRights) {
      assertFunction("power(" + left + ", "+ right+ ")",DOUBLE,Math.pow(left,right));
      assertFunction("power(REAL '" + (float)left + "', "+ right+ ")",DOUBLE,Math.pow((float)left,right));
    }
  }
  for (  double left : doubleLefts) {
    for (    double right : doubleRights) {
      assertFunction("power(" + left + ", "+ right+ ")",DOUBLE,Math.pow(left,right));
      assertFunction("power(REAL '" + left + "', REAL '"+ right+ "')",DOUBLE,Math.pow((float)left,(float)right));
    }
  }
  assertFunction("power(NULL, NULL)",DOUBLE,null);
  assertFunction("power(5.0, NULL)",DOUBLE,null);
  assertFunction("power(NULL, 5.0)",DOUBLE,null);
  assertFunction("pow(5.0, 2.0)",DOUBLE,25.0);
}
