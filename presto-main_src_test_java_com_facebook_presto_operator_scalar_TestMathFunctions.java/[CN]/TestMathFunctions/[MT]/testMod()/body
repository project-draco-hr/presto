{
  for (  int left : intLefts) {
    for (    int right : intRights) {
      assertFunction("mod(" + left + ", "+ right+ ")",INTEGER,(left % right));
    }
  }
  for (  int left : intLefts) {
    for (    int right : intRights) {
      assertFunction("mod( BIGINT '" + left + "' , BIGINT '"+ right+ "')",BIGINT,(long)(left % right));
    }
  }
  for (  long left : intLefts) {
    for (    long right : intRights) {
      assertFunction("mod(" + left * 10000000000L + ", " + right * 10000000000L + ")",BIGINT,(left * 10000000000L) % (right * 10000000000L));
    }
  }
  for (  int left : intLefts) {
    for (    double right : doubleRights) {
      assertFunction("mod(" + left + ", "+ right+ ")",DOUBLE,left % right);
    }
  }
  for (  double left : doubleLefts) {
    for (    long right : intRights) {
      assertFunction("mod(" + left + ", "+ right+ ")",DOUBLE,left % right);
    }
  }
  for (  double left : doubleLefts) {
    for (    double right : doubleRights) {
      assertFunction("mod(" + left + ", "+ right+ ")",DOUBLE,left % right);
    }
  }
  assertFunction("mod(5.0, NULL)",DOUBLE,null);
  assertFunction("mod(NULL, 5.0)",DOUBLE,null);
}
