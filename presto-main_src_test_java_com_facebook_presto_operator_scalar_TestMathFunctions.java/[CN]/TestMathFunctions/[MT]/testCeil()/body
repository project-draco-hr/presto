{
  assertFunction("ceil(TINYINT'123')",TINYINT,(byte)123);
  assertFunction("ceil(TINYINT'-123')",TINYINT,(byte)-123);
  assertFunction("ceil(CAST(NULL AS TINYINT))",TINYINT,null);
  assertFunction("ceil(SMALLINT'123')",SMALLINT,(short)123);
  assertFunction("ceil(SMALLINT'-123')",SMALLINT,(short)-123);
  assertFunction("ceil(CAST(NULL AS SMALLINT))",SMALLINT,null);
  assertFunction("ceil(123)",INTEGER,123);
  assertFunction("ceil(-123)",INTEGER,-123);
  assertFunction("ceil(CAST(NULL AS INTEGER))",INTEGER,null);
  assertFunction("ceil(BIGINT '123')",BIGINT,123L);
  assertFunction("ceil(BIGINT '-123')",BIGINT,-123L);
  assertFunction("ceil(12300000000)",BIGINT,12300000000L);
  assertFunction("ceil(-12300000000)",BIGINT,-12300000000L);
  assertFunction("ceil(CAST(NULL as BIGINT))",BIGINT,null);
  assertFunction("ceil(123.0)",DOUBLE,123.0);
  assertFunction("ceil(-123.0)",DOUBLE,-123.0);
  assertFunction("ceil(123.45)",DOUBLE,124.0);
  assertFunction("ceil(-123.45)",DOUBLE,-123.0);
  assertFunction("ceil(CAST(NULL as DOUBLE))",DOUBLE,null);
  assertFunction("ceil(REAL '123.0')",REAL,123.0f);
  assertFunction("ceil(REAL '-123.0')",REAL,-123.0f);
  assertFunction("ceil(REAL '123.45')",REAL,124.0f);
  assertFunction("ceil(REAL '-123.45')",REAL,-123.0f);
  assertFunction("ceiling(12300000000)",BIGINT,12300000000L);
  assertFunction("ceiling(-12300000000)",BIGINT,-12300000000L);
  assertFunction("ceiling(CAST(NULL AS BIGINT))",BIGINT,null);
  assertFunction("ceiling(123.0)",DOUBLE,123.0);
  assertFunction("ceiling(-123.0)",DOUBLE,-123.0);
  assertFunction("ceiling(123.45)",DOUBLE,124.0);
  assertFunction("ceiling(-123.45)",DOUBLE,-123.0);
  assertFunction("ceiling(REAL '123.0')",REAL,123.0f);
  assertFunction("ceiling(REAL '-123.0')",REAL,-123.0f);
  assertFunction("ceiling(REAL '123.45')",REAL,124.0f);
  assertFunction("ceiling(REAL '-123.45')",REAL,-123.0f);
  assertFunction("ceiling(DECIMAL '123')",createDecimalType(3),SqlDecimal.of("123"));
  assertFunction("ceiling(DECIMAL '-123')",createDecimalType(3),SqlDecimal.of("-123"));
  assertFunction("ceiling(DECIMAL '123.45')",createDecimalType(4),SqlDecimal.of("124"));
  assertFunction("ceiling(DECIMAL '-123.45')",createDecimalType(4),SqlDecimal.of("-123"));
  assertFunction("ceiling(DECIMAL '999.9')",createDecimalType(4),SqlDecimal.of("1000"));
  assertFunction("ceiling(DECIMAL '123456789012345678')",createDecimalType(18),SqlDecimal.of("123456789012345678"));
  assertFunction("ceiling(DECIMAL '-123456789012345678')",createDecimalType(18),SqlDecimal.of("-123456789012345678"));
  assertFunction("ceiling(DECIMAL '123456789012345678.00')",createDecimalType(19),SqlDecimal.of("123456789012345678"));
  assertFunction("ceiling(DECIMAL '123456789012345678.99')",createDecimalType(19),SqlDecimal.of("123456789012345679"));
  assertFunction("ceiling(DECIMAL '-123456789012345678.99')",createDecimalType(19),SqlDecimal.of("-123456789012345678"));
  assertFunction("ceiling(DECIMAL '999999999999999999.9')",createDecimalType(19),SqlDecimal.of("1000000000000000000"));
  assertFunction("ceiling(DECIMAL '1234567890123456.78')",createDecimalType(17),SqlDecimal.of("1234567890123457"));
  assertFunction("ceiling(DECIMAL '-1234567890123456.78')",createDecimalType(17),SqlDecimal.of("-1234567890123456"));
  assertFunction("ceiling(CAST(NULL AS DOUBLE))",DOUBLE,null);
  assertFunction("ceiling(CAST(NULL AS REAL))",REAL,null);
  assertFunction("ceiling(CAST(NULL AS DECIMAL(1,0)))",createDecimalType(1),null);
  assertFunction("ceiling(CAST(NULL AS DECIMAL(25,5)))",createDecimalType(21),null);
}
