{
  int leftPositionCount=leftArray.getPositionCount();
  int rightPositionCount=rightArray.getPositionCount();
  if (leftPositionCount == 0) {
    return leftArray;
  }
  if (rightPositionCount == 0) {
    return rightArray;
  }
  if (leftPositions.length < leftPositionCount) {
    leftPositions=new int[leftPositionCount];
  }
  if (rightPositions.length < rightPositionCount) {
    rightPositions=new int[rightPositionCount];
  }
  if (pageBuilder.isFull()) {
    pageBuilder.reset();
  }
  for (int i=0; i < leftPositionCount; i++) {
    leftPositions[i]=i;
  }
  for (int i=0; i < rightPositionCount; i++) {
    rightPositions[i]=i;
  }
  IntArrays.quickSort(leftPositions,0,leftPositionCount,IntBlockCompare(type,leftArray));
  IntArrays.quickSort(rightPositions,0,rightPositionCount,IntBlockCompare(type,rightArray));
  BlockBuilder resultBlockBuilder=pageBuilder.getBlockBuilder(0);
  int leftCurrentPosition=0;
  int rightCurrentPosition=0;
  int leftBasePosition;
  int rightBasePosition;
  int totalCount=0;
  while (leftCurrentPosition < leftPositionCount && rightCurrentPosition < rightPositionCount) {
    leftBasePosition=leftCurrentPosition;
    rightBasePosition=rightCurrentPosition;
    int compareValue=type.compareTo(leftArray,leftPositions[leftCurrentPosition],rightArray,rightPositions[rightCurrentPosition]);
    if (compareValue > 0) {
      rightCurrentPosition++;
    }
 else     if (compareValue < 0) {
      leftCurrentPosition++;
    }
 else {
      type.appendTo(leftArray,leftPositions[leftCurrentPosition],resultBlockBuilder);
      leftCurrentPosition++;
      rightCurrentPosition++;
      totalCount++;
      while (leftCurrentPosition < leftPositionCount && type.equalTo(leftArray,leftPositions[leftBasePosition],leftArray,leftPositions[leftCurrentPosition])) {
        leftCurrentPosition++;
      }
      while (rightCurrentPosition < rightPositionCount && type.equalTo(rightArray,rightPositions[rightBasePosition],rightArray,rightPositions[rightCurrentPosition])) {
        rightCurrentPosition++;
      }
    }
  }
  pageBuilder.declarePositions(totalCount);
  return resultBlockBuilder.getRegion(resultBlockBuilder.getPositionCount() - totalCount,totalCount);
}
