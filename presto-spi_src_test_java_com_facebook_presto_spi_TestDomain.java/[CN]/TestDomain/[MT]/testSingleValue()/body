{
  Domain domain=Domain.singleValue(0L);
  Assert.assertFalse(domain.isNone());
  Assert.assertFalse(domain.isAll());
  Assert.assertTrue(domain.isSingleValue());
  Assert.assertFalse(domain.isNullAllowed());
  Assert.assertEquals(domain.getRanges(),SortedRangeSet.of(Range.equal(0L)));
  Assert.assertEquals(domain.getType(),Long.class);
  Assert.assertFalse(domain.includesValue(Long.MIN_VALUE));
  Assert.assertTrue(domain.includesValue(0L));
  Assert.assertFalse(domain.includesValue(Long.MAX_VALUE));
  Assert.assertEquals(domain.complement(),Domain.create(SortedRangeSet.of(Range.lessThan(0L),Range.greaterThan(0L)),true));
  Assert.assertEquals(domain.getSingleValue(),0L);
  try {
    Domain.create(SortedRangeSet.of(Range.range(1,true,2,true)),false).getSingleValue();
    Assert.fail();
  }
 catch (  IllegalStateException e) {
  }
}
