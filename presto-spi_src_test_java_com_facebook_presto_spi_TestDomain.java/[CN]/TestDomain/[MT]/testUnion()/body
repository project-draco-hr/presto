{
  assertUnion(Domain.all(Long.class),Domain.all(Long.class),Domain.all(Long.class));
  assertUnion(Domain.none(Long.class),Domain.none(Long.class),Domain.none(Long.class));
  assertUnion(Domain.all(Long.class),Domain.none(Long.class),Domain.all(Long.class));
  assertUnion(Domain.notNull(Long.class),Domain.onlyNull(Long.class),Domain.all(Long.class));
  assertUnion(Domain.singleValue(0L),Domain.all(Long.class),Domain.all(Long.class));
  assertUnion(Domain.singleValue(0L),Domain.notNull(Long.class),Domain.notNull(Long.class));
  assertUnion(Domain.singleValue(0L),Domain.onlyNull(Long.class),Domain.create(SortedRangeSet.of(Range.equal(0L)),true));
  assertUnion(Domain.create(SortedRangeSet.of(Range.equal(1L)),true),Domain.create(SortedRangeSet.of(Range.equal(2L)),true),Domain.create(SortedRangeSet.of(Range.equal(1L),Range.equal(2L)),true));
  assertUnion(Domain.create(SortedRangeSet.of(Range.equal(1L)),true),Domain.create(SortedRangeSet.of(Range.equal(1L),Range.equal(2L)),false),Domain.create(SortedRangeSet.of(Range.equal(1L),Range.equal(2L)),true));
}
