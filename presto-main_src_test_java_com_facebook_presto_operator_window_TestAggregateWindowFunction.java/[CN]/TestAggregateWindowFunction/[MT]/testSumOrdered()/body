{
  MaterializedResult expected=resultBuilder(TEST_SESSION,BIGINT,VARCHAR,BIGINT).row(3,"F",3).row(5,"F",8).row(6,"F",14).row(33,"F",47).row(1,"O",1).row(2,"O",3).row(4,"O",7).row(7,"O",14).row(32,"O",46).row(34,"O",80).build();
  MaterializedResult expectedNulls=resultBuilder(TEST_SESSION,BIGINT,VARCHAR,BIGINT).row(3,"F",3).row(5,"F",8).row(null,"F",8).row(null,"F",8).row(34,"O",34).row(null,"O",34).row(1,null,1).row(7,null,8).row(null,null,8).row(null,null,8).build();
  @Language("SQL") String sql="sum(orderkey) OVER (PARTITION BY orderstatus ORDER BY orderkey)";
  assertWindowQuery(sql,expected);
  assertWindowQueryWithNulls(sql,expectedNulls);
  sql="sum(orderkey) OVER (PARTITION BY orderstatus ORDER BY orderkey " + "RANGE UNBOUNDED PRECEDING)";
  assertWindowQuery(sql,expected);
  assertWindowQueryWithNulls(sql,expectedNulls);
  sql="sum(orderkey) OVER (PARTITION BY orderstatus ORDER BY orderkey " + "RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)";
  assertWindowQuery(sql,expected);
  assertWindowQueryWithNulls(sql,expectedNulls);
  sql="sum(orderkey) OVER (PARTITION BY orderstatus ORDER BY orderkey " + "ROWS UNBOUNDED PRECEDING)";
  assertWindowQuery(sql,expected);
  assertWindowQueryWithNulls(sql,expectedNulls);
  sql="sum(orderkey) OVER (PARTITION BY orderstatus ORDER BY orderkey " + "ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)";
  assertWindowQuery(sql,expected);
  assertWindowQueryWithNulls(sql,expectedNulls);
}
