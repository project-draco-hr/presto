{
  MaterializedResult expected=resultBuilder(TEST_SESSION,INTEGER,VARCHAR,BIGINT).row(3,"F",3L).row(5,"F",8L).row(6,"F",14L).row(33,"F",47L).row(1,"O",1L).row(2,"O",3L).row(4,"O",7L).row(7,"O",14L).row(32,"O",46L).row(34,"O",80L).build();
  MaterializedResult expectedNulls=resultBuilder(TEST_SESSION,BIGINT,VARCHAR,BIGINT).row(3L,"F",3L).row(5L,"F",8L).row(null,"F",8L).row(null,"F",8L).row(34L,"O",34L).row(null,"O",34L).row(1L,null,1L).row(7L,null,8L).row(null,null,8L).row(null,null,8L).build();
  @Language("SQL") String sql="sum(orderkey) OVER (PARTITION BY orderstatus ORDER BY orderkey)";
  assertWindowQuery(sql,expected);
  assertWindowQueryWithNulls(sql,expectedNulls);
  sql="sum(orderkey) OVER (PARTITION BY orderstatus ORDER BY orderkey " + "RANGE UNBOUNDED PRECEDING)";
  assertWindowQuery(sql,expected);
  assertWindowQueryWithNulls(sql,expectedNulls);
  sql="sum(orderkey) OVER (PARTITION BY orderstatus ORDER BY orderkey " + "RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)";
  assertWindowQuery(sql,expected);
  assertWindowQueryWithNulls(sql,expectedNulls);
  sql="sum(orderkey) OVER (PARTITION BY orderstatus ORDER BY orderkey " + "ROWS UNBOUNDED PRECEDING)";
  assertWindowQuery(sql,expected);
  assertWindowQueryWithNulls(sql,expectedNulls);
  sql="sum(orderkey) OVER (PARTITION BY orderstatus ORDER BY orderkey " + "ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)";
  assertWindowQuery(sql,expected);
  assertWindowQueryWithNulls(sql,expectedNulls);
}
