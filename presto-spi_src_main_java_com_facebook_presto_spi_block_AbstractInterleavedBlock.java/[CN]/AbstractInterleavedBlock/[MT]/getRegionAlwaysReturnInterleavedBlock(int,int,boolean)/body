{
  position=computePosition(position);
  Block[] resultBlocks=new Block[Math.min(columns,length)];
  for (int newBlockIndex=0; newBlockIndex < resultBlocks.length; newBlockIndex++) {
    int positionInBlock=(position + newBlockIndex) / columns;
    int subBlockLength=(length + columns - 1 - newBlockIndex) / columns;
    if (compact) {
      resultBlocks[newBlockIndex]=getBlock((newBlockIndex + position) % columns).copyRegion(positionInBlock,subBlockLength);
    }
 else {
      resultBlocks[newBlockIndex]=getBlock((newBlockIndex + position) % columns).getRegion(positionInBlock,subBlockLength);
    }
  }
  return new InterleavedBlock(resultBlocks);
}
