{
  RowType innerRowType=new RowType(ImmutableList.of(INTEGER,DOUBLE),Optional.of(ImmutableList.of("f1","f2")));
  MapType mapType=new MapType(DOUBLE,innerRowType);
  InternalAggregationFunction aggFunc=metadata.getFunctionRegistry().getAggregateFunctionImplementation(new Signature(NAME,AGGREGATE,mapType.getTypeSignature().toString(),StandardTypes.DOUBLE,innerRowType.getTypeSignature().toString()));
  BlockBuilder builder=innerRowType.createBlockBuilder(new BlockBuilderStatus(),3);
  innerRowType.writeObject(builder,testRowIntegerInteger(1L,1.0));
  innerRowType.writeObject(builder,testRowIntegerInteger(2L,2.0));
  innerRowType.writeObject(builder,testRowIntegerInteger(3L,3.0));
  assertAggregation(aggFunc,1.0,ImmutableMap.of(1.0,ImmutableList.of(1,1.0),2.0,ImmutableList.of(2,2.0),3.0,ImmutableList.of(3,3.0)),createDoublesBlock(1.0,2.0,3.0),builder.build());
}
