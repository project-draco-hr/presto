{
switch (node.getSampleType()) {
case BERNOULLI:
    return node.getSource().accept(this,materializedViewPartitionPredicate);
case SYSTEM:
{
    final double ratio=node.getSampleRatio();
    NodeSplits nodeSplits=node.getSource().accept(this,materializedViewPartitionPredicate);
    DataSource dataSource=nodeSplits.dataSource.get();
    Iterable<Split> sampleIterable=Iterables.filter(dataSource.getSplits(),new Predicate<Split>(){
      public boolean apply(      @Nullable Split input){
        return ThreadLocalRandom.current().nextDouble() < ratio;
      }
    }
);
    DataSource sampledDataSource=new DataSource(dataSource.getDataSourceName(),sampleIterable);
    return new NodeSplits(node.getId(),sampledDataSource);
  }
default :
throw new UnsupportedOperationException("Sampling is not supported for type " + node.getSampleType());
}
}
