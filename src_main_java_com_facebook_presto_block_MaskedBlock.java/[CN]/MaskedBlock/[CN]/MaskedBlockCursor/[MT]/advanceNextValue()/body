{
  if (isFinished()) {
    return FINISHED;
  }
  if (!isValid) {
    isValid=true;
    AdvanceResult result=validPositions.advanceNextPosition();
    if (result == MUST_YIELD) {
      valueCursor.advanceToPosition(validPositions.getPosition());
      return MUST_YIELD;
    }
    if (result == FINISHED) {
      valueCursor.advanceToPosition(Long.MAX_VALUE);
      return FINISHED;
    }
  }
 else {
    long currentValueEndPosition=valueCursor.getCurrentValueEndPosition();
    do {
      AdvanceResult result=validPositions.advanceNextPosition();
      if (result == MUST_YIELD) {
        valueCursor.advanceToPosition(validPositions.getPosition());
        return MUST_YIELD;
      }
      if (result == FINISHED) {
        valueCursor.advanceToPosition(Long.MAX_VALUE);
        return FINISHED;
      }
    }
 while (validPositions.getPosition() <= currentValueEndPosition);
  }
  AdvanceResult result=valueCursor.advanceToPosition(validPositions.getPosition());
  Preconditions.checkState(result == SUCCESS);
  return result;
}
