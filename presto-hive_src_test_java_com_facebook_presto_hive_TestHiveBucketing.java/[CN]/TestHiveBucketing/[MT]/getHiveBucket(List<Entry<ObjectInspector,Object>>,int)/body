{
  GenericUDFHash udf=new GenericUDFHash();
  ObjectInspector[] objectInspectors=new ObjectInspector[columnBindings.size()];
  GenericUDF.DeferredObject[] deferredObjects=new GenericUDF.DeferredObject[columnBindings.size()];
  int i=0;
  for (  Entry<ObjectInspector,Object> entry : columnBindings) {
    objectInspectors[i]=entry.getKey();
    deferredObjects[i]=new GenericUDF.DeferredJavaObject(entry.getValue());
    i++;
  }
  ObjectInspector udfInspector=udf.initialize(objectInspectors);
  IntObjectInspector inspector=checkType(udfInspector,IntObjectInspector.class,"udfInspector");
  Object result=udf.evaluate(deferredObjects);
  HiveKey hiveKey=new HiveKey();
  hiveKey.setHashCode(inspector.get(result));
  return new DefaultHivePartitioner<>().getBucket(hiveKey,null,bucketCount);
}
