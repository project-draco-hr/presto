{
  embeddedKafka=EmbeddedKafka.createEmbeddedKafka();
  embeddedKafka.start();
  JsonCodec<KafkaTopicDescription> topicDescriptionJsonCodec=new CodecSupplier<>(KafkaTopicDescription.class,queryRunner().getCoordinator().getMetadata()).get();
  ImmutableMap.Builder<SchemaTableName,KafkaTopicDescription> topicDescriptionBuilder=ImmutableMap.builder();
  log.info("Loading data...");
  long startTime=System.nanoTime();
  for (  TpchTable<?> table : TpchTable.getTables()) {
    String tableName=table.getTableName();
    SchemaTableName tpchTable=new SchemaTableName(TPCH_NAME,tableName);
    log.info("Loading table %s...",tableName);
    embeddedKafka.createTopics(tpchTable.toString());
    topicDescriptionBuilder.put(loadTpchTopicDescription(topicDescriptionJsonCodec,tpchTable.toString(),tpchTable));
    loadTpchTopic(embeddedKafka,queryRunner().getClient(),tpchTable.toString(),new QualifiedTableName(TPCH_NAME,TpchMetadata.TINY_SCHEMA_NAME,tableName));
  }
  TestUtils.installKafkaPlugin(embeddedKafka,queryRunner,topicDescriptionBuilder.build());
  log.info("Loading complete in %s",nanosSince(startTime).toString(SECONDS));
}
