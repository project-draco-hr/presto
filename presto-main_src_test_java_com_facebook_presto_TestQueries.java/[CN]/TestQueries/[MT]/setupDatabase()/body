{
  handle=DBI.open("jdbc:h2:mem:test" + System.nanoTime());
  ordersRecords=readRecords("tpch/orders.dat.gz");
  handle.execute("CREATE TABLE orders (\n" + "  orderkey BIGINT PRIMARY KEY,\n" + "  custkey BIGINT NOT NULL,\n"+ "  orderstatus CHAR(1) NOT NULL,\n"+ "  totalprice DOUBLE NOT NULL,\n"+ "  orderdate CHAR(10) NOT NULL,\n"+ "  orderpriority CHAR(15) NOT NULL,\n"+ "  clerk CHAR(15) NOT NULL,\n"+ "  shippriority BIGINT NOT NULL,\n"+ "  comment VARCHAR(79) NOT NULL\n"+ ")");
  insertRows(TpchSchema.createOrders(),handle,ordersRecords);
  lineItemRecords=readRecords("tpch/lineitem.dat.gz");
  handle.execute("CREATE TABLE lineitem (\n" + "  orderkey BIGINT,\n" + "  partkey BIGINT NOT NULL,\n"+ "  suppkey BIGINT NOT NULL,\n"+ "  linenumber BIGINT,\n"+ "  quantity BIGINT NOT NULL,\n"+ "  extendedprice DOUBLE NOT NULL,\n"+ "  discount DOUBLE NOT NULL,\n"+ "  tax DOUBLE NOT NULL,\n"+ "  returnflag CHAR(1) NOT NULL,\n"+ "  linestatus CHAR(1) NOT NULL,\n"+ "  shipdate CHAR(10) NOT NULL,\n"+ "  commitdate CHAR(10) NOT NULL,\n"+ "  receiptdate CHAR(10) NOT NULL,\n"+ "  shipinstruct VARCHAR(25) NOT NULL,\n"+ "  shipmode VARCHAR(10) NOT NULL,\n"+ "  comment VARCHAR(44) NOT NULL,\n"+ "  PRIMARY KEY (orderkey, linenumber)"+ ")");
  insertRows(TpchSchema.createLineItem(),handle,lineItemRecords);
  metadata=TpchSchema.createMetadata();
  TestTpchBlocksProvider testTpchBlocksProvider=new TestTpchBlocksProvider(ImmutableMap.of("orders",ordersRecords,"lineitem",lineItemRecords));
  dataProvider=new TpchDataStreamProvider(testTpchBlocksProvider);
}
