{
  List<Tuple> expected=computeExpected("SELECT COUNT(*) FROM lineitem WHERE tax < discount AND tax > 0.01 AND discount < 0.05",FIXED_INT_64);
  Operator lineItems=scanTable(lineItemRecords,DISCOUNT,TAX);
  Operator filter=new FilterAndProjectOperator(lineItems,new FilterFunction(){
    @Override public boolean filter(    BlockCursor[] cursors){
      double discount=cursors[0].getDouble(0);
      double tax=cursors[1].getDouble(0);
      return tax < discount && tax > 0.01 && discount < 0.05;
    }
  }
,singleColumn(DOUBLE,0,0));
  Operator aggregation=new AggregationOperator(filter,ImmutableList.of(CountAggregation.PROVIDER),ImmutableList.of(singleColumn(FIXED_INT_64,0,0)));
  assertEqualsIgnoreOrder(tuples(aggregation),expected);
}
