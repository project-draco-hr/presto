{
  Request request=preparePost().setUri(uriFor("/v1/statement")).setBodyGenerator(createStaticBodyGenerator("show catalogs",UTF_8)).setHeader(PRESTO_USER,"user").setHeader(PRESTO_SOURCE,"source").setHeader(PRESTO_CATALOG,"catalog").setHeader(PRESTO_SCHEMA,"schema").addHeader(PRESTO_SESSION,"system-name=system-value").addHeader(PRESTO_SESSION,"catalog.name=catalog-value").addHeader(PRESTO_SESSION,"catalog2.name=catalog2-value").build();
  QueryResults queryResults=client.execute(request,createJsonResponseHandler(jsonCodec(QueryResults.class)));
  QueryInfo queryInfo=server.getQueryManager().getQueryInfo(new QueryId(queryResults.getId()));
  assertEquals(queryInfo.getSession().getSystemProperties(),ImmutableMap.of("system-name","system-value"));
  assertEquals(queryInfo.getSession().getCatalogProperties(),ImmutableMap.of("catalog",ImmutableMap.of("name","catalog-value"),"catalog2",ImmutableMap.of("name","catalog2-value")));
  ImmutableList.Builder<List<Object>> data=ImmutableList.builder();
  if (queryResults.getData() != null) {
    data.addAll(queryResults.getData());
  }
  while (queryResults.getNextUri() != null) {
    queryResults=client.execute(prepareGet().setUri(queryResults.getNextUri()).build(),createJsonResponseHandler(jsonCodec(QueryResults.class)));
    if (queryResults.getData() != null) {
      data.addAll(queryResults.getData());
    }
  }
  List<List<Object>> rows=data.build();
  assertEquals(rows.size(),0);
}
