{
  AggregationFunctionStep[] functions=new AggregationFunctionStep[functionProviders.size()];
  for (int i=0; i < functions.length; i++) {
    functions[i]=functionProviders.get(i).get();
  }
  for (  Page page : source) {
    for (    AggregationFunctionStep function : functions) {
      function.add(page);
    }
  }
  Tuple[] results=new Tuple[functions.length];
  for (int i=0; i < functions.length; i++) {
    results[i]=functions[i].evaluate();
  }
  Block[] blocks=new Block[projections.size()];
  for (int i=0; i < blocks.length; i++) {
    BlockBuilder output=new BlockBuilder(projections.get(i).getTupleInfo());
    projections.get(i).project(results,output);
    blocks[i]=output.build();
  }
  return PageIterators.singletonIterator(new Page(blocks));
}
