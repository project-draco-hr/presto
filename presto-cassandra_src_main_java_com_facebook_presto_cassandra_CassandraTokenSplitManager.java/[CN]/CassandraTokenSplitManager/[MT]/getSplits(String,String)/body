{
  List<TokenRange> masterRangeNodes=cassandraThriftClient.getRangeMap(keyspace);
  List<TokenSplit> splits=new ArrayList<>();
  List<Future<List<TokenSplit>>> splitFutures=new ArrayList<>();
  for (  TokenRange range : masterRangeNodes) {
    splitFutures.add(executor.submit(new SplitCallable<>(range,keyspace,columnFamily,splitSize,cassandraThriftClient,partitioner)));
  }
  for (  Future<List<TokenSplit>> futureInputSplits : splitFutures) {
    try {
      splits.addAll(futureInputSplits.get());
    }
 catch (    Exception e) {
      throw new IOException("Could not get input splits",e);
    }
  }
  checkState(!splits.isEmpty(),"No splits created");
  Collections.shuffle(splits,ThreadLocalRandom.current());
  return splits;
}
