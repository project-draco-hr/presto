{
  long oldMasterSequenceId=masterSequenceId.get();
  checkArgument(newSequenceId >= oldMasterSequenceId,"Master sequence id moved backwards: oldMasterSequenceId=%s, newMasterSequenceId=%s",oldMasterSequenceId,newSequenceId);
  if (newSequenceId == oldMasterSequenceId) {
    return;
  }
  masterSequenceId.set(newSequenceId);
  int pagesToRemove=Ints.checkedCast(newSequenceId - oldMasterSequenceId);
  checkState(masterBuffer.size() >= pagesToRemove,"MasterBuffer does not have any pages to remove: pagesToRemove %s oldMasterSequenceId: %s newSequenceId: %s",pagesToRemove,oldMasterSequenceId,newSequenceId);
  for (int i=0; i < pagesToRemove; i++) {
    Page page=masterBuffer.removeFirst();
    bufferedBytes.addAndGet(-page.getSizeInBytes());
  }
  verify(bufferedBytes.get() >= 0);
  while (!queuedPages.isEmpty() && bufferedBytes.get() < maxBufferedBytes) {
    QueuedPage queuedPage=queuedPages.remove();
    addToMasterBuffer(queuedPage.getPage());
    queuedPage.getFuture().set(null);
  }
}
