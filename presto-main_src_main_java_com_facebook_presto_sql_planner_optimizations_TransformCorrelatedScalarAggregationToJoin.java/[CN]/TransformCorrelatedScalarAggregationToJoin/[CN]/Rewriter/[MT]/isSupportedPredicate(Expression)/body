{
  AtomicBoolean isSupported=new AtomicBoolean(true);
  new DefaultTraversalVisitor<Void,AtomicBoolean>(){
    @Override protected Void visitLogicalBinaryExpression(    LogicalBinaryExpression node,    AtomicBoolean context){
      if (node.getType() != LogicalBinaryExpression.Type.AND) {
        context.set(false);
      }
      return null;
    }
  }
.process(predicate,isSupported);
  return isSupported.get();
}
