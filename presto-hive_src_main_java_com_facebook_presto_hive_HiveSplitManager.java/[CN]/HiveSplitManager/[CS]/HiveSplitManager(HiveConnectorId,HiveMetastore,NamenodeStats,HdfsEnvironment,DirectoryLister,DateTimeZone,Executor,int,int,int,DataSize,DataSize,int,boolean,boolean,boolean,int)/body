{
  this.connectorId=checkNotNull(connectorId,"connectorId is null").toString();
  this.metastore=checkNotNull(metastore,"metastore is null");
  this.namenodeStats=checkNotNull(namenodeStats,"namenodeStats is null");
  this.hdfsEnvironment=checkNotNull(hdfsEnvironment,"hdfsEnvironment is null");
  this.directoryLister=checkNotNull(directoryLister,"directoryLister is null");
  this.timeZone=checkNotNull(timeZone,"timeZone is null");
  this.executor=new ErrorCodedExecutor(executor);
  checkArgument(maxOutstandingSplits >= 1,"maxOutstandingSplits must be at least 1");
  this.maxOutstandingSplits=maxOutstandingSplits;
  this.minPartitionBatchSize=minPartitionBatchSize;
  this.maxPartitionBatchSize=maxPartitionBatchSize;
  this.maxSplitSize=checkNotNull(maxSplitSize,"maxSplitSize is null");
  this.maxInitialSplitSize=checkNotNull(maxInitialSplitSize,"maxInitialSplitSize is null");
  this.maxInitialSplits=maxInitialSplits;
  this.forceLocalScheduling=forceLocalScheduling;
  this.recursiveDfsWalkerEnabled=recursiveDfsWalkerEnabled;
  this.assumeCanonicalPartitionKeys=assumeCanonicalPartitionKeys;
  checkArgument(domainCompactionThreshold >= 1,"domainCompactionThreshold must be at least 1");
  this.domainCompactionThreshold=domainCompactionThreshold;
}
