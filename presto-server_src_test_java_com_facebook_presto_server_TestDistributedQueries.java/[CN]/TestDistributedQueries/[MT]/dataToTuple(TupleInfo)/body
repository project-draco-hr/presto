{
  return new Function<List<Object>,Tuple>(){
    @Override public Tuple apply(    List<Object> data){
      checkArgument(data.size() == tupleInfo.getTypes().size(),"columns size does not match tuple info");
      TupleInfo.Builder tuple=tupleInfo.builder();
      for (int i=0; i < data.size(); i++) {
        Object value=data.get(i);
        if (value == null) {
          tuple.appendNull();
          continue;
        }
        Type type=tupleInfo.getTypes().get(i);
switch (type) {
case BOOLEAN:
          tuple.append((Boolean)value);
        break;
case FIXED_INT_64:
      tuple.append(((Number)value).longValue());
    break;
case DOUBLE:
  tuple.append(((Number)value).doubleValue());
break;
case VARIABLE_BINARY:
tuple.append((String)value);
break;
default :
throw new AssertionError("unhandled type: " + type);
}
}
return tuple.build();
}
}
;
}
