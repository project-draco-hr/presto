{
  long valuePrecision=context.getLiteral("value_precision");
  long valueScale=context.getLiteral("value_scale");
  long lowPrecision=context.getLiteral("low_precision");
  long lowScale=context.getLiteral("low_scale");
  long highPrecision=context.getLiteral("high_precision");
  long highScale=context.getLiteral("high_scale");
  MethodHandle lowerBoundTestMethodHandle=DECIMAL_LESS_THAN_OR_EQUAL_OPERATOR.specialize(new BoundVariables(ImmutableMap.of(),ImmutableMap.of("A_PRECISION",OptionalLong.of(lowPrecision),"A_SCALE",OptionalLong.of(lowScale),"B_PRECISION",OptionalLong.of(valuePrecision),"B_SCALE",OptionalLong.of(valueScale))),2,context.getTypeManager(),context.getFunctionRegistry()).getMethodHandle();
  MethodHandle upperBoundTestMethodHandle=DECIMAL_GREATER_THAN_OR_EQUAL_OPERATOR.specialize(new BoundVariables(ImmutableMap.of(),ImmutableMap.of("A_PRECISION",OptionalLong.of(highPrecision),"A_SCALE",OptionalLong.of(highScale),"B_PRECISION",OptionalLong.of(valuePrecision),"B_SCALE",OptionalLong.of(valueScale))),2,context.getTypeManager(),context.getFunctionRegistry()).getMethodHandle();
  return ImmutableList.of(lowerBoundTestMethodHandle,upperBoundTestMethodHandle);
}
