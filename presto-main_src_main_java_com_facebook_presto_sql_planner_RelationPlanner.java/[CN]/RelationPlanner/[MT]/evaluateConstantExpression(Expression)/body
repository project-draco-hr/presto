{
  try {
    ExpressionInterpreter.expressionOptimizer(expression,metadata,session).optimize(new SymbolResolver(){
      @Override public Object getValue(      Symbol symbol){
        throw new SemanticException(EXPRESSION_NOT_CONSTANT,expression,"Constant expression cannot contain column references");
      }
    }
);
    Object result=ExpressionInterpreter.expressionInterpreter(expression,metadata,session).evaluate(new TupleReadable[0]);
    checkState(!(result instanceof Expression),"Expression interpreter returned an unresolved expression");
    return (Literal)LiteralInterpreter.toExpression(result);
  }
 catch (  Exception e) {
    throw new SemanticException(EXPRESSION_NOT_CONSTANT,expression,"Error evaluating constant expression: %s",e.getMessage());
  }
}
