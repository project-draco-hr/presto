{
  checkArgument(!node.getRelations().isEmpty(),"No relations specified for UNION");
  List<Symbol> outputSymbols=null;
  ImmutableList.Builder<PlanNode> sources=ImmutableList.builder();
  ImmutableListMultimap.Builder<Symbol,Symbol> symbolMapping=ImmutableListMultimap.builder();
  for (  Relation relation : node.getRelations()) {
    RelationPlan relationPlan=process(relation,context);
    if (outputSymbols == null) {
      TupleDescriptor descriptor=relationPlan.getDescriptor();
      ImmutableList.Builder<Symbol> outputSymbolBuilder=ImmutableList.builder();
      for (      Field field : descriptor.getFields()) {
        int fieldIndex=descriptor.indexOf(field);
        Symbol symbol=relationPlan.getOutputSymbols().get(fieldIndex);
        outputSymbolBuilder.add(symbolAllocator.newSymbol(symbol.getName(),symbolAllocator.getTypes().get(symbol)));
      }
      outputSymbols=outputSymbolBuilder.build();
    }
    TupleDescriptor descriptor=relationPlan.getDescriptor();
    checkArgument(descriptor.getFieldCount() == outputSymbols.size(),"Expected relation to have %s symbols but has %s symbols",descriptor.getFieldCount(),outputSymbols.size());
    for (    Field field : descriptor.getFields()) {
      int fieldIndex=descriptor.indexOf(field);
      symbolMapping.put(outputSymbols.get(fieldIndex),relationPlan.getOutputSymbols().get(fieldIndex));
    }
    sources.add(relationPlan.getRoot());
  }
  PlanNode planNode=new UnionNode(idAllocator.getNextId(),sources.build(),symbolMapping.build());
  if (node.isDistinct()) {
    planNode=distinct(planNode);
  }
  return new RelationPlan(planNode,analysis.getOutputDescriptor(node),planNode.getOutputSymbols());
}
