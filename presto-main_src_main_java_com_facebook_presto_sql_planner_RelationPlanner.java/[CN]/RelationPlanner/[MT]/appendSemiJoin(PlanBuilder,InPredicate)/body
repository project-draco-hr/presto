{
  TranslationMap translations=new TranslationMap(subPlan.getRelationPlan(),analysis);
  translations.copyMappingsFrom(subPlan.getTranslations());
  subPlan=appendProjections(subPlan,ImmutableList.of(inPredicate.getValue()));
  Symbol sourceJoinSymbol=subPlan.translate(inPredicate.getValue());
  checkState(inPredicate.getValueList() instanceof SubqueryExpression);
  SubqueryExpression subqueryExpression=(SubqueryExpression)inPredicate.getValueList();
  RelationPlanner relationPlanner=new RelationPlanner(analysis,symbolAllocator,idAllocator,metadata,session);
  RelationPlan valueListRelation=relationPlanner.process(subqueryExpression.getQuery(),null);
  Symbol filteringSourceJoinSymbol=Iterables.getOnlyElement(valueListRelation.getRoot().getOutputSymbols());
  Symbol semiJoinOutputSymbol=symbolAllocator.newSymbol("semijoinresult",BOOLEAN);
  translations.put(inPredicate,semiJoinOutputSymbol);
  return new PlanBuilder(translations,new SemiJoinNode(idAllocator.getNextId(),subPlan.getRoot(),valueListRelation.getRoot(),sourceJoinSymbol,filteringSourceJoinSymbol,semiJoinOutputSymbol,Optional.empty(),Optional.empty()),subPlan.getSampleWeight());
}
