{
  TupleDescriptor descriptor=analysis.getOutputDescriptor(node);
  ImmutableList.Builder<Symbol> outputSymbolsBuilder=ImmutableList.builder();
  for (  Field field : descriptor.getVisibleFields()) {
    Symbol symbol=symbolAllocator.newSymbol(field);
    outputSymbolsBuilder.add(symbol);
  }
  ImmutableList.Builder<List<Expression>> rows=ImmutableList.builder();
  for (  Expression row : node.getRows()) {
    ImmutableList.Builder<Expression> values=ImmutableList.builder();
    if (row instanceof Row) {
      for (      Expression expression : ((Row)row).getItems()) {
        values.add(evaluateConstantExpression(expression));
      }
    }
 else {
      values.add(row);
    }
    rows.add(values.build());
  }
  ValuesNode valuesNode=new ValuesNode(idAllocator.getNextId(),outputSymbolsBuilder.build(),rows.build());
  return new RelationPlan(valuesNode,descriptor,outputSymbolsBuilder.build(),Optional.empty());
}
