{
  this.createTime=checkNotNull(createTime,"createTime is null");
  this.startTime=startTime;
  this.endTime=endTime;
  this.queuedTime=checkNotNull(queuedTime,"queuedTime is null");
  this.elapsedTime=checkNotNull(elapsedTime,"elapsedTime is null");
  this.memoryReservation=checkNotNull(memoryReservation,"memoryReservation is null");
  this.totalScheduledTime=checkNotNull(totalScheduledTime,"totalScheduledTime is null");
  this.totalCpuTime=checkNotNull(totalCpuTime,"totalCpuTime is null");
  this.totalUserTime=checkNotNull(totalUserTime,"totalUserTime is null");
  this.totalBlockedTime=checkNotNull(totalBlockedTime,"totalBlockedTime is null");
  this.rawInputDataSize=checkNotNull(rawInputDataSize,"rawInputDataSize is null");
  Preconditions.checkArgument(rawInputPositions >= 0,"rawInputPositions is negative");
  this.rawInputPositions=rawInputPositions;
  this.rawInputReadTime=checkNotNull(rawInputReadTime,"rawInputReadTime is null");
  this.processedInputDataSize=checkNotNull(processedInputDataSize,"processedInputDataSize is null");
  Preconditions.checkArgument(processedInputPositions >= 0,"processedInputPositions is negative");
  this.processedInputPositions=processedInputPositions;
  this.outputDataSize=checkNotNull(outputDataSize,"outputDataSize is null");
  Preconditions.checkArgument(outputPositions >= 0,"outputPositions is negative");
  this.outputPositions=outputPositions;
  this.operatorStats=ImmutableList.copyOf(checkNotNull(operatorStats,"operatorStats is null"));
}
