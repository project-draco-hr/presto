{
  this.createTime=requireNonNull(createTime,"createTime is null");
  this.startTime=startTime;
  this.endTime=endTime;
  this.queuedTime=requireNonNull(queuedTime,"queuedTime is null");
  this.elapsedTime=requireNonNull(elapsedTime,"elapsedTime is null");
  this.memoryReservation=requireNonNull(memoryReservation,"memoryReservation is null");
  this.systemMemoryReservation=requireNonNull(systemMemoryReservation,"systemMemoryReservation is null");
  this.totalScheduledTime=requireNonNull(totalScheduledTime,"totalScheduledTime is null");
  this.totalCpuTime=requireNonNull(totalCpuTime,"totalCpuTime is null");
  this.totalUserTime=requireNonNull(totalUserTime,"totalUserTime is null");
  this.totalBlockedTime=requireNonNull(totalBlockedTime,"totalBlockedTime is null");
  this.fullyBlocked=fullyBlocked;
  this.blockedReasons=ImmutableSet.copyOf(requireNonNull(blockedReasons,"blockedReasons is null"));
  this.rawInputDataSize=requireNonNull(rawInputDataSize,"rawInputDataSize is null");
  Preconditions.checkArgument(rawInputPositions >= 0,"rawInputPositions is negative");
  this.rawInputPositions=rawInputPositions;
  this.rawInputReadTime=requireNonNull(rawInputReadTime,"rawInputReadTime is null");
  this.processedInputDataSize=requireNonNull(processedInputDataSize,"processedInputDataSize is null");
  Preconditions.checkArgument(processedInputPositions >= 0,"processedInputPositions is negative");
  this.processedInputPositions=processedInputPositions;
  this.outputDataSize=requireNonNull(outputDataSize,"outputDataSize is null");
  Preconditions.checkArgument(outputPositions >= 0,"outputPositions is negative");
  this.outputPositions=outputPositions;
  this.operatorStats=ImmutableList.copyOf(requireNonNull(operatorStats,"operatorStats is null"));
}
