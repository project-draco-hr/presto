{
  DynamicClassLoader classLoader=new DynamicClassLoader(MinBy.class.getClassLoader());
  MaxOrMinByStateSerializer stateSerializer=new MaxOrMinByStateSerializer(valueType,keyType);
  Type intermediateType=stateSerializer.getSerializedType();
  List<Type> inputTypes=ImmutableList.of(valueType,keyType);
  MaxOrMinByStateFactory stateFactory=new MaxOrMinByStateFactory();
  AggregationMetadata metadata=new AggregationMetadata(generateAggregationName(NAME,valueType,inputTypes),createInputParameterMetadata(valueType,keyType),INPUT_FUNCTION.bindTo(keyType),null,null,COMBINE_FUNCTION.bindTo(keyType),OUTPUT_FUNCTION.bindTo(valueType),MaxOrMinByState.class,stateSerializer,stateFactory,valueType,false);
  GenericAccumulatorFactoryBinder factory=new AccumulatorCompiler().generateAccumulatorFactoryBinder(metadata,classLoader);
  return new InternalAggregationFunction(NAME,inputTypes,intermediateType,valueType,true,false,factory);
}
