{
  DynamicClassLoader classLoader=new DynamicClassLoader(MinBy.class.getClassLoader());
  MaxOrMinByStateSerializer stateSerializer=new MaxOrMinByStateSerializer();
  Type intermediateType=stateSerializer.getSerializedType();
  List<Type> inputTypes=ImmutableList.of(valueType,keyType);
  MaxOrMinByStateFactory stateFactory=new MaxOrMinByStateFactory(valueType,keyType);
  AggregationMetadata metadata=new AggregationMetadata(generateAggregationName(NAME,valueType,inputTypes),createInputParameterMetadata(valueType,keyType),INPUT_FUNCTION,null,null,COMBINE_FUNCTION,OUTPUT_FUNCTION,MaxOrMinByState.class,stateSerializer,stateFactory,valueType,false);
  GenericAccumulatorFactoryBinder factory=new AccumulatorCompiler().generateAccumulatorFactoryBinder(metadata,classLoader);
  return new InternalAggregationFunction(NAME,inputTypes,intermediateType,valueType,true,false,factory);
}
