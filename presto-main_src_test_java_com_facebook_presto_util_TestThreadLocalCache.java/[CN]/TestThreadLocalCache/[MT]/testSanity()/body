{
  final AtomicInteger count=new AtomicInteger(0);
  ThreadLocalCache<String,String> cache=new ThreadLocalCache<String,String>(2){
    @Override protected String load(    String key){
      return key + count.getAndAdd(1);
    }
  }
;
  assertEquals(cache.get("abc"),"abc0");
  assertEquals(cache.get("abc"),"abc0");
  assertEquals(cache.get("def"),"def1");
  assertEquals(cache.get("abc"),"abc0");
  assertEquals(cache.get("ghi"),"ghi2");
  assertEquals(cache.get("abc"),"abc3");
}
