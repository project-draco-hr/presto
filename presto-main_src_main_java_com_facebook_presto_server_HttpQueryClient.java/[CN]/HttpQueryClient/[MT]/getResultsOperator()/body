{
  QueryInfo queryInfo=getQueryInfo();
  if (queryInfo == null || queryInfo.getOutputStage() == null) {
    return new Operator(){
      @Override public int getChannelCount(){
        return 0;
      }
      @Override public List<TupleInfo> getTupleInfos(){
        return ImmutableList.of();
      }
      @Override public PageIterator iterator(){
        return PageIterators.emptyIterator(tupleInfos);
      }
    }
;
  }
  List<TaskInfo> outputStage=queryInfo.getOutputStage().getTasks();
  return new QueryDriversOperator(10,Iterables.transform(outputStage,new Function<TaskInfo,QueryDriverProvider>(){
    @Override public QueryDriverProvider apply(    TaskInfo taskInfo){
      Preconditions.checkState(taskInfo.getOutputBuffers().size() == 1,"Expected a single output buffer for task %s, but found %s",taskInfo.getTaskId(),taskInfo.getOutputBuffers());
      URI taskUri=uriBuilderFrom(taskInfo.getSelf()).replacePath("/v1/task").appendPath(taskInfo.getTaskId()).build();
      return new HttpTaskClient(taskInfo.getTaskId(),taskUri,Iterables.getOnlyElement(taskInfo.getOutputBuffers()).getBufferId(),taskInfo.getTupleInfos(),httpClient,executor,taskInfoCodec);
    }
  }
));
}
