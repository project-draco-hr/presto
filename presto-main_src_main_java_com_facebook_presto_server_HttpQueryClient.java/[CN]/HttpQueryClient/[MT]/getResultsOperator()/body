{
  QueryInfo queryInfo=getQueryInfo(false);
  if (queryInfo == null || queryInfo.getOutputStage() == null) {
    return new Operator(){
      @Override public int getChannelCount(){
        return 0;
      }
      @Override public List<TupleInfo> getTupleInfos(){
        return ImmutableList.of();
      }
      @Override public PageIterator iterator(      OperatorStats operatorStats){
        return PageIterators.emptyIterator(ImmutableList.<TupleInfo>of());
      }
    }
;
  }
  StageInfo outputStage=queryInfo.getOutputStage();
  return new ExchangeOperator(httpClient,outputStage.getTupleInfos(),100,10,3,transform(outputStage.getTasks(),new Function<TaskInfo,URI>(){
    @Override public URI apply(    TaskInfo taskInfo){
      Preconditions.checkState(taskInfo.getOutputBuffers().size() == 1,"Expected a single output buffer for task %s, but found %s",taskInfo.getTaskId(),taskInfo.getOutputBuffers());
      String bufferId=Iterables.getOnlyElement(taskInfo.getOutputBuffers()).getBufferId();
      return uriBuilderFrom(taskInfo.getSelf()).appendPath("results").appendPath(bufferId).build();
    }
  }
));
}
