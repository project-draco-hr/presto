{
  Block block=new Block();
  LabelNode end=new LabelNode("end");
  Class<?> unboxedType=Primitives.unwrap(boxedType);
  Variable wasNull=scope.getVariable("wasNull");
  if (unboxedType.isPrimitive() && unboxedType != void.class) {
    LabelNode notNull=new LabelNode("notNull");
    block.dup(boxedType).ifNotNullGoto(notNull).append(wasNull.set(constantTrue())).comment("swap boxed null with unboxed default").pop(boxedType).pushJavaDefault(unboxedType).gotoLabel(end).visitLabel(notNull).append(unboxPrimitive(unboxedType));
  }
 else {
    block.dup(boxedType).ifNotNullGoto(end).append(wasNull.set(constantTrue()));
  }
  block.visitLabel(end);
  return block;
}
