{
  MethodType methodType=binding.getType();
  Signature signature=function.getSignature();
  Class<?> returnType=methodType.returnType();
  Class<?> unboxedReturnType=Primitives.unwrap(returnType);
  LabelNode end=new LabelNode("end");
  Block block=new Block(context).setDescription("invoke " + signature);
  List<Class<?>> stackTypes=new ArrayList<>();
  int index=0;
  for (  Class<?> type : methodType.parameterArray()) {
    stackTypes.add(type);
    if (type == ConnectorSession.class) {
      block.append(context.getVariable("session"));
    }
 else {
      block.append(arguments.get(index));
      if (!function.getNullableArguments().get(index)) {
        block.append(ifWasNullPopAndGoto(context,end,unboxedReturnType,Lists.reverse(stackTypes)));
      }
 else {
        block.append(boxPrimitiveIfNecessary(context,type));
        block.append(context.getVariable("wasNull").set(constantFalse()));
      }
      index++;
    }
  }
  block.append(invoke(binding,function.getSignature()));
  if (function.isNullable()) {
    block.append(unboxPrimitiveIfNecessary(context,returnType));
  }
  block.visitLabel(end);
  return block;
}
