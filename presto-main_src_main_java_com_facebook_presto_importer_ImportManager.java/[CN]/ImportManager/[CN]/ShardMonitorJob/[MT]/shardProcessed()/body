{
  Status status;
  try {
    status=shardStatus();
  }
 catch (  RuntimeException e) {
    log.warn("Failed to get shard status: %s. Cause: %s",shardId,e.getMessage());
    return false;
  }
switch (status) {
case ACCEPTED:
    return false;
case OK:
  try {
    shardManager.commitShard(shardId,worker.getNodeIdentifier());
  }
 catch (  UnableToExecuteStatementException e) {
    log.warn("Shard commit error: %s. Cause: %s",shardId,e.getMessage());
    return false;
  }
log.info("shard imported: %s",shardId);
return true;
case NOT_FOUND:
log.info("shard import error or was dropped before commit: %s",shardId);
return true;
default :
throw new AssertionError("Unknown shard status: " + status);
}
}
