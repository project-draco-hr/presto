{
  checkNotNull(sourceName,"sourceName is null");
  checkNotNull(databaseName,"databaseName is null");
  checkNotNull(tableName,"tableName is null");
  checkNotNull(fields,"fields is null");
  checkArgument(!fields.isEmpty(),"fields is empty");
  shardManager.createImportTable(tableId,sourceName,databaseName,tableName);
  List<String> partitions=runWithRetryUnchecked(new Callable<List<String>>(){
    @Override public List<String> call() throws Exception {
      ImportClient importClient=importClientFactory.getClient(sourceName);
      return importClient.getPartitionNames(databaseName,tableName);
    }
  }
);
  log.debug("Found %d current partitions: %d",partitions.size(),tableId);
  Set<String> importedPartitions=shardManager.getImportedPartitions(tableId);
  int newPartitionCount=0;
  for (  String partition : partitions) {
    if (!importedPartitions.contains(partition)) {
      PartitionChunkSupplier supplier=new PartitionChunkSupplier(importClientFactory,sourceName,databaseName,tableName,partition);
      PartitionJob job=new PartitionJob(tableId,sourceName,partition,supplier,fields);
      partitionExecutor.execute(job);
      newPartitionCount++;
    }
  }
  log.debug("Loading %d new partitions: %d",newPartitionCount,tableId);
}
