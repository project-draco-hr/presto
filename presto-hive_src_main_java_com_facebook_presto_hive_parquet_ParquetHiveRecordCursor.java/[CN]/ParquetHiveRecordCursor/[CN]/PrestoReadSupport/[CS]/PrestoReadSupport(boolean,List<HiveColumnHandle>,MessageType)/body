{
  this.columns=columns;
  this.useParquetColumnNames=useParquetColumnNames;
  ImmutableList.Builder<Converter> converters=ImmutableList.builder();
  for (int i=0; i < columns.size(); i++) {
    HiveColumnHandle column=columns.get(i);
    if (!column.isPartitionKey()) {
      parquet.schema.Type parquetType=getParquetType(column,messageType,useParquetColumnNames);
      if (parquetType == null) {
        continue;
      }
      if (parquetType.isPrimitive()) {
        converters.add(new ParquetPrimitiveColumnConverter(i));
      }
 else {
        converters.add(new ParquetColumnConverter(createGroupConverter(types[i],parquetType.getName(),parquetType),i));
      }
    }
  }
  this.converters=converters.build();
}
