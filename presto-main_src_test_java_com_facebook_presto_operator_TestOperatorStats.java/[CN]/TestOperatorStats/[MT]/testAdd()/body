{
  OperatorStats actual=EXPECTED.add(EXPECTED,EXPECTED);
  Assert.assertEquals(actual.getOperatorId(),41);
  Assert.assertEquals(actual.getOperatorType(),"test");
  Assert.assertEquals(actual.getGetOutputWall(),new Duration(3 * 1,NANOSECONDS));
  Assert.assertEquals(actual.getGetOutputCpu(),new Duration(3 * 2,NANOSECONDS));
  Assert.assertEquals(actual.getGetOutputUser(),new Duration(3 * 3,NANOSECONDS));
  Assert.assertEquals(actual.getOutputDataSize(),new DataSize(3 * 4,BYTE));
  Assert.assertEquals(actual.getOutputPositions(),3 * 5);
  Assert.assertEquals(actual.getAddInputWall(),new Duration(3 * 6,NANOSECONDS));
  Assert.assertEquals(actual.getAddInputCpu(),new Duration(3 * 7,NANOSECONDS));
  Assert.assertEquals(actual.getAddInputUser(),new Duration(3 * 8,NANOSECONDS));
  Assert.assertEquals(actual.getInputDataSize(),new DataSize(3 * 9,BYTE));
  Assert.assertEquals(actual.getInputPositions(),3 * 10);
  Assert.assertEquals(actual.getBlockedWall(),new Duration(3 * 11,NANOSECONDS));
  Assert.assertEquals(actual.getFinishWall(),new Duration(3 * 12,NANOSECONDS));
  Assert.assertEquals(actual.getFinishCpu(),new Duration(3 * 13,NANOSECONDS));
  Assert.assertEquals(actual.getFinishUser(),new Duration(3 * 14,NANOSECONDS));
  Assert.assertEquals(actual.getMemoryReservation(),new DataSize(3 * 15,BYTE));
  Assert.assertEquals(actual.getInfo(),null);
}
