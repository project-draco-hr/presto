{
  TupleDomain<ColumnHandle> tupleDomain=TupleDomain.withColumnDomains(ImmutableMap.of(columns.get(6),Domain.create(SortedRangeSet.copyOf(TIMESTAMP,ImmutableList.of(Range.equal(TIMESTAMP,toTimestamp(2016,6,3,0,23,37).getTime()),Range.equal(TIMESTAMP,toTimestamp(2016,10,19,16,23,37).getTime()),Range.range(TIMESTAMP,toTimestamp(2016,6,7,8,23,37).getTime(),false,toTimestamp(2016,6,9,12,23,37).getTime(),true))),false)));
  Connection connection=database.getConnection();
  try (PreparedStatement preparedStatement=new QueryBuilder("\"").buildSql(jdbcClient,connection,"","","test_table",columns,tupleDomain);ResultSet resultSet=preparedStatement.executeQuery()){
    ImmutableSet.Builder<Timestamp> builder=ImmutableSet.builder();
    while (resultSet.next()) {
      builder.add((Timestamp)resultSet.getObject("col_6"));
    }
    assertEquals(builder.build(),ImmutableSet.of(toTimestamp(2016,6,3,0,23,37),toTimestamp(2016,6,8,10,23,37),toTimestamp(2016,6,9,12,23,37),toTimestamp(2016,10,19,16,23,37)));
    assertContains(preparedStatement.toString(),"\"col_6\" > ?");
    assertContains(preparedStatement.toString(),"\"col_6\" <= ?");
    assertContains(preparedStatement.toString(),"\"col_6\" IN (?,?)");
  }
 }
