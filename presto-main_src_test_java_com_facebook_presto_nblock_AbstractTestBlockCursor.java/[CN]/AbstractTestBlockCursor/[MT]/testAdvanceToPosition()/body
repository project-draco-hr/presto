{
  BlockCursor cursor=createExpectedValues().cursor();
  assertAdvanceToPosition(cursor,0);
  assertCurrentValue(cursor,0,getExpectedValue(0));
  assertAdvanceToPosition(cursor,2);
  assertCurrentValue(cursor,2,getExpectedValue(2));
  assertAdvanceToPosition(cursor,2);
  assertCurrentValue(cursor,2,getExpectedValue(2));
  assertAdvanceToPosition(cursor,4);
  assertCurrentValue(cursor,4,getExpectedValue(4));
  assertAdvanceToPosition(cursor,8);
  assertCurrentValue(cursor,8,getExpectedValue(8));
  assertAdvanceToPosition(cursor,10);
  assertCurrentValue(cursor,10,getExpectedValue(10));
  try {
    cursor.advanceToPosition(2);
    fail("Expected IllegalArgumentException");
  }
 catch (  IllegalArgumentException e) {
    assertCurrentValue(cursor,10,getExpectedValue(10));
  }
  assertFalse(cursor.advanceToPosition((long)100));
  assertTrue(cursor.isFinished());
  assertFalse(cursor.isValid());
}
