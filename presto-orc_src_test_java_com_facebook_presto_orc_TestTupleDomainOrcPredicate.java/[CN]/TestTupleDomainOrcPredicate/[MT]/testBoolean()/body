{
  assertEquals(getDomain(BOOLEAN,0,null),none(Boolean.class));
  assertEquals(getDomain(BOOLEAN,10,null),all(Boolean.class));
  assertEquals(getDomain(BOOLEAN,0,booleanColumnStats(null,null)),none(Boolean.class));
  assertEquals(getDomain(BOOLEAN,0,booleanColumnStats(0L,null)),none(Boolean.class));
  assertEquals(getDomain(BOOLEAN,0,booleanColumnStats(0L,0L)),none(Boolean.class));
  assertEquals(getDomain(BOOLEAN,10,booleanColumnStats(0L,0L)),onlyNull(Boolean.class));
  assertEquals(getDomain(BOOLEAN,10,booleanColumnStats(10L,null)),notNull(Boolean.class));
  assertEquals(getDomain(BOOLEAN,10,booleanColumnStats(10L,10L)),singleValue(true));
  assertEquals(getDomain(BOOLEAN,10,booleanColumnStats(10L,0L)),singleValue(false));
  assertEquals(getDomain(BOOLEAN,20,booleanColumnStats(10L,5L)),all(Boolean.class));
  assertEquals(getDomain(BOOLEAN,20,booleanColumnStats(10L,10L)),new Domain(SortedRangeSet.of(Range.equal(true)),true));
  assertEquals(getDomain(BOOLEAN,20,booleanColumnStats(10L,0L)),new Domain(SortedRangeSet.of(Range.equal(false)),true));
}
