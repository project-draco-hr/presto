{
  assertEquals(getDomain(BOOLEAN,0,null),none(BOOLEAN));
  assertEquals(getDomain(BOOLEAN,10,null),all(BOOLEAN));
  assertEquals(getDomain(BOOLEAN,0,booleanColumnStats(null,null)),none(BOOLEAN));
  assertEquals(getDomain(BOOLEAN,0,booleanColumnStats(0L,null)),none(BOOLEAN));
  assertEquals(getDomain(BOOLEAN,0,booleanColumnStats(0L,0L)),none(BOOLEAN));
  assertEquals(getDomain(BOOLEAN,10,booleanColumnStats(0L,0L)),onlyNull(BOOLEAN));
  assertEquals(getDomain(BOOLEAN,10,booleanColumnStats(10L,null)),notNull(BOOLEAN));
  assertEquals(getDomain(BOOLEAN,10,booleanColumnStats(10L,10L)),singleValue(BOOLEAN,true));
  assertEquals(getDomain(BOOLEAN,10,booleanColumnStats(10L,0L)),singleValue(BOOLEAN,false));
  assertEquals(getDomain(BOOLEAN,20,booleanColumnStats(10L,5L)),all(BOOLEAN));
  assertEquals(getDomain(BOOLEAN,20,booleanColumnStats(10L,10L)),create(ValueSet.ofRanges(Range.equal(BOOLEAN,true)),true));
  assertEquals(getDomain(BOOLEAN,20,booleanColumnStats(10L,0L)),create(ValueSet.ofRanges(Range.equal(BOOLEAN,false)),true));
}
