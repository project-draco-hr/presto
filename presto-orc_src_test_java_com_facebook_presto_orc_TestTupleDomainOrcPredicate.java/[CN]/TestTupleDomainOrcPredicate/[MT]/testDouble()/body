{
  assertEquals(getDomain(DOUBLE,0,null),none(Double.class));
  assertEquals(getDomain(DOUBLE,10,null),all(Double.class));
  assertEquals(getDomain(DOUBLE,0,doubleColumnStats(null,null,null)),none(Double.class));
  assertEquals(getDomain(DOUBLE,0,doubleColumnStats(0L,null,null)),none(Double.class));
  assertEquals(getDomain(DOUBLE,0,doubleColumnStats(0L,42.24,42.24)),none(Double.class));
  assertEquals(getDomain(DOUBLE,10,doubleColumnStats(0L,null,null)),onlyNull(Double.class));
  assertEquals(getDomain(DOUBLE,10,doubleColumnStats(10L,null,null)),notNull(Double.class));
  assertEquals(getDomain(DOUBLE,10,doubleColumnStats(10L,42.24,42.24)),singleValue(42.24));
  assertEquals(getDomain(DOUBLE,10,doubleColumnStats(10L,3.3,42.24)),create(SortedRangeSet.of(range(3.3,true,42.24,true)),false));
  assertEquals(getDomain(DOUBLE,10,doubleColumnStats(10L,null,42.24)),create(SortedRangeSet.of(lessThanOrEqual(42.24)),false));
  assertEquals(getDomain(DOUBLE,10,doubleColumnStats(10L,3.3,null)),create(SortedRangeSet.of(greaterThanOrEqual(3.3)),false));
  assertEquals(getDomain(DOUBLE,10,doubleColumnStats(5L,3.3,42.24)),create(SortedRangeSet.of(range(3.3,true,42.24,true)),true));
  assertEquals(getDomain(DOUBLE,10,doubleColumnStats(5L,null,42.24)),create(SortedRangeSet.of(lessThanOrEqual(42.24)),true));
  assertEquals(getDomain(DOUBLE,10,doubleColumnStats(5L,3.3,null)),create(SortedRangeSet.of(greaterThanOrEqual(3.3)),true));
}
