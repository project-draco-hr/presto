{
  Map<CallExpression,MethodDefinition> tryMethodMap=generateTryMethods(classDefinition,callSiteBinder,cachedInstanceBinder,projection,methodName);
  Parameter session=arg("session",ConnectorSession.class);
  Parameter cursor=arg("cursor",RecordCursor.class);
  Parameter output=arg("output",BlockBuilder.class);
  MethodDefinition method=classDefinition.declareMethod(a(PUBLIC),methodName,type(void.class),session,cursor,output);
  method.comment("Projection: %s",projection.toString());
  Scope scope=method.getScope();
  Variable wasNullVariable=scope.declareVariable(type(boolean.class),"wasNull");
  BytecodeBlock body=method.getBody().comment("boolean wasNull = false;").putVariable(wasNullVariable,false);
  BytecodeExpressionVisitor visitor=new BytecodeExpressionVisitor(callSiteBinder,cachedInstanceBinder,fieldReferenceCompiler(cursor,wasNullVariable),metadata.getFunctionRegistry(),tryMethodMap);
  body.getVariable(output).comment("evaluate projection: " + projection.toString()).append(projection.accept(visitor,scope)).append(generateWrite(callSiteBinder,scope,wasNullVariable,projection.getType())).ret();
}
