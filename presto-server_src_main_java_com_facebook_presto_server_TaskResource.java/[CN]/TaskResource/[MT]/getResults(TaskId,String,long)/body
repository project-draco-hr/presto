{
  checkNotNull(taskId,"taskId is null");
  checkNotNull(outputId,"outputId is null");
  long remainingNanos=DEFAULT_MAX_WAIT_TIME.roundTo(NANOSECONDS);
  long start=System.nanoTime();
  long end=start + remainingNanos;
  int maxSleepMillis=1;
  while (remainingNanos > 0) {
    try {
      BufferResult result=taskManager.getTaskResults(taskId,outputId,pageSequenceId,DEFAULT_MAX_SIZE,new Duration(remainingNanos,NANOSECONDS));
      if (!result.isEmpty()) {
        GenericEntity<?> entity=new GenericEntity<>(result.getElements(),new TypeToken<List<Page>>(){
        }
.getType());
        return Response.ok(entity).header(PRESTO_PAGE_SEQUENCE_ID,result.getStartingSequenceId()).build();
      }
 else       if (result.isBufferClosed()) {
        return Response.status(Status.GONE).header(PRESTO_PAGE_SEQUENCE_ID,result.getStartingSequenceId()).build();
      }
 else {
        return Response.status(Status.NO_CONTENT).header(PRESTO_PAGE_SEQUENCE_ID,result.getStartingSequenceId()).build();
      }
    }
 catch (    NoSuchElementException|NoSuchBufferException ignored) {
    }
    NANOSECONDS.sleep(Math.min(remainingNanos,MILLISECONDS.toNanos(maxSleepMillis)));
    remainingNanos=end - System.nanoTime();
    maxSleepMillis*=2;
  }
  return Response.status(Status.NO_CONTENT).header(PRESTO_PAGE_SEQUENCE_ID,pageSequenceId).build();
}
