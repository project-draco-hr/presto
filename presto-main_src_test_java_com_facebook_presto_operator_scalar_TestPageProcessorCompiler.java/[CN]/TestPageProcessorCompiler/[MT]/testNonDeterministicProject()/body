{
  Signature lessThan=internalOperator(LESS_THAN,BOOLEAN,ImmutableList.of(BIGINT,BIGINT));
  CallExpression random=new CallExpression(new Signature("random",SCALAR,parseTypeSignature(StandardTypes.BIGINT),parseTypeSignature(StandardTypes.BIGINT)),BIGINT,singletonList(new ConstantExpression(10L,BIGINT)));
  InputReferenceExpression col0=new InputReferenceExpression(0,BIGINT);
  CallExpression lessThanRandomExpression=new CallExpression(lessThan,BOOLEAN,ImmutableList.of(col0,random));
  PageProcessor processor=new ExpressionCompiler(createTestMetadataManager()).compilePageProcessor(new ConstantExpression(TRUE,BOOLEAN),ImmutableList.of(lessThanRandomExpression)).get();
  assertFalse(new DeterminismEvaluator(METADATA_MANAGER.getFunctionRegistry()).isDeterministic(lessThanRandomExpression));
  Page page=new Page(createLongDictionaryBlock(1,100));
  Page outputPage=processor.processColumnarDictionary(null,page,ImmutableList.of(BOOLEAN));
  assertFalse(outputPage.getBlock(0) instanceof DictionaryBlock);
}
