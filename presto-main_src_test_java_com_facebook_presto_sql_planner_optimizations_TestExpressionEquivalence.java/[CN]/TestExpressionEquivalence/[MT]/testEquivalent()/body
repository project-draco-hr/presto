{
  assertEquivalent("a_bigint < b_double","b_double > a_bigint");
  assertEquivalent("true","true");
  assertEquivalent("4","4");
  assertEquivalent("4.4","4.4");
  assertEquivalent("'foo'","'foo'");
  assertEquivalent("4 = 5","5 = 4");
  assertEquivalent("4.4 = 5.5","5.5 = 4.4");
  assertEquivalent("'foo' = 'bar'","'bar' = 'foo'");
  assertEquivalent("4 <> 5","5 <> 4");
  assertEquivalent("4 is distinct from 5","5 is distinct from 4");
  assertEquivalent("4 < 5","5 > 4");
  assertEquivalent("4 <= 5","5 >= 4");
  assertEquivalent("mod(4, 5)","mod(4, 5)");
  assertEquivalent("a_bigint","a_bigint");
  assertEquivalent("a_bigint = b_bigint","b_bigint = a_bigint");
  assertEquivalent("a_bigint < b_bigint","b_bigint > a_bigint");
  assertEquivalent("a_bigint < b_double","b_double > a_bigint");
  assertEquivalent("true and false","false and true");
  assertEquivalent("4 <= 5 and 6 < 7","7 > 6 and 5 >= 4");
  assertEquivalent("4 <= 5 or 6 < 7","7 > 6 or 5 >= 4");
  assertEquivalent("a_bigint <= b_bigint and c_bigint < d_bigint","d_bigint > c_bigint and b_bigint >= a_bigint");
  assertEquivalent("a_bigint <= b_bigint or c_bigint < d_bigint","d_bigint > c_bigint or b_bigint >= a_bigint");
  assertEquivalent("4 <= 5 and 4 <= 5","4 <= 5");
  assertEquivalent("4 <= 5 and 6 < 7","7 > 6 and 5 >= 4 and 5 >= 4");
  assertEquivalent("2 <= 3 and 4 <= 5 and 6 < 7","7 > 6 and 5 >= 4 and 3 >= 2");
  assertEquivalent("4 <= 5 or 4 <= 5","4 <= 5");
  assertEquivalent("4 <= 5 or 6 < 7","7 > 6 or 5 >= 4 or 5 >= 4");
  assertEquivalent("2 <= 3 or 4 <= 5 or 6 < 7","7 > 6 or 5 >= 4 or 3 >= 2");
  assertEquivalent("a_boolean and b_boolean and c_boolean","c_boolean and b_boolean and a_boolean");
  assertEquivalent("(a_boolean and b_boolean) and c_boolean","(c_boolean and b_boolean) and a_boolean");
  assertEquivalent("a_boolean and (b_boolean or c_boolean)","a_boolean and (c_boolean or b_boolean) and a_boolean");
  assertEquivalent("(a_boolean or b_boolean or c_boolean) and (d_boolean or e_boolean) and (f_boolean or g_boolean or h_boolean)","(h_boolean or g_boolean or f_boolean) and (b_boolean or a_boolean or c_boolean) and (e_boolean or d_boolean)");
  assertEquivalent("(a_boolean and b_boolean and c_boolean) or (d_boolean and e_boolean) or (f_boolean and g_boolean and h_boolean)","(h_boolean and g_boolean and f_boolean) or (b_boolean and a_boolean and c_boolean) or (e_boolean and d_boolean)");
}
