{
  QualifiedTableName tableName=extractQualifiedTableName(catalogName,filters);
  InternalTable.Builder table=InternalTable.builder(InformationSchemaMetadata.informationSchemaTableColumns(InformationSchemaMetadata.TABLE_INTERNAL_PARTITIONS));
  int partitionNumber=1;
  Optional<TableHandle> tableHandle=metadata.getTableHandle(tableName);
  checkArgument(tableHandle.isPresent(),"Table %s does not exist",tableName);
  Map<ColumnHandle,String> columnHandles=ImmutableBiMap.copyOf(metadata.getColumnHandles(tableHandle.get())).inverse();
  PartitionResult partitionResult=splitManager.getPartitions(tableHandle.get(),Optional.<TupleDomain>absent());
  for (  Partition partition : partitionResult.getPartitions()) {
    for (    Entry<ColumnHandle,Comparable<?>> entry : partition.getTupleDomain().extractFixedValues().entrySet()) {
      ColumnHandle columnHandle=entry.getKey();
      String columnName=columnHandles.get(columnHandle);
      String value=entry.getValue() != null ? String.valueOf(entry.getValue()) : null;
      table.add(table.getTupleInfo().builder().append(catalogName).append(tableName.getSchemaName()).append(tableName.getTableName()).append(partitionNumber).append(columnName).append(value).build());
    }
    partitionNumber++;
  }
  return table.build();
}
