{
  checkNotNull(split,"split is null");
  checkArgument(split instanceof InformationSchemaSplit,"Split must be of type %s, not %s",InformationSchemaSplit.class.getName(),split.getClass().getName());
  checkNotNull(columns,"columns is null");
  checkArgument(!columns.isEmpty(),"must provide at least one column");
  InformationSchemaTableHandle handle=((InformationSchemaSplit)split).getTableHandle();
  Map<String,Object> filters=((InformationSchemaSplit)split).getFilters();
  InternalTable table=getInformationSchemaTable(handle.getCatalogName(),handle.getSchemaTableName(),filters);
  ImmutableList.Builder<BlockIterable> list=ImmutableList.builder();
  for (  ColumnHandle column : columns) {
    checkArgument(column instanceof InformationSchemaColumnHandle,"column must be of type %s, not %s",InformationSchemaColumnHandle.class.getName(),column.getClass().getName());
    InformationSchemaColumnHandle internalColumn=(InformationSchemaColumnHandle)column;
    list.add(table.getColumn(internalColumn.getColumnName()));
  }
  ImmutableList<BlockIterable> channels=list.build();
  return new AlignmentOperator(channels);
}
