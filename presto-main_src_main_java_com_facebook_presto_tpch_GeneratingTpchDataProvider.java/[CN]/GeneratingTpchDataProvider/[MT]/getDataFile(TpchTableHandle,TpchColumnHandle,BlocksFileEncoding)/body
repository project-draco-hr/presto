{
  checkNotNull(tableHandle,"tableHandle is null");
  checkNotNull(columnHandle,"columnHandle is null");
  checkNotNull(encoding,"encoding is null");
  String tableName=tableHandle.getTableName();
  try {
    String hash=ByteStreams.hash(ByteStreams.slice(tableInputSupplierFactory.getInputSupplier(tableName),0,1024 * 1024),Hashing.murmur3_32()).toString();
    File cachedFile=new File(new File(cacheDirectory,tableName + "-" + hash),"new-" + createFileName(columnHandle,encoding));
    if (cachedFile.exists()) {
      return cachedFile;
    }
    Files.createParentDirs(cachedFile);
    InputSupplier<InputStream> inputSupplier=tableInputSupplierFactory.getInputSupplier(tableName);
    DelimitedRecordSet records=new DelimitedRecordSet(newReaderSupplier(inputSupplier,UTF_8),Splitter.on("|"),columnHandle.getFieldIndex());
    RecordProjectOperator source=new RecordProjectOperator(records);
    ImportingOperator.importData(source,new BlocksFileWriter(encoding,newOutputStreamSupplier(cachedFile)));
    return cachedFile;
  }
 catch (  IOException e) {
    throw Throwables.propagate(e);
  }
}
