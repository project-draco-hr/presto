{
  SharedBuffer sharedBuffer=new SharedBuffer(sizeOfPages(10));
  for (int i=0; i < 3; i++) {
    assertTrue(sharedBuffer.offer(createPage(i)));
  }
  sharedBuffer.addQueue("first");
  assertQueueState(sharedBuffer,"first",3,0);
  assertBufferResultEquals(sharedBuffer.get("first",0,sizeOfPages(10),NO_WAIT),bufferResult(0,createPage(0),createPage(1),createPage(2)));
  assertQueueState(sharedBuffer,"first",3,0);
  assertBufferResultEquals(sharedBuffer.get("first",0,sizeOfPages(10),NO_WAIT),bufferResult(0,createPage(0),createPage(1),createPage(2)));
  assertQueueState(sharedBuffer,"first",3,0);
  sharedBuffer.acknowledge("first",3);
  assertBufferResultEquals(sharedBuffer.get("first",0,sizeOfPages(10),NO_WAIT),emptyResults(3,false));
  assertQueueState(sharedBuffer,"first",0,3);
}
