{
  SharedBuffer<Integer> sharedBuffer=new SharedBuffer<>(10);
  for (int i=0; i < 10; i++) {
    assertTrue(sharedBuffer.offer(i));
  }
  sharedBuffer.finish();
  sharedBuffer.addQueue("first");
  assertEquals(sharedBuffer.get("first",1,NO_WAIT),ImmutableList.of(0));
  sharedBuffer.abort("first");
  assertQueueClosed(sharedBuffer,"first");
  assertEquals(sharedBuffer.get("first",1,NO_WAIT),ImmutableList.of());
  sharedBuffer.addQueue("second");
  sharedBuffer.noMoreQueues();
  assertEquals(sharedBuffer.get("second",1,NO_WAIT),ImmutableList.of(0));
  sharedBuffer.abort("second");
  assertQueueClosed(sharedBuffer,"second");
  assertFinished(sharedBuffer);
  assertEquals(sharedBuffer.get("second",1,NO_WAIT),ImmutableList.of());
}
