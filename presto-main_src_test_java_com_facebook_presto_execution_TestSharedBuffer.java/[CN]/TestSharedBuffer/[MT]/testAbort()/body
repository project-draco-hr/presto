{
  SharedBuffer sharedBuffer=new SharedBuffer(sizeOfPages(10),new OutputBuffers(0,false));
  for (int i=0; i < 10; i++) {
    addPage(sharedBuffer,createPage(i));
  }
  sharedBuffer.finish();
  sharedBuffer.setOutputBuffers(new OutputBuffers(1,false,"first"));
  assertBufferResultEquals(sharedBuffer.get("first",0,sizeOfPages(1),NO_WAIT),bufferResult(0,createPage(0)));
  sharedBuffer.abort("first");
  assertQueueClosed(sharedBuffer,"first",0);
  assertBufferResultEquals(sharedBuffer.get("first",1,sizeOfPages(1),NO_WAIT),emptyResults(1,true));
  sharedBuffer.setOutputBuffers(new OutputBuffers(2,true,"first","second"));
  assertBufferResultEquals(sharedBuffer.get("second",0,sizeOfPages(1),NO_WAIT),bufferResult(0,createPage(0)));
  sharedBuffer.abort("second");
  assertQueueClosed(sharedBuffer,"second",0);
  assertFinished(sharedBuffer);
  assertBufferResultEquals(sharedBuffer.get("second",1,sizeOfPages(1),NO_WAIT),emptyResults(0,true));
}
