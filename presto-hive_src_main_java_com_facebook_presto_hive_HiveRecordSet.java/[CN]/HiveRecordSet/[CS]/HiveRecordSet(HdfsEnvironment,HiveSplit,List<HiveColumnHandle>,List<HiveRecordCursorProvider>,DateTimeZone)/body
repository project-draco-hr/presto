{
  this.split=checkNotNull(split,"split is null");
  this.columns=ImmutableList.copyOf(checkNotNull(columns,"columns is null"));
  this.columnTypes=ImmutableList.copyOf(Iterables.transform(columns,nativeTypeGetter()));
  this.cursorProviders=ImmutableList.copyOf(checkNotNull(cursorProviders,"cursor providers is null"));
  this.timeZone=checkNotNull(timeZone,"timeZone is null");
  List<HiveColumnHandle> readColumns=ImmutableList.copyOf(filter(columns,not(isPartitionKeyPredicate())));
  if (readColumns.isEmpty()) {
    HiveColumnHandle primitiveColumn=getFirstPrimitiveColumn(split.getClientId(),split.getSchema());
    readColumns=ImmutableList.of(primitiveColumn);
  }
  readHiveColumnIndexes=new ArrayList<>(transform(readColumns,hiveColumnIndexGetter()));
  this.path=new Path(split.getPath());
  this.configuration=hdfsEnvironment.getConfiguration(path);
  String nullSequence=split.getSchema().getProperty(SERIALIZATION_NULL_FORMAT);
  checkState(nullSequence == null || nullSequence.equals("\\N"),"Only '\\N' supported as null specifier, was '%s'",nullSequence);
}
