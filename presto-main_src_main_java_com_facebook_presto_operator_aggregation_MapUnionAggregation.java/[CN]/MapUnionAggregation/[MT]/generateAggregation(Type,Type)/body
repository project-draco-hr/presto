{
  DynamicClassLoader classLoader=new DynamicClassLoader(MapUnionAggregation.class.getClassLoader());
  Type outputType=new MapType(keyType,valueType);
  List<Type> inputTypes=ImmutableList.of(outputType);
  KeyValuePairStateSerializer stateSerializer=new KeyValuePairStateSerializer(keyType,valueType,false);
  Type intermediateType=stateSerializer.getSerializedType();
  AggregationMetadata metadata=new AggregationMetadata(generateAggregationName(NAME,outputType,inputTypes),createInputParameterMetadata(outputType),INPUT_FUNCTION.bindTo(keyType).bindTo(valueType),null,null,COMBINE_FUNCTION,OUTPUT_FUNCTION,KeyValuePairsState.class,stateSerializer,new KeyValuePairsStateFactory(keyType,valueType),outputType,false);
  GenericAccumulatorFactoryBinder factory=new AccumulatorCompiler().generateAccumulatorFactoryBinder(metadata,classLoader);
  return new InternalAggregationFunction(NAME,inputTypes,intermediateType,outputType,true,false,factory);
}
