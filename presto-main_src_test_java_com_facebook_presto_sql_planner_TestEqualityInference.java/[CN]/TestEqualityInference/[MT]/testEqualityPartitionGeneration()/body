{
  EqualityInference.Builder builder=new EqualityInference.Builder();
  builder.addEquality(nameReference("a1"),nameReference("b1"));
  builder.addEquality(add("a1","a1"),multiply(nameReference("a1"),number(2)));
  builder.addEquality(nameReference("b1"),nameReference("c1"));
  builder.addEquality(add("a1","a1"),nameReference("c1"));
  builder.addEquality(add("a1","b1"),nameReference("c1"));
  EqualityInference inference=builder.build();
  EqualityInference.EqualityPartition emptyScopePartition=inference.generateEqualitiesPartitionedBy(Predicates.<Symbol>alwaysFalse());
  assertTrue(emptyScopePartition.getScopeEqualities().isEmpty());
  assertFalse(emptyScopePartition.getScopeComplementEqualities().isEmpty());
  assertTrue(emptyScopePartition.getScopeStraddlingEqualities().isEmpty());
  EqualityInference.EqualityPartition equalityPartition=inference.generateEqualitiesPartitionedBy(matchesSymbols("c1"));
  assertFalse(equalityPartition.getScopeEqualities().isEmpty());
  assertTrue(Iterables.all(equalityPartition.getScopeEqualities(),matchesSymbolScope(matchesSymbols("c1"))));
  assertTrue(Iterables.all(equalityPartition.getScopeEqualities(),EqualityInference.isInferenceCandidate()));
  assertFalse(equalityPartition.getScopeComplementEqualities().isEmpty());
  assertTrue(Iterables.all(equalityPartition.getScopeComplementEqualities(),matchesSymbolScope(not(matchesSymbols("c1")))));
  assertTrue(Iterables.all(equalityPartition.getScopeComplementEqualities(),EqualityInference.isInferenceCandidate()));
  assertFalse(equalityPartition.getScopeStraddlingEqualities().isEmpty());
  assertTrue(Iterables.any(equalityPartition.getScopeStraddlingEqualities(),matchesStraddlingScope(matchesSymbols("c1"))));
  assertTrue(Iterables.all(equalityPartition.getScopeStraddlingEqualities(),EqualityInference.isInferenceCandidate()));
  EqualityInference newInference=new EqualityInference.Builder().addAllEqualities(equalityPartition.getScopeEqualities()).addAllEqualities(equalityPartition.getScopeComplementEqualities()).addAllEqualities(equalityPartition.getScopeStraddlingEqualities()).build();
  EqualityInference.EqualityPartition newEqualityPartition=newInference.generateEqualitiesPartitionedBy(matchesSymbols("c1"));
  assertEquals(setCopy(equalityPartition.getScopeEqualities()),setCopy(newEqualityPartition.getScopeEqualities()));
  assertEquals(setCopy(equalityPartition.getScopeComplementEqualities()),setCopy(newEqualityPartition.getScopeComplementEqualities()));
  assertEquals(setCopy(equalityPartition.getScopeStraddlingEqualities()),setCopy(newEqualityPartition.getScopeStraddlingEqualities()));
}
