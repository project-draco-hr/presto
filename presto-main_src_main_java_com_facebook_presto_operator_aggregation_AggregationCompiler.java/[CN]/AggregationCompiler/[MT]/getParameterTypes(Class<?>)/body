{
  Method inputFunction=CompilerUtils.findPublicStaticMethodWithAnnotation(clazz,InputFunction.class);
  ImmutableList.Builder<Type> builder=ImmutableList.builder();
  Annotation[][] annotations=inputFunction.getParameterAnnotations();
  Class<?>[] parameters=inputFunction.getParameterTypes();
  for (int i=0; i < parameters.length; i++) {
    Class<?> parameter=parameters[i];
    for (    Annotation annotation : annotations[i]) {
      if (annotation instanceof SqlType) {
        checkArgument(AccumulatorCompiler.SUPPORTED_PARAMETER_TYPES.contains(parameter),"Unsupported type %s",parameter.getSimpleName());
        builder.add(getTypeInstance(((SqlType)annotation).value()));
      }
    }
  }
  ImmutableList<Type> types=builder.build();
  checkArgument(!types.isEmpty(),"Aggregation has no input parameters");
  return types;
}
