{
  ImmutableList<Method> methods=FluentIterable.from(CompilerUtils.findPublicStaticMethodsWithAnnotation(clazz,OutputFunction.class)).filter(new Predicate<Method>(){
    @Override public boolean apply(    Method method){
      return method.getParameterTypes()[0] == stateClass;
    }
  }
).toList();
  if (methods.isEmpty()) {
    List<Method> noOutputFunction=new ArrayList<>();
    noOutputFunction.add(null);
    return noOutputFunction;
  }
  return methods;
}
