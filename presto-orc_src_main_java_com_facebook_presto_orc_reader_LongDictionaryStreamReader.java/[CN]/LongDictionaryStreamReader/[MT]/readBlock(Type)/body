{
  if (!rowGroupOpen) {
    openRowGroup();
  }
  if (readOffset > 0) {
    if (presentStream != null) {
      readOffset=presentStream.countBitsSet(readOffset);
    }
    if (inDictionaryStream != null) {
      inDictionaryStream.skip(readOffset);
    }
    if (readOffset > 0) {
      if (dataStream == null) {
        throw new OrcCorruptionException("Value is not null but data stream is not present");
      }
      dataStream.skip(readOffset);
    }
  }
  if (nullVector.length < nextBatchSize) {
    nullVector=new boolean[nextBatchSize];
  }
  if (dataVector.length < nextBatchSize) {
    dataVector=new long[nextBatchSize];
  }
  if (presentStream == null) {
    if (dataStream == null) {
      throw new OrcCorruptionException("Value is not null but data stream is not present");
    }
    Arrays.fill(nullVector,false);
    dataStream.nextLongVector(nextBatchSize,dataVector);
  }
 else {
    int nullValues=presentStream.getUnsetBits(nextBatchSize,nullVector);
    if (nullValues != nextBatchSize) {
      if (dataStream == null) {
        throw new OrcCorruptionException("Value is not null but data stream is not present");
      }
      dataStream.nextLongVector(nextBatchSize,dataVector,nullVector);
    }
  }
  if (inDictionary.length < nextBatchSize) {
    inDictionary=new boolean[nextBatchSize];
  }
  if (inDictionaryStream == null) {
    Arrays.fill(inDictionary,true);
  }
 else {
    inDictionaryStream.getSetBits(nextBatchSize,inDictionary,nullVector);
  }
  BlockBuilder builder=type.createBlockBuilder(new BlockBuilderStatus(),nextBatchSize);
  for (int i=0; i < nextBatchSize; i++) {
    if (nullVector[i]) {
      builder.appendNull();
    }
 else     if (inDictionary[i]) {
      type.writeLong(builder,dictionary[((int)dataVector[i])]);
    }
 else {
      type.writeLong(builder,dataVector[i]);
    }
  }
  readOffset=0;
  nextBatchSize=0;
  return builder.build();
}
