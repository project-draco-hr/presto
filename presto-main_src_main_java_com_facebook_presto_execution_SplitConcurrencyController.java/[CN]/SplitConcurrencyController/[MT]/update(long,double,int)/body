{
  checkArgument(nanos >= 0,"nanos is negative");
  checkArgument(isFinite(utilization),"utilization must be finite");
  checkArgument(utilization >= 0,"utilization is negative");
  checkArgument(currentConcurrency >= 0,"currentConcurrency is negative");
  threadNanosSinceLastAdjustment+=nanos;
  if (threadNanosSinceLastAdjustment >= adjustmentIntervalNanos && utilization < TARGET_UTILIZATION && currentConcurrency >= targetConcurrency) {
    threadNanosSinceLastAdjustment=0;
    targetConcurrency++;
  }
}
