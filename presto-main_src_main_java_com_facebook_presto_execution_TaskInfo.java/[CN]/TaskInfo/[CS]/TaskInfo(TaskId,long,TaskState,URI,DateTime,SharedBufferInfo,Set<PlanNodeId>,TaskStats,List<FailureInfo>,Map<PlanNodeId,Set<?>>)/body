{
  this.taskId=checkNotNull(taskId,"taskId is null");
  this.version=checkNotNull(version,"version is null");
  this.state=checkNotNull(state,"state is null");
  this.self=checkNotNull(self,"self is null");
  this.lastHeartbeat=checkNotNull(lastHeartbeat,"lastHeartbeat is null");
  this.outputBuffers=checkNotNull(outputBuffers,"outputBuffers is null");
  this.noMoreSplits=checkNotNull(noMoreSplits,"noMoreSplits is null");
  this.stats=checkNotNull(stats,"stats is null");
  if (failures != null) {
    this.failures=ImmutableList.copyOf(failures);
  }
 else {
    this.failures=ImmutableList.of();
  }
  checkNotNull(outputs,"outputs is null");
  this.outputs=ImmutableMap.copyOf(Maps.transformValues(outputs,new Function<Set<?>,Set<?>>(){
    @Override public Set<?> apply(    Set<?> input){
      return ImmutableSet.copyOf(input);
    }
  }
));
}
