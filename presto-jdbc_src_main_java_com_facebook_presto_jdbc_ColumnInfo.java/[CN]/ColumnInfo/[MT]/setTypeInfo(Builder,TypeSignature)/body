{
  builder.setColumnType(getType(type));
  ImmutableList.Builder<Integer> parameterTypes=ImmutableList.builder();
  for (  TypeSignatureParameter parameter : type.getParameters()) {
    parameterTypes.add(getType(parameter));
  }
  builder.setColumnParameterTypes(parameterTypes.build());
switch (type.toString()) {
case "boolean":
    builder.setColumnDisplaySize(5);
  break;
case "bigint":
builder.setSigned(true);
builder.setPrecision(19);
builder.setScale(0);
builder.setColumnDisplaySize(20);
break;
case "double":
builder.setSigned(true);
builder.setPrecision(17);
builder.setScale(0);
builder.setColumnDisplaySize(24);
break;
case "varchar":
builder.setSigned(true);
builder.setPrecision(VARCHAR_MAX);
builder.setScale(0);
builder.setColumnDisplaySize(VARCHAR_MAX);
break;
case "varbinary":
builder.setSigned(true);
builder.setPrecision(VARBINARY_MAX);
builder.setScale(0);
builder.setColumnDisplaySize(VARBINARY_MAX);
break;
case "time":
builder.setSigned(true);
builder.setPrecision(3);
builder.setScale(0);
builder.setColumnDisplaySize(TIME_MAX);
break;
case "time with time zone":
builder.setSigned(true);
builder.setPrecision(3);
builder.setScale(0);
builder.setColumnDisplaySize(TIME_WITH_TIME_ZONE_MAX);
break;
case "timestamp":
builder.setSigned(true);
builder.setPrecision(3);
builder.setScale(0);
builder.setColumnDisplaySize(TIMESTAMP_MAX);
break;
case "timestamp with time zone":
builder.setSigned(true);
builder.setPrecision(3);
builder.setScale(0);
builder.setColumnDisplaySize(TIMESTAMP_WITH_TIME_ZONE_MAX);
break;
case "date":
builder.setSigned(true);
builder.setScale(0);
builder.setColumnDisplaySize(DATE_MAX);
break;
case "interval year to month":
builder.setColumnDisplaySize(TIMESTAMP_MAX);
break;
case "interval day to second":
builder.setColumnDisplaySize(TIMESTAMP_MAX);
break;
case "decimal":
builder.setSigned(true);
builder.setColumnDisplaySize(type.getParameters().get(0).getLongLiteral().intValue() + 2);
builder.setPrecision(type.getParameters().get(0).getLongLiteral().intValue());
builder.setScale(type.getParameters().get(1).getLongLiteral().intValue());
break;
}
}
