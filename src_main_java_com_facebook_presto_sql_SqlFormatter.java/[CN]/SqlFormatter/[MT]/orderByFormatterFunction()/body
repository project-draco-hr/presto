{
  return new Function<SortItem,String>(){
    @Override public String apply(    SortItem input){
      StringBuilder builder=new StringBuilder();
      builder.append(ExpressionFormatter.toString(input.getSortKey())).append(' ');
switch (input.getOrdering()) {
case ASCENDING:
        builder.append("ASC");
      break;
case DESCENDING:
    builder.append("DESC");
  break;
default :
throw new UnsupportedOperationException("unknown ordering: " + input.getOrdering());
}
switch (input.getNullOrdering()) {
case FIRST:
builder.append(" NULLS FIRST");
break;
case LAST:
builder.append(" NULLS LAST");
break;
case UNDEFINED:
break;
default :
throw new UnsupportedOperationException("unknown null ordering: " + input.getNullOrdering());
}
return builder.toString();
}
}
;
}
