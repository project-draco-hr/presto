{
  LocalExchange exchange=new LocalExchange(fixedRandomPartitioning(2),TYPES,ImmutableList.of(),Optional.empty());
  assertEquals(exchange.getBufferCount(),2);
  assertExchangeTotalBufferedBytes(exchange,0);
  LocalExchangeSinkFactory sinkFactory=exchange.createSinkFactory();
  LocalExchangeSink sink=sinkFactory.createSink();
  assertSinkCanWrite(sink);
  sinkFactory.close();
  sinkFactory.noMoreSinkFactories();
  LocalExchangeSource sourceA=exchange.getSource(0);
  assertSource(sourceA,0);
  LocalExchangeSource sourceB=exchange.getSource(1);
  assertSource(sourceB,0);
  for (int i=0; i < 100; i++) {
    Page page=createPage(0);
    sink.addPage(page);
    assertExchangeTotalBufferedBytes(exchange,i + 1);
    LocalExchangeBufferInfo bufferInfoA=sourceA.getBufferInfo();
    LocalExchangeBufferInfo bufferInfoB=sourceB.getBufferInfo();
    assertEquals(bufferInfoA.getBufferedBytes() + bufferInfoB.getBufferedBytes(),retainedSizeOfPages(i + 1));
    assertEquals(bufferInfoA.getBufferedPages() + bufferInfoB.getBufferedPages(),i + 1);
  }
  assertTrue(sourceA.getBufferInfo().getBufferedPages() > 0);
  assertTrue(sourceB.getBufferInfo().getBufferedPages() > 0);
  assertExchangeTotalBufferedBytes(exchange,100);
}
