{
  String signature=null;
  if (superClass.isGeneric() || any(interfaces,ParameterizedType.isGenericType())) {
    signature=genericClassSignature(superClass,interfaces);
  }
  String[] interfaces=new String[this.interfaces.size()];
  for (int i=0; i < interfaces.length; i++) {
    interfaces[i]=this.interfaces.get(i).getClassName();
  }
  visitor.visit(V1_7,toAccessModifier(access) | ACC_SUPER,type.getClassName(),signature,superClass.getClassName(),interfaces);
  if (source != null) {
    visitor.visitSource(source,debug);
  }
  for (  AnnotationDefinition annotation : annotations) {
    annotation.visitClassAnnotation(visitor);
  }
  for (  FieldDefinition field : fields) {
    field.visit(visitor);
  }
  classInitializer.visit(visitor,true);
  for (  MethodDefinition method : methods) {
    method.visit(visitor);
  }
  visitor.visitEnd();
}
