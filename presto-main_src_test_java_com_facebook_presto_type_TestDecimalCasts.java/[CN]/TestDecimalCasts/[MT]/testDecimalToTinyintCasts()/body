{
  assertFunction("CAST(DECIMAL '2.34' AS TINYINT)",TINYINT,(byte)2);
  assertFunction("CAST(DECIMAL '2.5' AS TINYINT)",TINYINT,(byte)3);
  assertFunction("CAST(DECIMAL '2.49' AS TINYINT)",TINYINT,(byte)2);
  assertFunction("CAST(DECIMAL '20' AS TINYINT)",TINYINT,(byte)20);
  assertFunction("CAST(DECIMAL '1' AS TINYINT)",TINYINT,(byte)1);
  assertFunction("CAST(DECIMAL '0' AS TINYINT)",TINYINT,(byte)0);
  assertFunction("CAST(DECIMAL '-20' AS TINYINT)",TINYINT,(byte)-20);
  assertFunction("CAST(DECIMAL '-1' AS TINYINT)",TINYINT,(byte)-1);
  assertFunction("CAST(DECIMAL '-2.49' AS TINYINT)",TINYINT,(byte)-2);
  assertFunction("CAST(DECIMAL '-2.5' AS TINYINT)",TINYINT,(byte)-3);
  assertFunction("CAST(DECIMAL '0.1234567890123456' AS TINYINT)",TINYINT,(byte)0);
  assertFunction("CAST(DECIMAL '0.9999999999999999' AS TINYINT)",TINYINT,(byte)1);
  assertFunction("CAST(DECIMAL '0.00000000000000000000' AS TINYINT)",TINYINT,(byte)0);
  assertFunction("CAST(DECIMAL '0.99999999999999999999' AS TINYINT)",TINYINT,(byte)1);
  assertFunction("CAST(DECIMAL '12.1234567890' AS TINYINT)",TINYINT,(byte)12);
  assertFunction("CAST(DECIMAL '-12.1234567890' AS TINYINT)",TINYINT,(byte)-12);
  assertInvalidCast("CAST(DECIMAL '12345678901234567890' AS TINYINT)","Cannot cast '12345678901234567890' to TINYINT");
}
