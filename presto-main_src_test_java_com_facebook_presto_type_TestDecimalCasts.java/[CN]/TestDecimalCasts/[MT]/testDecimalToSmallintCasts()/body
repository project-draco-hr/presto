{
  assertFunction("CAST(DECIMAL '2.34' AS SMALLINT)",SMALLINT,(short)2);
  assertFunction("CAST(DECIMAL '2.5' AS SMALLINT)",SMALLINT,(short)3);
  assertFunction("CAST(DECIMAL '2.49' AS SMALLINT)",SMALLINT,(short)2);
  assertFunction("CAST(DECIMAL '20' AS SMALLINT)",SMALLINT,(short)20);
  assertFunction("CAST(DECIMAL '1' AS SMALLINT)",SMALLINT,(short)1);
  assertFunction("CAST(DECIMAL '0' AS SMALLINT)",SMALLINT,(short)0);
  assertFunction("CAST(DECIMAL '-20' AS SMALLINT)",SMALLINT,(short)-20);
  assertFunction("CAST(DECIMAL '-1' AS SMALLINT)",SMALLINT,(short)-1);
  assertFunction("CAST(DECIMAL '-2.49' AS SMALLINT)",SMALLINT,(short)-2);
  assertFunction("CAST(DECIMAL '-2.5' AS SMALLINT)",SMALLINT,(short)-3);
  assertFunction("CAST(DECIMAL '0.1234567890123456' AS SMALLINT)",SMALLINT,(short)0);
  assertFunction("CAST(DECIMAL '0.9999999999999999' AS SMALLINT)",SMALLINT,(short)1);
  assertFunction("CAST(DECIMAL '0.00000000000000000000' AS SMALLINT)",SMALLINT,(short)0);
  assertFunction("CAST(DECIMAL '0.99999999999999999999' AS SMALLINT)",SMALLINT,(short)1);
  assertFunction("CAST(DECIMAL '1234.1234567890' AS SMALLINT)",SMALLINT,(short)1234);
  assertFunction("CAST(DECIMAL '-1234.1234567890' AS SMALLINT)",SMALLINT,(short)-1234);
  assertInvalidCast("CAST(DECIMAL '12345678901234567890' AS SMALLINT)","Cannot cast '12345678901234567890' to SMALLINT");
}
