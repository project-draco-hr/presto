{
  assertDecimalFunction("CAST(TINYINT '23' AS DECIMAL(4,1))",decimal("023.0"));
  assertDecimalFunction("CAST(TINYINT '23' AS DECIMAL(5,2))",decimal("023.00"));
  assertDecimalFunction("CAST(TINYINT '23' AS DECIMAL(4,0))",decimal("0023"));
  assertDecimalFunction("CAST(TINYINT '-23' AS DECIMAL(4,1))",decimal("-023.0"));
  assertDecimalFunction("CAST(TINYINT '0' AS DECIMAL(4,2))",decimal("00.00"));
  assertDecimalFunction("CAST(TINYINT '123' AS DECIMAL(20, 10))",decimal("0000000123.0000000000"));
  assertDecimalFunction("CAST(TINYINT '-123' AS DECIMAL(20, 10))",decimal("-0000000123.0000000000"));
  assertDecimalFunction("CAST(TINYINT '123' AS DECIMAL(30, 20))",decimal("0000000123.00000000000000000000"));
  assertDecimalFunction("CAST(TINYINT '-123' AS DECIMAL(30, 20))",decimal("-0000000123.00000000000000000000"));
  assertInvalidCast("CAST(TINYINT '10' AS DECIMAL(38,37))","Cannot cast TINYINT '10' to DECIMAL(38, 37)");
  assertInvalidCast("CAST(TINYINT '123' AS DECIMAL(17,15))","Cannot cast TINYINT '123' to DECIMAL(17, 15)");
  assertInvalidCast("CAST(TINYINT '123' AS DECIMAL(2,1))","Cannot cast TINYINT '123' to DECIMAL(2, 1)");
  assertInvalidCast("CAST(TINYINT '-123' AS DECIMAL(2,1))","Cannot cast TINYINT '-123' to DECIMAL(2, 1)");
}
