{
  assertFunction("CAST(DECIMAL '2.34' AS INTEGER)",INTEGER,2);
  assertFunction("CAST(DECIMAL '2.5' AS INTEGER)",INTEGER,3);
  assertFunction("CAST(DECIMAL '2.49' AS INTEGER)",INTEGER,2);
  assertFunction("CAST(DECIMAL '20' AS INTEGER)",INTEGER,20);
  assertFunction("CAST(DECIMAL '1' AS INTEGER)",INTEGER,1);
  assertFunction("CAST(DECIMAL '0' AS INTEGER)",INTEGER,0);
  assertFunction("CAST(DECIMAL '-20' AS INTEGER)",INTEGER,-20);
  assertFunction("CAST(DECIMAL '-1' AS INTEGER)",INTEGER,-1);
  assertFunction("CAST(DECIMAL '-2.49' AS INTEGER)",INTEGER,-2);
  assertFunction("CAST(DECIMAL '-2.5' AS INTEGER)",INTEGER,-3);
  assertFunction("CAST(DECIMAL '0.1234567890123456' AS INTEGER)",INTEGER,0);
  assertFunction("CAST(DECIMAL '0.9999999999999999' AS INTEGER)",INTEGER,1);
  assertFunction("CAST(DECIMAL '0.00000000000000000000' AS INTEGER)",INTEGER,0);
  assertFunction("CAST(DECIMAL '0.99999999999999999999' AS INTEGER)",INTEGER,1);
  assertFunction("CAST(DECIMAL '1234567890.1234567890' AS INTEGER)",INTEGER,1234567890);
  assertFunction("CAST(DECIMAL '-1234567890.1234567890' AS INTEGER)",INTEGER,-1234567890);
  assertInvalidCast("CAST(DECIMAL '12345678901234567890' AS INTEGER)","Cannot cast '12345678901234567890' to INTEGER");
}
