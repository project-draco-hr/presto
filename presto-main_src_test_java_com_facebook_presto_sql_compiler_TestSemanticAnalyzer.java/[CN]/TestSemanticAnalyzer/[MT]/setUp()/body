{
  Map<QualifiedName,TableMetadata> tables=ImmutableMap.<QualifiedName,TableMetadata>builder().put(QualifiedName.of("T"),new TableMetadata(QualifiedName.of("T"),ImmutableList.of(new ColumnMetadata(TupleInfo.Type.FIXED_INT_64,"id"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"value"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"title"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"description")))).put(QualifiedName.of("S"),new TableMetadata(QualifiedName.of("S"),ImmutableList.of(new ColumnMetadata(TupleInfo.Type.FIXED_INT_64,"s_id"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"name"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"value")))).put(QualifiedName.of("A","B"),new TableMetadata(QualifiedName.of("A","B"),ImmutableList.of(new ColumnMetadata(TupleInfo.Type.FIXED_INT_64,"a_b_id"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"name"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"value")))).build();
  Map<QualifiedName,FunctionInfo> functions=ImmutableMap.<QualifiedName,FunctionInfo>builder().put(QualifiedName.of("COUNT"),new FunctionInfo(true,CountAggregation.PROVIDER)).put(QualifiedName.of("SUM"),new FunctionInfo(true,LongSumAggregation.PROVIDER)).put(QualifiedName.of("AVG"),new FunctionInfo(true,AverageAggregation.PROVIDER)).build();
  metadata=new Metadata(tables,functions);
}
