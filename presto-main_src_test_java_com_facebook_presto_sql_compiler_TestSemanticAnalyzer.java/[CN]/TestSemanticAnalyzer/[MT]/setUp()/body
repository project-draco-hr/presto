{
  List<TableMetadata> tables=ImmutableList.<TableMetadata>builder().add(new TableMetadata("default","default","T",ImmutableList.of(new ColumnMetadata(TupleInfo.Type.FIXED_INT_64,"id"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"value"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"title"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"description")))).add(new TableMetadata("default","default","S",ImmutableList.of(new ColumnMetadata(TupleInfo.Type.FIXED_INT_64,"s_id"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"name"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"value")))).add(new TableMetadata("default","A","B",ImmutableList.of(new ColumnMetadata(TupleInfo.Type.FIXED_INT_64,"a_b_id"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"name"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"value")))).build();
  Map<String,FunctionInfo> functions=ImmutableMap.<String,FunctionInfo>builder().put("COUNT",new FunctionInfo(true,CountAggregation.PROVIDER)).put("SUM",new FunctionInfo(true,LongSumAggregation.PROVIDER)).put("AVG",new FunctionInfo(true,AverageAggregation.PROVIDER)).build();
  metadata=new TestingMetadata(tables,functions);
}
