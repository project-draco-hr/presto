{
  channelCount=source.getChannelCount();
  indexes=new ChannelIndex[channelCount];
  List<TupleInfo> tupleInfos=source.getTupleInfos();
  for (int channel=0; channel < indexes.length; channel++) {
    indexes[channel]=new ChannelIndex(expectedPositions,tupleInfos.get(channel));
  }
  long maxIndexSizeBytes=maxIndexSize.toBytes();
  int positionCount=0;
  try (PageIterator pageIterator=source.iterator(operatorStats)){
    while (pageIterator.hasNext()) {
      Preconditions.checkState(getEstimatedSize().toBytes() <= maxIndexSizeBytes,"Query exceeded max operator memory size of %s",maxIndexSize.convertToMostSuccinctDataSize());
      Page page=pageIterator.next();
      positionCount+=page.getPositionCount();
      Block[] blocks=page.getBlocks();
      for (int channel=0; channel < indexes.length; channel++) {
        indexes[channel].indexBlock((UncompressedBlock)blocks[channel]);
      }
    }
  }
   this.positionCount=positionCount;
}
