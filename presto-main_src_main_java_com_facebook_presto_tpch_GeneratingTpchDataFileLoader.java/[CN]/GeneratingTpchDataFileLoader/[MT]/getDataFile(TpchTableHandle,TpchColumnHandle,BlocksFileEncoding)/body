{
  checkNotNull(tableHandle,"tableHandle is null");
  checkNotNull(columnHandle,"columnHandle is null");
  checkNotNull(encoding,"encoding is null");
  String tableName=tableHandle.getTableName();
  ExecutorService executor=Executors.newCachedThreadPool(Threads.daemonThreadsNamed("tpch-generate-%s"));
  try {
    String hash=ByteStreams.hash(ByteStreams.slice(tableInputSupplierFactory.getInputSupplier(tableName),0,1024 * 1024),Hashing.murmur3_32()).toString();
    File cachedFile=new File(new File(cacheDirectory,tableName + "-" + hash),"new-" + createFileName(columnHandle,encoding));
    if (cachedFile.exists()) {
      return cachedFile;
    }
    Files.createParentDirs(cachedFile);
    InputSupplier<InputStream> inputSupplier=tableInputSupplierFactory.getInputSupplier(tableName);
    ColumnMetadata columnMetadata=new TpchMetadata().getColumnMetadata(tableHandle,columnHandle);
    DelimitedRecordSet records=new DelimitedRecordSet(newReaderSupplier(inputSupplier,UTF_8),Splitter.on("|"),columnMetadata);
    Session session=new Session("user","source","catalog","schema","address","agent");
    OperatorContext operatorContext=new TaskContext(new TaskId("query","stage","task"),executor,session).addPipelineContext(true,true).addDriverContext().addOperatorContext(0,"tpch-generate");
    NewRecordProjectOperator source=new NewRecordProjectOperator(operatorContext,records);
    ColumnFileHandle columnFileHandle=ColumnFileHandle.builder(0).addColumn(columnHandle,cachedFile,encoding).build();
    while (!source.isFinished()) {
      Page page=source.getOutput();
      if (page != null) {
        columnFileHandle.append(page);
      }
    }
    columnFileHandle.commit();
    return cachedFile;
  }
 catch (  IOException e) {
    throw Throwables.propagate(e);
  }
 finally {
    executor.shutdownNow();
  }
}
