{
  checkArgument(!isNullOrEmpty(tableMetadata.getOwner()),"Table owner is null or empty");
  ImmutableList.Builder<String> columnNames=ImmutableList.builder();
  ImmutableList.Builder<Type> columnTypes=ImmutableList.builder();
  ImmutableList.Builder<ExtraColumnMetadata> columnExtra=ImmutableList.builder();
  columnExtra.add(new ExtraColumnMetadata("id",true));
  for (  ColumnMetadata column : tableMetadata.getColumns()) {
    columnNames.add(column.getName());
    columnTypes.add(column.getType());
    columnExtra.add(new ExtraColumnMetadata(column.getName(),column.isHidden()));
  }
  SchemaTableName table=tableMetadata.getTable();
  String schemaName=schemaProvider.getCaseSensitiveSchemaName(table.getSchemaName());
  String tableName=table.getTableName();
  List<String> columns=columnNames.build();
  List<Type> types=columnTypes.build();
  StringBuilder queryBuilder=new StringBuilder(String.format("CREATE TABLE \"%s\".\"%s\"(id uuid primary key",schemaName,tableName));
  if (tableMetadata.isSampled()) {
    queryBuilder.append(", ").append(SAMPLE_WEIGHT_COLUMN_NAME).append(" ").append(BIGINT.name().toLowerCase());
    columnExtra.add(new ExtraColumnMetadata(SAMPLE_WEIGHT_COLUMN_NAME,true));
  }
  for (int i=0; i < columns.size(); i++) {
    String name=columns.get(i);
    Type type=types.get(i);
    queryBuilder.append(", ").append(name).append(" ").append(toCassandraType(type).name().toLowerCase());
  }
  queryBuilder.append(") ");
  String columnMetadata=extraColumnMetadataCodec.toJson(columnExtra.build());
  queryBuilder.append("WITH comment='").append(CassandraSession.PRESTO_COMMENT_METADATA).append(" ").append(columnMetadata).append("'");
  cassandraSession.executeQuery(schemaName,queryBuilder.toString());
  return new CassandraOutputTableHandle(connectorId,schemaName,tableName,columnNames.build(),columnTypes.build(),tableMetadata.isSampled(),tableMetadata.getOwner());
}
