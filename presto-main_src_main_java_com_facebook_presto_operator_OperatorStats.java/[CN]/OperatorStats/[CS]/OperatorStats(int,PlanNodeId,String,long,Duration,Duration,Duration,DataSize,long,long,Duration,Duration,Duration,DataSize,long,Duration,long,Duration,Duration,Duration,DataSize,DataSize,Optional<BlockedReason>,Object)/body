{
  checkArgument(operatorId >= 0,"operatorId is negative");
  this.operatorId=operatorId;
  this.planNodeId=requireNonNull(planNodeId,"planNodeId is null");
  this.operatorType=requireNonNull(operatorType,"operatorType is null");
  this.addInputCalls=addInputCalls;
  this.addInputWall=requireNonNull(addInputWall,"addInputWall is null");
  this.addInputCpu=requireNonNull(addInputCpu,"addInputCpu is null");
  this.addInputUser=requireNonNull(addInputUser,"addInputUser is null");
  this.inputDataSize=requireNonNull(inputDataSize,"inputDataSize is null");
  checkArgument(inputPositions >= 0,"inputPositions is negative");
  this.inputPositions=inputPositions;
  this.getOutputCalls=getOutputCalls;
  this.getOutputWall=requireNonNull(getOutputWall,"getOutputWall is null");
  this.getOutputCpu=requireNonNull(getOutputCpu,"getOutputCpu is null");
  this.getOutputUser=requireNonNull(getOutputUser,"getOutputUser is null");
  this.outputDataSize=requireNonNull(outputDataSize,"outputDataSize is null");
  checkArgument(outputPositions >= 0,"outputPositions is negative");
  this.outputPositions=outputPositions;
  this.blockedWall=requireNonNull(blockedWall,"blockedWall is null");
  this.finishCalls=finishCalls;
  this.finishWall=requireNonNull(finishWall,"finishWall is null");
  this.finishCpu=requireNonNull(finishCpu,"finishCpu is null");
  this.finishUser=requireNonNull(finishUser,"finishUser is null");
  this.memoryReservation=requireNonNull(memoryReservation,"memoryReservation is null");
  this.systemMemoryReservation=requireNonNull(systemMemoryReservation,"systemMemoryReservation is null");
  this.blockedReason=blockedReason;
  this.info=info;
}
