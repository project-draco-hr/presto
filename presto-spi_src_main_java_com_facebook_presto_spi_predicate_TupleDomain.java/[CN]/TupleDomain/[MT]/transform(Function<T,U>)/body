{
  if (!domains.isPresent()) {
    return TupleDomain.none();
  }
  HashMap<U,Domain> result=new HashMap<>(domains.get().size());
  for (  Map.Entry<T,Domain> entry : domains.get().entrySet()) {
    U key=function.apply(entry.getKey());
    if (key == null) {
      continue;
    }
    Domain previous=result.put(key,entry.getValue());
    if (previous != null) {
      throw new IllegalArgumentException(String.format("Every argument must have a unique mapping. %s maps to %s and %s",entry.getKey(),entry.getValue(),previous));
    }
  }
  return TupleDomain.withColumnDomains(result);
}
