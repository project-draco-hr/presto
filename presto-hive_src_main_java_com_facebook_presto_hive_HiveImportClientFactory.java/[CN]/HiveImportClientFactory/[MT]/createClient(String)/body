{
  if (!sourceName.startsWith("hive_")) {
    return null;
  }
  final String metastoreName=sourceName.split("_",2)[1];
  checkArgument(!metastoreName.isEmpty(),"bad metastore name: %s",metastoreName);
  HostAndPort metastore=getMetaStoreAddress(metastoreName);
  HiveClient hiveClient=new HiveClient(metastore.getHostText(),metastore.getPort(),maxChunkSize.toBytes(),partitionChunkCodec);
  MetadataCache metadataCache;
  try {
    metadataCache=metadataCaches.get(metastoreName,new Callable<MetadataCache>(){
      @Override public MetadataCache call() throws Exception {
        String jmxName=format("com.facebook.presto:type=metadatacache,group=%s",metastoreName);
        MetadataCache cache=new HiveMetadataCache(new Duration(60.0,TimeUnit.MINUTES));
        Map<String,Object> jmxExposed=cache.getMetadataCacheStats();
        for (        Map.Entry<String,Object> jmx : jmxExposed.entrySet()) {
          mbeanExporter.export(format("%s,name=%s",jmxName,jmx.getKey()),jmx.getValue());
        }
        return cache;
      }
    }
);
  }
 catch (  ExecutionException e) {
    throw Throwables.propagate(e.getCause());
  }
  return new CachingHiveClient(metadataCache,hiveClient);
}
