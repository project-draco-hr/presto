{
  checkArgument(totalDrivers >= 0,"totalDrivers is negative");
  this.totalDrivers=totalDrivers;
  checkArgument(queuedDrivers >= 0,"queuedDrivers is negative");
  this.queuedDrivers=queuedDrivers;
  checkArgument(startedDrivers >= 0,"startedDrivers is negative");
  this.startedDrivers=startedDrivers;
  checkArgument(completedDrivers >= 0,"completedDrivers is negative");
  this.completedDrivers=completedDrivers;
  this.memoryReservation=checkNotNull(memoryReservation,"memoryReservation is null");
  this.queuedTime=checkNotNull(queuedTime,"queuedTime is null");
  this.elapsedTime=checkNotNull(elapsedTime,"elapsedTime is null");
  this.totalScheduledTime=checkNotNull(totalScheduledTime,"totalScheduledTime is null");
  this.totalCpuTime=checkNotNull(totalCpuTime,"totalCpuTime is null");
  this.totalUserTime=checkNotNull(totalUserTime,"totalUserTime is null");
  this.totalBlockedTime=checkNotNull(totalBlockedTime,"totalBlockedTime is null");
  this.inputDataSize=checkNotNull(inputDataSize,"inputDataSize is null");
  checkArgument(inputPositions >= 0,"inputPositions is negative");
  this.inputPositions=inputPositions;
  this.outputDataSize=checkNotNull(outputDataSize,"outputDataSize is null");
  checkArgument(outputPositions >= 0,"outputPositions is negative");
  this.outputPositions=outputPositions;
  this.operatorSummaries=ImmutableList.copyOf(checkNotNull(operatorSummaries,"operatorSummaries is null"));
  this.runningDrivers=ImmutableList.copyOf(checkNotNull(runningDrivers,"runningDrivers is null"));
}
