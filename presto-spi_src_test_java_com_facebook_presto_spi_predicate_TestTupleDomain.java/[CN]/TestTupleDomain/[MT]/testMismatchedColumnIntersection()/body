{
  TupleDomain<ColumnHandle> tupleDomain1=TupleDomain.withColumnDomains(ImmutableMap.of(A,Domain.all(DOUBLE),B,Domain.singleValue(VARCHAR,utf8Slice("value"))));
  TupleDomain<ColumnHandle> tupleDomain2=TupleDomain.withColumnDomains(ImmutableMap.of(A,Domain.create(ValueSet.ofRanges(Range.greaterThanOrEqual(DOUBLE,0.0)),true),C,Domain.singleValue(BIGINT,1L)));
  TupleDomain<ColumnHandle> expectedTupleDomain=TupleDomain.withColumnDomains(ImmutableMap.of(A,Domain.create(ValueSet.ofRanges(Range.greaterThanOrEqual(DOUBLE,0.0)),true),B,Domain.singleValue(VARCHAR,utf8Slice("value")),C,Domain.singleValue(BIGINT,1L)));
  assertEquals(tupleDomain1.intersect(tupleDomain2),expectedTupleDomain);
}
