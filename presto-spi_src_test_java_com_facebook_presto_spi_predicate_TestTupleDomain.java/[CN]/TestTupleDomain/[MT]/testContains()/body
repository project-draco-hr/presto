{
  assertTrue(contains(ImmutableMap.<ColumnHandle,Domain>of(),ImmutableMap.<ColumnHandle,Domain>of()));
  assertTrue(contains(ImmutableMap.<ColumnHandle,Domain>of(),ImmutableMap.of(A,Domain.none(BIGINT))));
  assertTrue(contains(ImmutableMap.<ColumnHandle,Domain>of(),ImmutableMap.of(A,Domain.all(BIGINT))));
  assertTrue(contains(ImmutableMap.<ColumnHandle,Domain>of(),ImmutableMap.of(A,Domain.singleValue(DOUBLE,0.0))));
  assertFalse(contains(ImmutableMap.of(A,Domain.none(BIGINT)),ImmutableMap.<ColumnHandle,Domain>of()));
  assertTrue(contains(ImmutableMap.of(A,Domain.none(BIGINT)),ImmutableMap.of(A,Domain.none(BIGINT))));
  assertFalse(contains(ImmutableMap.of(A,Domain.none(BIGINT)),ImmutableMap.of(A,Domain.all(BIGINT))));
  assertFalse(contains(ImmutableMap.of(A,Domain.none(BIGINT)),ImmutableMap.of(A,Domain.singleValue(BIGINT,0L))));
  assertTrue(contains(ImmutableMap.of(A,Domain.all(BIGINT)),ImmutableMap.<ColumnHandle,Domain>of()));
  assertTrue(contains(ImmutableMap.of(A,Domain.all(BIGINT)),ImmutableMap.of(A,Domain.none(BIGINT))));
  assertTrue(contains(ImmutableMap.of(A,Domain.all(BIGINT)),ImmutableMap.of(A,Domain.all(BIGINT))));
  assertTrue(contains(ImmutableMap.of(A,Domain.all(BIGINT)),ImmutableMap.of(A,Domain.singleValue(BIGINT,0L))));
  assertFalse(contains(ImmutableMap.of(A,Domain.singleValue(BIGINT,0L)),ImmutableMap.<ColumnHandle,Domain>of()));
  assertTrue(contains(ImmutableMap.of(A,Domain.singleValue(BIGINT,0L)),ImmutableMap.of(A,Domain.none(BIGINT))));
  assertFalse(contains(ImmutableMap.of(A,Domain.singleValue(BIGINT,0L)),ImmutableMap.of(A,Domain.all(BIGINT))));
  assertTrue(contains(ImmutableMap.of(A,Domain.singleValue(BIGINT,0L)),ImmutableMap.of(A,Domain.singleValue(BIGINT,0L))));
  assertFalse(contains(ImmutableMap.of(A,Domain.singleValue(BIGINT,0L)),ImmutableMap.of(B,Domain.singleValue(VARCHAR,utf8Slice("value")))));
  assertFalse(contains(ImmutableMap.of(A,Domain.singleValue(BIGINT,0L),B,Domain.singleValue(VARCHAR,utf8Slice("value"))),ImmutableMap.of(B,Domain.singleValue(VARCHAR,utf8Slice("value")))));
  assertTrue(contains(ImmutableMap.of(A,Domain.singleValue(BIGINT,0L),B,Domain.singleValue(VARCHAR,utf8Slice("value"))),ImmutableMap.of(B,Domain.none(VARCHAR))));
  assertTrue(contains(ImmutableMap.of(A,Domain.singleValue(BIGINT,0L),B,Domain.singleValue(VARCHAR,utf8Slice("value"))),ImmutableMap.of(A,Domain.singleValue(BIGINT,1L),B,Domain.none(VARCHAR))));
  assertTrue(contains(ImmutableMap.of(B,Domain.singleValue(VARCHAR,utf8Slice("value"))),ImmutableMap.of(A,Domain.singleValue(BIGINT,0L),B,Domain.singleValue(VARCHAR,utf8Slice("value")))));
  assertTrue(contains(ImmutableMap.of(A,Domain.all(BIGINT),B,Domain.singleValue(VARCHAR,utf8Slice("value"))),ImmutableMap.of(A,Domain.singleValue(BIGINT,0L),B,Domain.singleValue(VARCHAR,utf8Slice("value")))));
  assertFalse(contains(ImmutableMap.of(A,Domain.all(BIGINT),B,Domain.singleValue(VARCHAR,utf8Slice("value"))),ImmutableMap.of(A,Domain.singleValue(BIGINT,0L),B,Domain.singleValue(VARCHAR,utf8Slice("value2")))));
  assertTrue(contains(ImmutableMap.of(A,Domain.all(BIGINT),B,Domain.singleValue(VARCHAR,utf8Slice("value"))),ImmutableMap.of(A,Domain.singleValue(BIGINT,0L),B,Domain.singleValue(VARCHAR,utf8Slice("value2")),C,Domain.none(VARCHAR))));
  assertFalse(contains(ImmutableMap.of(A,Domain.all(BIGINT),B,Domain.singleValue(VARCHAR,utf8Slice("value")),C,Domain.none(VARCHAR)),ImmutableMap.of(A,Domain.singleValue(BIGINT,0L),B,Domain.singleValue(VARCHAR,utf8Slice("value2")))));
  assertTrue(contains(ImmutableMap.of(A,Domain.all(BIGINT),B,Domain.singleValue(VARCHAR,utf8Slice("value")),C,Domain.none(VARCHAR)),ImmutableMap.of(A,Domain.singleValue(BIGINT,0L),B,Domain.none(VARCHAR))));
}
