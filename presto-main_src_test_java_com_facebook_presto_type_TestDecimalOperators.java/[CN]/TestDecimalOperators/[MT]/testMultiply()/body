{
  assertDecimalFunction("DECIMAL '12' * DECIMAL '3'",decimal("036"));
  assertDecimalFunction("DECIMAL '12' * DECIMAL '-3'",decimal("-036"));
  assertDecimalFunction("DECIMAL '-12' * DECIMAL '3'",decimal("-036"));
  assertDecimalFunction("DECIMAL '1234567890123456' * DECIMAL '3'",decimal("03703703670370368"));
  assertDecimalFunction("DECIMAL '.1234567890123456' * DECIMAL '3'",decimal("0.3703703670370368"));
  assertDecimalFunction("DECIMAL '.1234567890123456' * DECIMAL '.3'",decimal(".03703703670370368"));
  assertDecimalFunction("DECIMAL '12345678901234567' * DECIMAL '12345678901234567'",decimal("0152415787532388345526596755677489"));
  assertDecimalFunction("DECIMAL '-12345678901234567' * DECIMAL '12345678901234567'",decimal("-0152415787532388345526596755677489"));
  assertDecimalFunction("DECIMAL '-12345678901234567' * DECIMAL '-12345678901234567'",decimal("0152415787532388345526596755677489"));
  assertDecimalFunction("DECIMAL '.12345678901234567' * DECIMAL '.12345678901234567'",decimal(".0152415787532388345526596755677489"));
  assertDecimalFunction("DECIMAL '12345678901234567890123456789012345678' * DECIMAL '3'",decimal("37037036703703703670370370367037037034"));
  assertDecimalFunction("DECIMAL '1234567890123456789.0123456789012345678' * DECIMAL '3'",decimal("3703703670370370367.0370370367037037034"));
  assertDecimalFunction("DECIMAL '.12345678901234567890123456789012345678' * DECIMAL '3'",decimal(".37037036703703703670370370367037037034"));
  assertDecimalFunction("DECIMAL '3' * DECIMAL '12345678901234567890123456789012345678'",decimal("37037036703703703670370370367037037034"));
  assertDecimalFunction("DECIMAL '3' * DECIMAL '1234567890123456789.0123456789012345678'",decimal("3703703670370370367.0370370367037037034"));
  assertDecimalFunction("DECIMAL '3' * DECIMAL '.12345678901234567890123456789012345678'",decimal(".37037036703703703670370370367037037034"));
  assertDecimalFunction("CAST(3 AS DECIMAL(38,0)) * CAST(2 AS DECIMAL(38,0))",decimal("00000000000000000000000000000000000006"));
  assertDecimalFunction("CAST(3 AS DECIMAL(38,0)) * CAST(DECIMAL '0.2' AS DECIMAL(38,1))",decimal("0000000000000000000000000000000000000.6"));
  assertDecimalFunction("DECIMAL '.1234567890123456789' * DECIMAL '.1234567890123456789'",decimal(".01524157875323883675019051998750190521"));
  assertInvalidFunction("DECIMAL '.1234567890123456789' * DECIMAL '.12345678901234567890'","DECIMAL scale must be in range [0, precision]");
  assertInvalidFunction("DECIMAL '.1' * DECIMAL '.12345678901234567890123456789012345678'","DECIMAL scale must be in range [0, precision]");
  assertInvalidFunction("DECIMAL '12345678901234567890123456789012345678' * DECIMAL '9'",NUMERIC_VALUE_OUT_OF_RANGE);
  assertInvalidFunction("DECIMAL '.12345678901234567890123456789012345678' * DECIMAL '9'",NUMERIC_VALUE_OUT_OF_RANGE);
  assertInvalidFunction("DECIMAL '12345678901234567890123456789012345678' * DECIMAL '-9'",NUMERIC_VALUE_OUT_OF_RANGE);
  assertInvalidFunction("DECIMAL '.12345678901234567890123456789012345678' * DECIMAL '-9'",NUMERIC_VALUE_OUT_OF_RANGE);
}
