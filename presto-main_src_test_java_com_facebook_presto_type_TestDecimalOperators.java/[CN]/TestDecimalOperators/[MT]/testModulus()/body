{
  assertDecimalFunction("DECIMAL '1' % DECIMAL '3'",decimal("1"));
  assertDecimalFunction("DECIMAL '10' % DECIMAL '3'",decimal("1"));
  assertDecimalFunction("DECIMAL '0' % DECIMAL '3'",decimal("0"));
  assertDecimalFunction("DECIMAL '10.0' % DECIMAL '3'",decimal("1.0"));
  assertDecimalFunction("DECIMAL '10.0' % DECIMAL '3.000'",decimal("1.000"));
  assertDecimalFunction("DECIMAL '7' % DECIMAL '3.0000000000000000'",decimal("1.0000000000000000"));
  assertDecimalFunction("DECIMAL '7.0000000000000000' % DECIMAL '3.0000000000000000'",decimal("1.0000000000000000"));
  assertDecimalFunction("DECIMAL '7.0000000000000000' % DECIMAL '3'",decimal("1.0000000000000000"));
  assertDecimalFunction("DECIMAL '7' % CAST(3 AS DECIMAL(17,0))",decimal("1"));
  assertDecimalFunction("DECIMAL '.1' % DECIMAL '.03'",decimal(".01"));
  assertDecimalFunction("DECIMAL '.0001' % DECIMAL '.03'",decimal(".0001"));
  assertDecimalFunction("DECIMAL '-10' % DECIMAL '3'",decimal("-1"));
  assertDecimalFunction("DECIMAL '10' % DECIMAL '-3'",decimal("1"));
  assertDecimalFunction("DECIMAL '-10' % DECIMAL '-3'",decimal("-1"));
  assertDecimalFunction("DECIMAL '7' % CAST(3 AS DECIMAL(38,0))",decimal("1"));
  assertDecimalFunction("DECIMAL '7' % CAST(3 AS DECIMAL(38,16))",decimal("1.0000000000000000"));
  assertDecimalFunction("DECIMAL '7.0000000000000000' % CAST(3 AS DECIMAL(38,16))",decimal("1.0000000000000000"));
  assertDecimalFunction("DECIMAL '-7.0000000000000000' % CAST(3 AS DECIMAL(38,16))",decimal("-1.0000000000000000"));
  assertDecimalFunction("DECIMAL '7.0000000000000000' % CAST(-3 AS DECIMAL(38,16))",decimal("1.0000000000000000"));
  assertDecimalFunction("DECIMAL '-7.0000000000000000' % CAST(-3 AS DECIMAL(38,16))",decimal("-1.0000000000000000"));
  assertDecimalFunction("DECIMAL '7' % DECIMAL '3.0000000000000000000000000000000000000'",decimal("1.0000000000000000000000000000000000000"));
  assertDecimalFunction("DECIMAL '7.0000000000000000' % DECIMAL '3.0000000000000000000000000000000000000'",decimal("1.0000000000000000000000000000000000000"));
  assertDecimalFunction("DECIMAL '.01' % DECIMAL '3.0000000000000000000000000000000000000'",decimal(".0100000000000000000000000000000000000"));
  assertDecimalFunction("DECIMAL '-7' % DECIMAL '3.0000000000000000000000000000000000000'",decimal("-1.0000000000000000000000000000000000000"));
  assertDecimalFunction("DECIMAL '7' % DECIMAL '-3.0000000000000000000000000000000000000'",decimal("1.0000000000000000000000000000000000000"));
  assertDecimalFunction("DECIMAL '-7' % DECIMAL '-3.0000000000000000000000000000000000000'",decimal("-1.0000000000000000000000000000000000000"));
  assertDecimalFunction("DECIMAL '99999999999999999999999999999999999997' % DECIMAL '3'",decimal("1"));
  assertDecimalFunction("DECIMAL '99999999999999999999999999999999999997' % DECIMAL '3.0000000000000000'",decimal("1.0000000000000000"));
  assertDecimalFunction("DECIMAL '-99999999999999999999999999999999999997' % DECIMAL '3'",decimal("-1"));
  assertDecimalFunction("DECIMAL '99999999999999999999999999999999999997' % DECIMAL '-3'",decimal("1"));
  assertDecimalFunction("DECIMAL '-99999999999999999999999999999999999997' % DECIMAL '-3'",decimal("-1"));
  assertDecimalFunction("DECIMAL '7.000000000000000000000000000000000000' % DECIMAL '3'",decimal("1.000000000000000000000000000000000000"));
  assertDecimalFunction("DECIMAL '-7.000000000000000000000000000000000000' % DECIMAL '3'",decimal("-1.000000000000000000000000000000000000"));
  assertDecimalFunction("DECIMAL '7.000000000000000000000000000000000000' % DECIMAL '-3'",decimal("1.000000000000000000000000000000000000"));
  assertDecimalFunction("DECIMAL '-7.000000000000000000000000000000000000' % DECIMAL '-3'",decimal("-1.000000000000000000000000000000000000"));
  assertDecimalFunction("CAST(7 AS DECIMAL(38,0)) % CAST(3 AS DECIMAL(38,0))",decimal("00000000000000000000000000000000000001"));
  assertDecimalFunction("CAST(7 AS DECIMAL(34,0)) % CAST(3 AS DECIMAL(38,0))",decimal("0000000000000000000000000000000001"));
  assertDecimalFunction("CAST(7 AS DECIMAL(38,0)) % CAST(3 AS DECIMAL(34,0))",decimal("0000000000000000000000000000000001"));
  assertDecimalFunction("CAST(-7 AS DECIMAL(38,0)) % CAST(3 AS DECIMAL(38,0))",decimal("-00000000000000000000000000000000000001"));
  assertDecimalFunction("CAST(7 AS DECIMAL(38,0)) % CAST(-3 AS DECIMAL(38,0))",decimal("00000000000000000000000000000000000001"));
  assertDecimalFunction("CAST(-7 AS DECIMAL(38,0)) % CAST(-3 AS DECIMAL(38,0))",decimal("-00000000000000000000000000000000000001"));
  assertInvalidFunction("DECIMAL '1' % DECIMAL '0'",DIVISION_BY_ZERO);
  assertInvalidFunction("DECIMAL '1.000000000000000000000000000000000000' % DECIMAL '0'",DIVISION_BY_ZERO);
  assertInvalidFunction("DECIMAL '1.000000000000000000000000000000000000' % DECIMAL '0.0000000000000000000000000000000000000'",DIVISION_BY_ZERO);
  assertInvalidFunction("DECIMAL '1' % DECIMAL '0.0000000000000000000000000000000000000'",DIVISION_BY_ZERO);
  assertInvalidFunction("DECIMAL '1' % CAST(0 AS DECIMAL(38,0))",DIVISION_BY_ZERO);
}
