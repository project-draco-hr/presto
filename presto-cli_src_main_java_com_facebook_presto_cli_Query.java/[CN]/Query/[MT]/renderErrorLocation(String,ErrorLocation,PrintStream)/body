{
  List<String> lines=ImmutableList.copyOf(Splitter.on('\n').split(query).iterator());
  String errorLine=lines.get(location.getLineNumber() - 1);
  String good=errorLine.substring(0,location.getColumnNumber() - 1);
  String bad=errorLine.substring(location.getColumnNumber() - 1);
  if ((location.getLineNumber() == lines.size()) && bad.trim().isEmpty()) {
    bad=" <EOF>";
  }
  if (REAL_TERMINAL) {
    Ansi ansi=Ansi.ansi();
    ansi.fg(Ansi.Color.CYAN);
    for (int i=1; i < location.getLineNumber(); i++) {
      ansi.a(lines.get(i - 1)).newline();
    }
    ansi.a(good);
    ansi.fg(Ansi.Color.RED);
    ansi.a(bad).newline();
    for (int i=location.getLineNumber(); i < lines.size(); i++) {
      ansi.a(lines.get(i)).newline();
    }
    ansi.reset();
    out.print(ansi);
  }
 else {
    String prefix=format("LINE %s: ",location.getLineNumber());
    String padding=Strings.repeat(" ",prefix.length() + (location.getColumnNumber() - 1));
    out.println(prefix + errorLine);
    out.println(padding + "^");
  }
}
