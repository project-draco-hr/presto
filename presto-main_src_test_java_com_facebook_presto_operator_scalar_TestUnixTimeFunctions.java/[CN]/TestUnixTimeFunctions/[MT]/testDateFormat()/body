{
  DateTimeZone defaultTimeZone=DateTimeZone.getDefault();
  DateTimeZone localTimeZone=DateTimeZone.forOffsetHours(-8);
  DateTimeZone.setDefault(localTimeZone);
  try {
    DateTime dateTime=new DateTime(2001,1,9,13,4,5,0,localTimeZone);
    long seconds=getSeconds(dateTime);
    assertFunction("date_format(" + seconds + ", '%a')","Tue");
    assertFunction("date_format(" + seconds + ", '%b')","Jan");
    assertFunction("date_format(" + seconds + ", '%c')","1");
    assertFunction("date_format(" + seconds + ", '%d')","09");
    assertFunction("date_format(" + seconds + ", '%e')","9");
    assertFunction("date_format(" + seconds + ", '%f')","000000");
    assertFunction("date_format(" + seconds + ", '%H')","13");
    assertFunction("date_format(" + seconds + ", '%h')","01");
    assertFunction("date_format(" + seconds + ", '%I')","01");
    assertFunction("date_format(" + seconds + ", '%i')","04");
    assertFunction("date_format(" + seconds + ", '%j')","009");
    assertFunction("date_format(" + seconds + ", '%k')","13");
    assertFunction("date_format(" + seconds + ", '%l')","1");
    assertFunction("date_format(" + seconds + ", '%M')","January");
    assertFunction("date_format(" + seconds + ", '%m')","01");
    assertFunction("date_format(" + seconds + ", '%p')","PM");
    assertFunction("date_format(" + seconds + ", '%r')","01:04:05 PM");
    assertFunction("date_format(" + seconds + ", '%S')","05");
    assertFunction("date_format(" + seconds + ", '%s')","05");
    assertFunction("date_format(" + seconds + ", '%T')","13:04:05");
    assertFunction("date_format(" + seconds + ", '%v')","02");
    assertFunction("date_format(" + seconds + ", '%W')","Tuesday");
    assertFunction("date_format(" + seconds + ", '%w')","2");
    assertFunction("date_format(" + seconds + ", '%Y')","2001");
    assertFunction("date_format(" + seconds + ", '%y')","01");
    assertFunction("date_format(" + seconds + ", '%%')","%");
    assertFunction("date_format(" + seconds + ", 'foo')","foo");
    assertFunction("date_format(" + seconds + ", '%g')","g");
    assertFunction("date_format(" + seconds + ", '%4')","4");
  }
  finally {
    DateTimeZone.setDefault(defaultTimeZone);
  }
}
