{
  DateTime dateTime1=new DateTime(1960,1,22,3,4,5,321,DateTimeZone.UTC);
  long millis1=dateTime1.getMillis();
  DateTime dateTime2=new DateTime(2011,5,1,7,2,9,456,DateTimeZone.UTC);
  long millis2=dateTime2.getMillis();
  assertFunction("dateDiff('day', " + millis1 + ", "+ millis2+ ")",Days.daysBetween(dateTime1,dateTime2).getDays());
  assertFunction("dateDiff('doy', " + millis1 + ", "+ millis2+ ")",Days.daysBetween(dateTime1,dateTime2).getDays());
  assertFunction("dateDiff('hour', " + millis1 + ", "+ millis2+ ")",Hours.hoursBetween(dateTime1,dateTime2).getHours());
  assertFunction("dateDiff('minute', " + millis1 + ", "+ millis2+ ")",Minutes.minutesBetween(dateTime1,dateTime2).getMinutes());
  assertFunction("dateDiff('month', " + millis1 + ", "+ millis2+ ")",Months.monthsBetween(dateTime1,dateTime2).getMonths());
  assertFunction("dateDiff('quarter', " + millis1 + ", "+ millis2+ ")",Months.monthsBetween(dateTime1,dateTime2).getMonths() / 4 + 1);
  assertFunction("dateDiff('second', " + millis1 + ", "+ millis2+ ")",Seconds.secondsBetween(dateTime1,dateTime2).getSeconds());
  assertFunction("dateDiff('week', " + millis1 + ", "+ millis2+ ")",Weeks.weeksBetween(dateTime1,dateTime2).getWeeks());
  assertFunction("dateDiff('year', " + millis1 + ", "+ millis2+ ")",Years.yearsBetween(dateTime1,dateTime2).getYears());
  assertFunction("dateDiff('century', " + millis1 + ", "+ millis2+ ")",ISOChronology.getInstance(DateTimeZone.UTC).centuryOfEra().getDifference(millis2,millis1));
}
