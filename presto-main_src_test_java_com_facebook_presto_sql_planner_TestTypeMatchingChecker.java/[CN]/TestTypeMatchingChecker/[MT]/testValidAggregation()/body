{
  Symbol aggregationSymbol=symbolAllocator.newSymbol("sum",DOUBLE);
  Map<Symbol,Signature> functions=ImmutableMap.of(aggregationSymbol,new Signature("sum",FunctionKind.AGGREGATE,ImmutableList.of(),ImmutableList.of(),DOUBLE.getTypeSignature(),ImmutableList.of(DOUBLE.getTypeSignature()),false));
  Map<Symbol,FunctionCall> aggregations=ImmutableMap.of(aggregationSymbol,new FunctionCall(QualifiedName.of("sum"),ImmutableList.of(columnC.toSymbolReference())));
  PlanNode node=new AggregationNode(newId(),baseTableScan,ImmutableList.of(columnA,columnB),aggregations,functions,ImmutableMap.of(),ImmutableList.of(ImmutableList.of(columnA,columnB)),SINGLE,Optional.empty(),0,Optional.empty());
  assertTypesValid(node);
}
