{
  Expression mapped=translateNamesToSymbols(expression);
  return ExpressionTreeRewriter.rewriteWith(new ExpressionRewriter<Void>(){
    @Override public Expression rewriteExpression(    Expression node,    Void context,    ExpressionTreeRewriter<Void> treeRewriter){
      if (expressionToSymbols.containsKey(node)) {
        return expressionToSymbols.get(node).toSymbolReference();
      }
 else       if (expressionToExpressions.containsKey(node)) {
        Expression mapping=expressionToExpressions.get(node);
        mapping=translateNamesToSymbols(mapping);
        return treeRewriter.defaultRewrite(mapping,context);
      }
 else {
        return treeRewriter.defaultRewrite(node,context);
      }
    }
  }
,mapped);
}
