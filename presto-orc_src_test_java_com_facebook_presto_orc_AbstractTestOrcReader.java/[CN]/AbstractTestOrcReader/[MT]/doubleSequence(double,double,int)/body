{
  return new Iterable<Double>(){
    @Override public Iterator<Double> iterator(){
      return new AbstractSequentialIterator<Double>(start){
        private int item;
        @Override protected Double computeNext(        Double previous){
          if (item >= items) {
            return null;
          }
          item++;
          return previous + step;
        }
      }
;
    }
  }
;
}
