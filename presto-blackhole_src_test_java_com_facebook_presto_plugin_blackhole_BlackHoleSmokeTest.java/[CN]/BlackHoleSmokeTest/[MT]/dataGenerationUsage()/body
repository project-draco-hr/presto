{
  Session session=testSessionBuilder().setCatalog("blackhole").setSchema("default").build();
  assertThatQueryReturnsValue(format("CREATE TABLE nation WITH ( %s = 3, %s = 2, %s = 1 ) as SELECT * FROM tpch.tiny.nation",ROWS_PER_PAGE_PROPERTY,PAGES_PER_SPLIT_PROPERTY,SPLITS_COUNT_PROPERTY),25L,session);
  assertThatQueryReturnsValue("SELECT count(*) FROM nation",6L,session);
  assertThatQueryReturnsValue("INSERT INTO nation SELECT * FROM tpch.tiny.nation",25L,session);
  assertThatQueryReturnsValue("SELECT count(*) FROM nation",6L,session);
  MaterializedResult rows=queryRunner.execute(session,"SELECT * FROM nation LIMIT 1");
  assertEquals(rows.getRowCount(),1);
  MaterializedRow row=Iterables.getOnlyElement(rows);
  assertEquals(row.getFieldCount(),4);
  assertEquals(row.getField(0),0L);
  assertEquals(row.getField(1),"****************");
  assertEquals(row.getField(2),0L);
  assertEquals(row.getField(3),"****************");
  assertThatQueryReturnsValue("DROP TABLE nation",true);
}
