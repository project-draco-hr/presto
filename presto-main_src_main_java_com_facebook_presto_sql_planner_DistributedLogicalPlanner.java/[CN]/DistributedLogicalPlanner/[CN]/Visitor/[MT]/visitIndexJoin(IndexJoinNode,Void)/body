{
  SubPlanBuilder current=node.getProbeSource().accept(this,context);
  if (distributedIndexJoins && current.isDistributed()) {
    PlanNode sink=new SinkNode(idAllocator.getNextId(),current.getRoot(),current.getRoot().getOutputSymbols());
    current.setRoot(sink).setHashOutputPartitioning(Lists.transform(node.getCriteria(),probeGetter()),node.getProbeHashSymbol().transform(channelGetter(current.getRoot())));
    PlanNode exchange=new ExchangeNode(idAllocator.getNextId(),current.getId(),sink.getOutputSymbols());
    IndexJoinNode indexJoinNode=new IndexJoinNode(node.getId(),node.getType(),exchange,node.getIndexSource(),node.getCriteria(),node.getProbeHashSymbol(),node.getIndexHashSymbol());
    return createFixedDistributionPlan(indexJoinNode).addChild(current.build());
  }
 else {
    current.setRoot(new IndexJoinNode(node.getId(),node.getType(),current.getRoot(),node.getIndexSource(),node.getCriteria(),node.getProbeHashSymbol(),node.getIndexHashSymbol()));
    return current;
  }
}
