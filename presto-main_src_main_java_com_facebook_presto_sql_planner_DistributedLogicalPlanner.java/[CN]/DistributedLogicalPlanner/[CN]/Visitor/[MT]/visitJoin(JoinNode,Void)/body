{
  SubPlanBuilder left=node.getLeft().accept(this,context);
  SubPlanBuilder right=node.getRight().accept(this,context);
  if (left.isPartitioned() || right.isPartitioned()) {
    right.setRoot(new SinkNode(right.getId(),right.getRoot()));
    ExchangeNode exchange=new ExchangeNode(right.getId(),right.getRoot().getOutputSymbols());
    JoinNode join=new JoinNode(left.getRoot(),exchange,node.getCriteria());
    left.setRoot(join).addChild(right.build());
    return left;
  }
 else {
    JoinNode join=new JoinNode(left.getRoot(),right.getRoot(),node.getCriteria());
    return newSubPlan(join).setPartitioned(false).setChildren(Iterables.concat(left.getChildren(),right.getChildren()));
  }
}
