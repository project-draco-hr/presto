{
  SubPlanBuilder subPlanBuilder=node.getSource().accept(this,context);
  if (createSingleNodePlan) {
    subPlanBuilder.setRoot(new MaterializedViewWriterNode(node.getId(),subPlanBuilder.getRoot(),node.getTable(),node.getColumns(),node.getOutput()));
  }
 else {
    subPlanBuilder=new SubPlanBuilder(subPlanBuilder.getId(),allocator,subPlanBuilder.getPartitioning(),subPlanBuilder.getRoot(),node.getId());
    FunctionInfo sum=metadata.getFunction(QualifiedName.of("sum"),ImmutableList.of(Type.BIGINT));
    Symbol intermediateOutput=allocator.newSymbol(node.getOutput().toString(),sum.getReturnType());
    MaterializedViewWriterNode writer=new MaterializedViewWriterNode(node.getId(),subPlanBuilder.getRoot(),node.getTable(),node.getColumns(),intermediateOutput);
    subPlanBuilder.setRoot(writer);
    FunctionCall aggregate=new FunctionCall(sum.getName(),ImmutableList.<Expression>of(new QualifiedNameReference(intermediateOutput.toQualifiedName())));
    return addDistributedAggregation(subPlanBuilder,ImmutableMap.of(node.getOutput(),aggregate),ImmutableMap.of(node.getOutput(),sum.getHandle()),ImmutableList.<Symbol>of());
  }
  return subPlanBuilder;
}
