{
  SubPlanBuilder current=node.getSource().accept(this,context);
  if (current.isDistributed()) {
    List<Symbol> partitionedBy=node.getPartitionBy();
    current.setRoot(new SinkNode(idAllocator.getNextId(),current.getRoot(),current.getRoot().getOutputSymbols()));
    ExchangeNode source=new ExchangeNode(idAllocator.getNextId(),current.getId(),current.getRoot().getOutputSymbols());
    if (partitionedBy.isEmpty()) {
      current=createSingleNodePlan(source).addChild(current.build());
    }
 else {
      current.setHashOutputPartitioning(partitionedBy,node.getHashSymbol().map(channelGetter(current.getRoot())));
      current=createFixedDistributionPlan(source).addChild(current.build());
    }
  }
  current.setRoot(new WindowNode(node.getId(),current.getRoot(),node.getPartitionBy(),node.getOrderBy(),node.getOrderings(),node.getFrame(),node.getWindowFunctions(),node.getSignatures(),node.getHashSymbol()));
  return current;
}
