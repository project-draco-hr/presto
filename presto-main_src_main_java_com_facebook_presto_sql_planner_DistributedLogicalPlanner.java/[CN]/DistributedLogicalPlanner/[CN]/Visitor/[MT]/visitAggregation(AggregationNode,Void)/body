{
  SubPlanBuilder current=node.getSource().accept(this,context);
  if (!current.isDistributed()) {
    current.setRoot(new AggregationNode(node.getId(),current.getRoot(),node.getGroupBy(),node.getAggregations(),node.getFunctions(),node.getMasks(),SINGLE,node.getSampleWeight(),node.getConfidence(),node.getHashSymbol()));
    return current;
  }
  Map<Symbol,FunctionCall> aggregations=node.getAggregations();
  Map<Symbol,Signature> functions=node.getFunctions();
  Map<Symbol,Symbol> masks=node.getMasks();
  List<Symbol> groupBy=node.getGroupBy();
  boolean decomposable=true;
  for (  Signature function : functions.values()) {
    if (!metadata.getExactFunction(function).getAggregationFunction().isDecomposable()) {
      decomposable=false;
      break;
    }
  }
  if (decomposable) {
    return addDistributedAggregation(current,aggregations,functions,masks,groupBy,node.getSampleWeight(),node.getConfidence(),node.getHashSymbol());
  }
  return addSingleNodeAggregation(current,aggregations,functions,masks,groupBy,node.getSampleWeight(),node.getConfidence(),node.getHashSymbol());
}
