{
  PageBuffer outputBuffer=new PageBuffer("bufferId",20);
  assertRunning(outputBuffer);
  for (int i=0; i < 5; i++) {
    outputBuffer.addPage(createLongPage(i));
  }
  assertRunning(outputBuffer);
  List<Page> nextPages=outputBuffer.getNextPages(2,MAX_WAIT);
  assertEquals(nextPages.size(),2);
  assertEquals(getPageOnlyValue(nextPages.get(0)),0);
  assertEquals(getPageOnlyValue(nextPages.get(1)),1);
  assertRunning(outputBuffer);
  nextPages=outputBuffer.getNextPages(2,MAX_WAIT);
  assertEquals(nextPages.size(),2);
  assertEquals(getPageOnlyValue(nextPages.get(0)),2);
  assertEquals(getPageOnlyValue(nextPages.get(1)),3);
  assertRunning(outputBuffer);
  nextPages=outputBuffer.getNextPages(2,MAX_WAIT);
  assertEquals(nextPages.size(),1);
  assertEquals(getPageOnlyValue(nextPages.get(0)),4);
  assertRunning(outputBuffer);
  int value=9;
  outputBuffer.addPage(createLongPage(value));
  outputBuffer.finish();
  assertRunning(outputBuffer);
  nextPages=outputBuffer.getNextPages(2,MAX_WAIT);
  assertEquals(nextPages.size(),1);
  assertEquals(getPageOnlyValue(nextPages.get(0)),9);
  assertFinished(outputBuffer);
  outputBuffer.addPage(createLongPage(22));
  assertFinished(outputBuffer);
  outputBuffer.finish();
  assertFinished(outputBuffer);
}
