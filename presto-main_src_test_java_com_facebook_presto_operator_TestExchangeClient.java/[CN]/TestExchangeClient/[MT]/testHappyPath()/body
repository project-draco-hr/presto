{
  DataSize maxResponseSize=new DataSize(10,Unit.MEGABYTE);
  MockExchangeRequestProcessor processor=new MockExchangeRequestProcessor(maxResponseSize);
  URI location=URI.create("http://localhost:8080");
  processor.addPage(location,createPage(1));
  processor.addPage(location,createPage(2));
  processor.addPage(location,createPage(3));
  processor.setComplete(location);
  ExchangeClient exchangeClient=new ExchangeClient(new DataSize(32,Unit.MEGABYTE),maxResponseSize,1,new TestingHttpClient(processor,executor),executor);
  exchangeClient.addLocation(location);
  exchangeClient.noMoreLocations();
  assertEquals(exchangeClient.isClosed(),false);
  assertPageEquals(exchangeClient.getNextPage(new Duration(1,TimeUnit.SECONDS)),createPage(1));
  assertEquals(exchangeClient.isClosed(),false);
  assertPageEquals(exchangeClient.getNextPage(new Duration(1,TimeUnit.SECONDS)),createPage(2));
  assertEquals(exchangeClient.isClosed(),false);
  assertPageEquals(exchangeClient.getNextPage(new Duration(1,TimeUnit.SECONDS)),createPage(3));
  assertNull(exchangeClient.getNextPage(new Duration(1,TimeUnit.SECONDS)));
  assertEquals(exchangeClient.isClosed(),true);
  if (exchangeClient.getStatus().getBufferedPages() != 0) {
    assertEquals(exchangeClient.getStatus().getBufferedPages(),0);
  }
  assertTrue(exchangeClient.getStatus().getBufferedBytes() == 0);
  assertStatus(exchangeClient.getStatus().getPageBufferClientStatuses().get(0),location,"closed",3,2,2,"queued");
}
