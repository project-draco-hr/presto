{
  DataSize maxResponseSize=new DataSize(10,Unit.MEGABYTE);
  MockExchangeRequestProcessor processor=new MockExchangeRequestProcessor(maxResponseSize);
  ExchangeClient exchangeClient=new ExchangeClient(createTestingBlockEncodingManager(),new DataSize(32,Unit.MEGABYTE),maxResponseSize,1,new TestingHttpClient(processor,newCachedThreadPool(daemonThreadsNamed("test-%s"))),executor);
  URI location1=URI.create("http://localhost:8081/foo");
  processor.addPage(location1,createPage(1));
  processor.addPage(location1,createPage(2));
  processor.addPage(location1,createPage(3));
  processor.setComplete(location1);
  exchangeClient.addLocation(location1);
  assertEquals(exchangeClient.isClosed(),false);
  assertPageEquals(exchangeClient.getNextPage(new Duration(1,TimeUnit.SECONDS)),createPage(1));
  assertEquals(exchangeClient.isClosed(),false);
  assertPageEquals(exchangeClient.getNextPage(new Duration(1,TimeUnit.SECONDS)),createPage(2));
  assertEquals(exchangeClient.isClosed(),false);
  assertPageEquals(exchangeClient.getNextPage(new Duration(1,TimeUnit.SECONDS)),createPage(3));
  assertNull(exchangeClient.getNextPage(new Duration(10,TimeUnit.MILLISECONDS)));
  assertEquals(exchangeClient.isClosed(),false);
  URI location2=URI.create("http://localhost:8082/bar");
  processor.addPage(location2,createPage(4));
  processor.addPage(location2,createPage(5));
  processor.addPage(location2,createPage(6));
  processor.setComplete(location2);
  exchangeClient.addLocation(location2);
  assertEquals(exchangeClient.isClosed(),false);
  assertPageEquals(exchangeClient.getNextPage(new Duration(1,TimeUnit.SECONDS)),createPage(4));
  assertEquals(exchangeClient.isClosed(),false);
  assertPageEquals(exchangeClient.getNextPage(new Duration(1,TimeUnit.SECONDS)),createPage(5));
  assertEquals(exchangeClient.isClosed(),false);
  assertPageEquals(exchangeClient.getNextPage(new Duration(1,TimeUnit.SECONDS)),createPage(6));
  assertNull(exchangeClient.getNextPage(new Duration(10,TimeUnit.MILLISECONDS)));
  assertEquals(exchangeClient.isClosed(),false);
  exchangeClient.noMoreLocations();
  assertEquals(exchangeClient.isClosed(),true);
  ImmutableMap<URI,PageBufferClientStatus> statuses=uniqueIndex(exchangeClient.getStatus().getPageBufferClientStatuses(),uriGetter());
  assertStatus(statuses.get(location1),location1,"closed",3,2,2,"queued");
  assertStatus(statuses.get(location2),location2,"closed",3,2,2,"queued");
}
