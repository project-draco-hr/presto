{
  ImmutableList.Builder<Parameter> parameters=ImmutableList.builder();
  if (grouped) {
    parameters.add(arg("groupIdsBlock",GroupByIdBlock.class));
  }
  Parameter page=arg("page",Page.class);
  parameters.add(page);
  MethodDefinition method=definition.declareMethod(a(PUBLIC),"addInput",type(void.class),parameters.build());
  Scope scope=method.getScope();
  ByteCodeBlock body=method.getBody();
  Variable thisVariable=method.getThis();
  if (grouped) {
    generateEnsureCapacity(scope,stateField,body);
  }
  List<Variable> parameterVariables=new ArrayList<>();
  for (int i=0; i < countInputChannels(parameterMetadatas); i++) {
    parameterVariables.add(scope.declareVariable(Block.class,"block" + i));
  }
  Variable masksBlock=scope.declareVariable(Block.class,"masksBlock");
  Variable sampleWeightsBlock=null;
  if (sampleWeightChannelField != null) {
    sampleWeightsBlock=scope.declareVariable(Block.class,"sampleWeightsBlock");
  }
  body.comment("masksBlock = maskChannel.map(page.blockGetter()).orElse(null);").append(thisVariable.getField(maskChannelField)).append(page).invokeStatic(type(AggregationUtils.class),"pageBlockGetter",type(Function.class,Integer.class,Block.class),type(Page.class)).invokeVirtual(Optional.class,"map",Optional.class,Function.class).pushNull().invokeVirtual(Optional.class,"orElse",Object.class,Object.class).checkCast(Block.class).putVariable(masksBlock);
  if (sampleWeightChannelField != null) {
    body.comment("sampleWeightsBlock = sampleWeightChannel.map(page.blockGetter()).get();").append(thisVariable.getField(sampleWeightChannelField)).append(page).invokeStatic(type(AggregationUtils.class),"pageBlockGetter",type(Function.class,Integer.class,Block.class),type(Page.class)).invokeVirtual(Optional.class,"map",Optional.class,Function.class).invokeVirtual(Optional.class,"get",Object.class).checkCast(Block.class).putVariable(sampleWeightsBlock);
  }
  for (int i=0; i < countInputChannels(parameterMetadatas); i++) {
    body.comment("%s = page.getBlock(inputChannels.get(%d));",parameterVariables.get(i).getName(),i).append(page).append(thisVariable.getField(inputChannelsField)).push(i).invokeInterface(List.class,"get",Object.class,int.class).checkCast(Integer.class).invokeVirtual(Integer.class,"intValue",int.class).invokeVirtual(Page.class,"getBlock",Block.class,int.class).putVariable(parameterVariables.get(i));
  }
  ByteCodeBlock block=generateInputForLoop(stateField,parameterMetadatas,inputFunction,scope,parameterVariables,masksBlock,sampleWeightsBlock,callSiteBinder,grouped);
  body.append(block);
  body.ret();
}
