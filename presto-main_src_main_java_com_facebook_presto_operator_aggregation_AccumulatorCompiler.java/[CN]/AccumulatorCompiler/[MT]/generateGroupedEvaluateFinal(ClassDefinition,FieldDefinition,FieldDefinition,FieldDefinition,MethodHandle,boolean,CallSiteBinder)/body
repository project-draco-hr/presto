{
  Parameter groupId=arg("groupId",int.class);
  Parameter out=arg("out",BlockBuilder.class);
  MethodDefinition method=definition.declareMethod(a(PUBLIC),"evaluateFinal",type(void.class),groupId,out);
  Block body=method.getBody();
  Variable thisVariable=method.getThis();
  ByteCodeExpression state=thisVariable.getField(stateField);
  body.append(state.invoke("setGroupId",void.class,groupId.cast(long.class)));
  if (outputFunction != null) {
    body.comment("output(state, out)");
    body.append(state);
    if (approximate) {
      checkNotNull(confidenceField,"confidenceField is null");
      body.append(thisVariable.getField(confidenceField));
    }
    body.append(out);
    body.append(invoke(callSiteBinder.bind(outputFunction),"output"));
  }
 else {
    checkArgument(!approximate,"Approximate aggregations must specify an output function");
    ByteCodeExpression stateSerializer=thisVariable.getField(stateSerializerField);
    body.append(stateSerializer.invoke("serialize",void.class,state.cast(Object.class),out));
  }
  body.ret();
}
