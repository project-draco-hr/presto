{
  MethodDefinition method=definition.declareConstructor(a(PUBLIC),arg("stateSerializer",AccumulatorStateSerializer.class),arg("stateFactory",AccumulatorStateFactory.class),arg("inputChannels",type(List.class,Integer.class)),arg("maskChannel",type(Optional.class,Integer.class)),arg("sampleWeightChannel",type(Optional.class,Integer.class)),arg("confidence",double.class));
  Block body=method.getBody();
  CompilerContext context=method.getCompilerContext();
  Variable thisVariable=method.getThis();
  Variable stateSerializer=context.getVariable("stateSerializer");
  Variable stateFactory=context.getVariable("stateFactory");
  Variable inputChannels=context.getVariable("inputChannels");
  Variable maskChannel=context.getVariable("maskChannel");
  Variable sampleWeightChannel=context.getVariable("sampleWeightChannel");
  Variable confidence=context.getVariable("confidence");
  body.comment("super();").append(thisVariable).invokeConstructor(Object.class);
  body.append(thisVariable.setField(stateSerializerField,generateRequireNotNull(stateSerializer)));
  body.append(thisVariable.setField(stateFactoryField,generateRequireNotNull(stateFactory)));
  body.append(thisVariable.setField(inputChannelsField,generateRequireNotNull(inputChannels)));
  body.append(thisVariable.setField(maskChannelField,generateRequireNotNull(maskChannel)));
  if (sampleWeightChannelField != null) {
    body.append(thisVariable.setField(sampleWeightChannelField,generateRequireNotNull(sampleWeightChannel)));
  }
  String createState;
  if (grouped) {
    createState="createGroupedState";
  }
 else {
    createState="createSingleState";
  }
  if (confidenceField != null) {
    body.append(thisVariable.setField(confidenceField,confidence));
  }
  body.append(thisVariable.setField(stateField,stateFactory.invoke(createState,Object.class).cast(stateField.getType())));
  body.ret();
}
