{
  CompilerContext context=new CompilerContext();
  ImmutableList.Builder<NamedParameterDefinition> parameters=ImmutableList.builder();
  if (grouped) {
    parameters.add(arg("groupIdsBlock",GroupByIdBlock.class));
  }
  parameters.add(arg("page",Page.class));
  Block body=definition.declareMethod(context,a(PUBLIC),"addInput",type(void.class),parameters.build()).getBody();
  if (grouped) {
    generateEnsureCapacity(stateField,body);
  }
  List<Variable> parameterVariables=new ArrayList<>();
  for (int i=0; i < countInputChannels(parameterMetadatas); i++) {
    parameterVariables.add(context.declareVariable(com.facebook.presto.spi.block.Block.class,"block" + i));
  }
  Variable masksBlock=context.declareVariable(com.facebook.presto.spi.block.Block.class,"masksBlock");
  Variable sampleWeightsBlock=context.declareVariable(com.facebook.presto.spi.block.Block.class,"sampleWeightsBlock");
  body.comment("masksBlock = maskChannel.transform(page.blockGetter()).orNull();").pushThis().getField(maskChannelField).getVariable("page").invokeVirtual(type(Page.class),"blockGetter",type(Function.class,Integer.class,com.facebook.presto.spi.block.Block.class)).invokeVirtual(Optional.class,"transform",Optional.class,Function.class).invokeVirtual(Optional.class,"orNull",Object.class).checkCast(com.facebook.presto.spi.block.Block.class).putVariable(masksBlock);
  body.comment("sampleWeightsBlock = sampleWeightChannel.transform(page.blockGetter()).orNull();").pushThis().getField(sampleWeightChannelField).getVariable("page").invokeVirtual(type(Page.class),"blockGetter",type(Function.class,Integer.class,com.facebook.presto.spi.block.Block.class)).invokeVirtual(Optional.class,"transform",Optional.class,Function.class).invokeVirtual(Optional.class,"orNull",Object.class).checkCast(com.facebook.presto.spi.block.Block.class).putVariable(sampleWeightsBlock);
  for (int i=0; i < countInputChannels(parameterMetadatas); i++) {
    body.comment("%s = page.getBlock(inputChannels.get(%d));",parameterVariables.get(i).getName(),i).getVariable("page").pushThis().getField(inputChannelsField).push(i).invokeInterface(List.class,"get",Object.class,int.class).checkCast(Integer.class).invokeVirtual(Integer.class,"intValue",int.class).invokeVirtual(Page.class,"getBlock",com.facebook.presto.spi.block.Block.class,int.class).putVariable(parameterVariables.get(i));
  }
  Block block=generateInputForLoop(stateField,parameterMetadatas,inputFunction,context,parameterVariables,masksBlock,sampleWeightsBlock,grouped,acceptNulls);
  body.append(block).ret();
}
