{
  List<Integer> matches=tupleDescriptor.resolveFieldIndexes(node.getName());
  if (matches.isEmpty()) {
    throw new SemanticException(MISSING_ATTRIBUTE,node,"Column '%s' cannot be resolved",node.getName());
  }
 else   if (matches.size() > 1) {
    throw new SemanticException(AMBIGUOUS_ATTRIBUTE,node,"Column '%s' is ambiguous",node.getName());
  }
  int fieldIndex=Iterables.getOnlyElement(matches);
  Field field=tupleDescriptor.getFields().get(fieldIndex);
  resolvedNames.put(node.getName(),fieldIndex);
  expressionTypes.put(node,field.getType());
  return field.getType();
}
