{
  Type left=process(node.getLeft(),context);
  Type right=process(node.getRight(),context);
  if (!Type.isNumeric(left)) {
    throw new SemanticException(TYPE_MISMATCH,node.getLeft(),"Left side of '%s' must be numeric (actual: %s)",node.getType().getValue(),left);
  }
  if (!Type.isNumeric(right)) {
    throw new SemanticException(TYPE_MISMATCH,node.getRight(),"Right side of '%s' must be numeric (actual: %s)",node.getType().getValue(),right);
  }
  if (left == Type.BIGINT && right == Type.BIGINT) {
    subExpressionTypes.put(node,Type.BIGINT);
    return Type.BIGINT;
  }
  subExpressionTypes.put(node,Type.DOUBLE);
  return Type.DOUBLE;
}
