{
switch (node.getSign()) {
case PLUS:
    Type type=process(node.getValue(),context);
  if (!type.equals(DOUBLE) && !type.equals(REAL) && !type.equals(BIGINT)&& !type.equals(INTEGER)&& !type.equals(SMALLINT)&& !type.equals(TINYINT)) {
    throw new SemanticException(TYPE_MISMATCH,node,"Unary '+' operator cannot by applied to %s type",type);
  }
expressionTypes.put(node,type);
return type;
case MINUS:
return getOperator(context,node,OperatorType.NEGATION,node.getValue());
}
throw new UnsupportedOperationException("Unsupported unary operator: " + node.getSign());
}
