{
  List<Field> matches=scope.resolve(node.getName());
  if (matches.isEmpty()) {
    throw new SemanticException(node,"Attribute '%s' cannot be resolved",node.getName());
  }
 else   if (matches.size() > 1) {
    List<String> names=Lists.transform(matches,new Function<Field,String>(){
      @Override public String apply(      Field input){
        if (input.getRelationAlias().isPresent()) {
          return input.getRelationAlias().get() + "." + input.getName().get();
        }
 else {
          return input.getName().get();
        }
      }
    }
);
    throw new SemanticException(node,"Attribute '%s' is ambiguous: %s",node.getName(),names);
  }
  Field field=Iterables.getOnlyElement(matches);
  resolvedNames.put(node.getName(),field);
  subExpressionTypes.put(node,field.getType());
  return field.getType();
}
