{
  Type superType=NULL;
  for (  Expression expression : expressions) {
    Type type=process(expression,context);
    if (superType.equals(type) || type.equals(NULL)) {
      continue;
    }
    if (superType.equals(NULL)) {
      superType=type;
    }
 else     if (isNumeric(superType) && isNumeric(type)) {
      superType=DOUBLE;
    }
  }
  for (  Expression expression : expressions) {
    Type type=process(expression,context);
    if (!type.equals(superType)) {
      if (!type.equals(NULL) && !(type.equals(BIGINT) && superType.equals(DOUBLE))) {
        throw new SemanticException(TYPE_MISMATCH,expression,message,superType);
      }
      expressionCoercions.put(expression,superType);
    }
  }
  return superType;
}
