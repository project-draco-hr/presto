{
  StatementAnalyzer analyzer=statementAnalyzerFactory.apply(node);
  RelationType descriptor=analyzer.process(node.getQuery(),new AnalysisContext(context.getContext(),tupleDescriptor));
  if (descriptor.getVisibleFieldCount() != 1) {
    throw new SemanticException(MULTIPLE_FIELDS_FROM_SUBQUERY,node,"Multiple columns returned by subquery are not yet supported. Found %s",descriptor.getVisibleFieldCount());
  }
  Node previousNode=context.getPreviousNode().orElse(null);
  if (previousNode instanceof InPredicate && ((InPredicate)previousNode).getValue() != node) {
    subqueryInPredicates.add((InPredicate)previousNode);
  }
 else {
    scalarSubqueries.add(node);
  }
  Type type=Iterables.getOnlyElement(descriptor.getVisibleFields()).getType();
  expressionTypes.put(node,type);
  return type;
}
