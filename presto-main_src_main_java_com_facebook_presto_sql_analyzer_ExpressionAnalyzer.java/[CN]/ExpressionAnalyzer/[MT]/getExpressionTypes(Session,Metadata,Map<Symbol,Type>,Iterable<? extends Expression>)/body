{
  ExpressionAnalyzer expressionAnalyzer=new ExpressionAnalyzer(new Analysis(),session,metadata,false);
  List<Field> fields=IterableTransformer.on(DependencyExtractor.extractUnique(expressions)).transform(new Function<Symbol,Field>(){
    @Override public Field apply(    Symbol symbol){
      Type type=types.get(symbol);
      checkArgument(type != null,"No type for symbol %s",symbol);
      return Field.newUnqualified(symbol.getName(),type);
    }
  }
).list();
  for (  Expression expression : expressions) {
    expressionAnalyzer.analyze(expression,new TupleDescriptor(fields),new AnalysisContext());
  }
  return expressionAnalyzer.getSubExpressionTypes();
}
