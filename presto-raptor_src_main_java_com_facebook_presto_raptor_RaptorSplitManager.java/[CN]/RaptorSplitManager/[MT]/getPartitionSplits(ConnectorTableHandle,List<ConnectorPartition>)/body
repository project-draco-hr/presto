{
  RaptorTableHandle raptorTableHandle=checkType(tableHandle,RaptorTableHandle.class,"tableHandle");
  checkArgument(partitions.size() == 1,"expected exactly one partition");
  Map<String,Node> nodesById=uniqueIndex(nodeManager.getActiveNodes(),nodeIdentifier());
  ImmutableMultimap.Builder<UUID,String> shardNodes=ImmutableMultimap.builder();
  for (  ShardNode shardNode : shardManager.getShardNodes(raptorTableHandle.getTableId())) {
    shardNodes.put(shardNode.getShardUuid(),shardNode.getNodeIdentifier());
  }
  List<ConnectorSplit> splits=new ArrayList<>();
  for (  Map.Entry<UUID,Collection<String>> entry : shardNodes.build().asMap().entrySet()) {
    UUID shardId=entry.getKey();
    Collection<String> nodeId=entry.getValue();
    List<HostAddress> addresses=getAddressesForNodes(nodesById,nodeId);
    if (addresses.isEmpty()) {
      throw new PrestoException(INTERNAL_ERROR,format("no host for shard %s found: %s",shardId,nodeId));
    }
    splits.add(new RaptorSplit(shardId,addresses,raptorTableHandle.getCountColumnHandle()));
  }
  Collections.shuffle(splits);
  return new FixedSplitSource(connectorId,splits);
}
