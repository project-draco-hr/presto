{
  try {
    List<PersistentPeriodicImportJob> jobs=periodicImportManager.getJobs();
    Map<Long,PersistentPeriodicImportJob> configuredJobs=Maps.uniqueIndex(jobs,jobIdGetter());
    Set<Long> currentJobs=runningJobs.keySet();
    Set<Long> jobsToAdd=ImmutableSet.copyOf(Sets.difference(configuredJobs.keySet(),currentJobs));
    Set<Long> jobsToRemove=ImmutableSet.copyOf(Sets.difference(currentJobs,configuredJobs.keySet()));
    for (    Long jobId : jobsToAdd) {
      runningJobs.put(jobId,jobStateFactory.forImportJob(configuredJobs.get(jobId)));
    }
    for (    Long oldJob : jobsToRemove) {
      JobState removedJob=runningJobs.remove(oldJob);
      removedJob.cancel(true);
    }
    log.debug("Current set of jobs is %s",runningJobs.keySet());
    for (    JobState importJob : runningJobs.values()) {
      importJob.schedule();
    }
  }
 catch (  Throwable e) {
    log.error(e,"Caught problem when scanning import jobs!");
  }
}
