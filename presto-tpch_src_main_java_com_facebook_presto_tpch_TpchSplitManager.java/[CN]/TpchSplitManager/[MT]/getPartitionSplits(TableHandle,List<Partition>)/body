{
  checkNotNull(partitions,"partitions is null");
  if (partitions.isEmpty()) {
    return new FixedSplitSource(connectorId,ImmutableList.<Split>of());
  }
  Partition partition=Iterables.getOnlyElement(partitions);
  checkArgument(partition instanceof TpchPartition,"Partition must be a tpch partition");
  TpchTableHandle tableHandle=((TpchPartition)partition).getTable();
  Set<Node> nodes=nodeManager.getActiveDatasourceNodes(connectorId);
  checkState(!nodes.isEmpty(),"No TPCH nodes available: Add '%s' to the datasources property of each worker node",connectorId);
  int totalParts=nodes.size() * splitsPerNode;
  int partNumber=0;
  ImmutableList.Builder<Split> splits=ImmutableList.builder();
  for (  Node node : nodes) {
    for (int i=0; i < splitsPerNode; i++) {
      splits.add(new TpchSplit(tableHandle,partNumber++,totalParts,ImmutableList.of(node.getHostAndPort())));
    }
  }
  return new FixedSplitSource(connectorId,splits.build());
}
