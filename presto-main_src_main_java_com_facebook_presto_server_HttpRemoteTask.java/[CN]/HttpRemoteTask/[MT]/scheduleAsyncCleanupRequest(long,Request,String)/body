{
  Futures.addCallback(httpClient.executeAsync(request,createStatusResponseHandler()),new FutureCallback<StatusResponse>(){
    @Override public void onSuccess(    StatusResponse result){
    }
    @Override public void onFailure(    Throwable t){
      if (t instanceof RejectedExecutionException) {
        return;
      }
      if (Duration.nanosSince(start).compareTo(MAX_CLEANUP_RETRY_TIME) < 0) {
        Futures.addCallback(httpClient.executeAsync(request,createStatusResponseHandler()),this,executor);
      }
 else {
        logError(t,"Unable to %s task at %s",action,request.getUri());
      }
    }
  }
,executor);
}
