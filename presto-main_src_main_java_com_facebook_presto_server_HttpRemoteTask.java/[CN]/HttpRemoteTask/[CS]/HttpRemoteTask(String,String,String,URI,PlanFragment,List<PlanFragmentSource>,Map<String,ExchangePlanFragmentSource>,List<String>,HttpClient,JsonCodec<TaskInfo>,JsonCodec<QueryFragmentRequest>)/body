{
  Preconditions.checkNotNull(queryId,"queryId is null");
  Preconditions.checkNotNull(stageId,"stageId is null");
  Preconditions.checkNotNull(taskId,"taskId is null");
  Preconditions.checkNotNull(planFragment,"planFragment is null");
  Preconditions.checkNotNull(splits,"splits is null");
  Preconditions.checkNotNull(exchangeSources,"exchangeSources is null");
  Preconditions.checkNotNull(outputIds,"outputIds is null");
  Preconditions.checkArgument(!outputIds.isEmpty(),"outputIds is empty");
  Preconditions.checkNotNull(httpClient,"httpClient is null");
  Preconditions.checkNotNull(taskInfoCodec,"taskInfoCodec is null");
  Preconditions.checkNotNull(queryFragmentRequestCodec,"queryFragmentRequestCodec is null");
  this.planFragment=planFragment;
  this.splits=splits;
  this.exchangeSources=exchangeSources;
  this.httpClient=httpClient;
  this.taskInfoCodec=taskInfoCodec;
  this.queryFragmentRequestCodec=queryFragmentRequestCodec;
  Map<String,BufferState> bufferStates=IterableTransformer.on(outputIds).toMap(Functions.constant(BufferState.CREATED)).map();
  taskInfo.set(new TaskInfo(queryId,stageId,taskId,location,bufferStates,planFragment.getTupleInfos(),TaskState.PLANNED,new ExecutionStats()));
}
