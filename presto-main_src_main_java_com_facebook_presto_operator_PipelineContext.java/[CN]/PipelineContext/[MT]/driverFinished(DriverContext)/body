{
  requireNonNull(driverContext,"driverContext is null");
  if (!drivers.remove(driverContext)) {
    throw new IllegalArgumentException("Unknown driver " + driverContext);
  }
  lastExecutionEndTime.set(DateTime.now());
  DriverStats driverStats=driverContext.getDriverStats();
  completedDrivers.getAndIncrement();
  queuedTime.add(driverStats.getQueuedTime().roundTo(NANOSECONDS));
  elapsedTime.add(driverStats.getElapsedTime().roundTo(NANOSECONDS));
  totalScheduledTime.getAndAdd(driverStats.getTotalScheduledTime().roundTo(NANOSECONDS));
  totalCpuTime.getAndAdd(driverStats.getTotalCpuTime().roundTo(NANOSECONDS));
  totalUserTime.getAndAdd(driverStats.getTotalUserTime().roundTo(NANOSECONDS));
  totalBlockedTime.getAndAdd(driverStats.getTotalBlockedTime().roundTo(NANOSECONDS));
  List<OperatorStats> operators=driverStats.getOperatorStats();
  for (  OperatorStats operator : operators) {
    OperatorStats updated;
    OperatorStats current;
    do {
      current=operatorSummaries.get(operator.getOperatorId());
      if (current != null) {
        updated=current.add(operator);
      }
 else {
        updated=operator;
      }
    }
 while (!compareAndSet(operatorSummaries,operator.getOperatorId(),current,updated));
  }
  rawInputDataSize.update(driverStats.getRawInputDataSize().toBytes());
  rawInputPositions.update(driverStats.getRawInputPositions());
  processedInputDataSize.update(driverStats.getProcessedInputDataSize().toBytes());
  processedInputPositions.update(driverStats.getProcessedInputPositions());
  outputDataSize.update(driverStats.getOutputDataSize().toBytes());
  outputPositions.update(driverStats.getOutputPositions());
}
