{
  PlanNode source=context.rewrite(node.getSource());
  Map<Expression,Symbol> computedExpressions=new HashMap<>();
  Map<Symbol,Expression> assignments=new LinkedHashMap<>();
  for (  Map.Entry<Symbol,Expression> entry : node.getAssignments().entrySet()) {
    Expression expression=canonicalize(entry.getValue());
    if (expression instanceof QualifiedNameReference) {
      Symbol symbol=Symbol.fromQualifiedName(((QualifiedNameReference)expression).getName());
      if (!symbol.equals(entry.getKey())) {
        map(entry.getKey(),symbol);
      }
    }
 else     if (DeterminismEvaluator.isDeterministic(expression) && !(expression instanceof NullLiteral)) {
      Symbol computedSymbol=computedExpressions.get(expression);
      if (computedSymbol == null) {
        computedExpressions.put(expression,entry.getKey());
      }
 else {
        map(entry.getKey(),computedSymbol);
      }
    }
    Symbol canonical=canonicalize(entry.getKey());
    if (!assignments.containsKey(canonical)) {
      assignments.put(canonical,expression);
    }
  }
  return new ProjectNode(node.getId(),source,assignments);
}
