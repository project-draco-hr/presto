{
  PlanNode source=planRewriter.rewrite(node.getSource(),context);
  ImmutableMap.Builder<Symbol,Signature> functionInfos=ImmutableMap.builder();
  ImmutableMap.Builder<Symbol,FunctionCall> functionCalls=ImmutableMap.builder();
  for (  Map.Entry<Symbol,FunctionCall> entry : node.getWindowFunctions().entrySet()) {
    Symbol symbol=entry.getKey();
    Symbol canonical=canonicalize(symbol);
    functionCalls.put(canonical,(FunctionCall)canonicalize(entry.getValue()));
    functionInfos.put(canonical,node.getSignatures().get(symbol));
  }
  ImmutableMap.Builder<Symbol,SortOrder> orderings=ImmutableMap.builder();
  for (  Map.Entry<Symbol,SortOrder> entry : node.getOrderings().entrySet()) {
    orderings.put(canonicalize(entry.getKey()),entry.getValue());
  }
  return new WindowNode(node.getId(),source,canonicalize(node.getPartitionBy()),canonicalize(node.getOrderBy()),orderings.build(),functionCalls.build(),functionInfos.build());
}
