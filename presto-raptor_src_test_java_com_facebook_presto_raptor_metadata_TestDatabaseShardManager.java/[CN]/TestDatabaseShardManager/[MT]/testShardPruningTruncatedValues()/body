{
  String prefix=repeat("x",MAX_BINARY_INDEX_SIZE);
  ColumnStats stats=new ColumnStats(1,prefix + "a",prefix + "z");
  ShardInfo shard=shardInfo(UUID.randomUUID(),"node",ImmutableList.of(stats));
  List<ShardInfo> shards=ImmutableList.of(shard);
  List<ColumnInfo> columns=ImmutableList.of(new ColumnInfo(1,VARCHAR));
  RaptorColumnHandle c1=new RaptorColumnHandle("raptor","c1",1,VARCHAR);
  long tableId=createTable("test");
  shardManager.createTable(tableId,columns);
  long transactionId=shardManager.beginTransaction();
  shardManager.commitShards(transactionId,tableId,columns,shards,Optional.empty());
  shardAssertion(tableId).expected(shards);
  shardAssertion(tableId).equal(c1,VARCHAR,utf8Slice(prefix)).expected(shards);
  shardAssertion(tableId).equal(c1,VARCHAR,utf8Slice(prefix + "c")).expected(shards);
  shardAssertion(tableId).range(c1,lessThan(VARCHAR,utf8Slice(prefix + "c"))).expected(shards);
  shardAssertion(tableId).range(c1,greaterThan(VARCHAR,utf8Slice(prefix + "zzz"))).expected(shards);
  shardAssertion(tableId).between(c1,VARCHAR,utf8Slice("w"),utf8Slice("y")).expected(shards);
  shardAssertion(tableId).range(c1,greaterThan(VARCHAR,utf8Slice("x"))).expected(shards);
  shardAssertion(tableId).between(c1,VARCHAR,utf8Slice("x"),utf8Slice("x")).expected();
  shardAssertion(tableId).range(c1,lessThan(VARCHAR,utf8Slice("w"))).expected();
  shardAssertion(tableId).range(c1,lessThan(VARCHAR,utf8Slice("x"))).expected();
  shardAssertion(tableId).range(c1,greaterThan(VARCHAR,utf8Slice("y"))).expected();
  Slice shorter=utf8Slice(prefix.substring(0,prefix.length() - 1));
  shardAssertion(tableId).equal(c1,VARCHAR,shorter).expected();
  shardAssertion(tableId).range(c1,lessThan(VARCHAR,shorter)).expected();
  shardAssertion(tableId).range(c1,greaterThan(VARCHAR,shorter)).expected(shards);
}
