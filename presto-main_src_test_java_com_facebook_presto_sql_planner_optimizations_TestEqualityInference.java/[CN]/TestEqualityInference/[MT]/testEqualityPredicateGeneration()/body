{
  EqualityInference.Builder builder=new EqualityInference.Builder();
  addEquality("a1","b1",builder);
  addEquality("b1","c1",builder);
  addEquality("d1","c1",builder);
  addEquality("a2","b2",builder);
  addEquality("b2","c2",builder);
  addEquality("d2","b2",builder);
  addEquality("c2","d2",builder);
  EqualityInference inference=builder.build();
  Assert.assertTrue(inference.scopedEqualityPredicates(Predicates.<Symbol>alwaysFalse()).isEmpty());
  Assert.assertTrue(inference.scopeBridgePredicates(Predicates.<Symbol>alwaysFalse()).isEmpty());
  Assert.assertTrue(inference.scopedEqualityPredicates(matchesSymbols("a1")).isEmpty());
  Assert.assertEquals(ImmutableSet.copyOf(inference.scopeBridgePredicates(matchesSymbols("a1"))),ImmutableSet.of(equalExpression("a1","b1")));
  List<Expression> expressions=inference.scopedEqualityPredicates(matchesSymbols("a1","c1"));
  Assert.assertEquals(expressions.size(),1);
  Assert.assertEquals(ImmutableSet.copyOf(expressions),ImmutableSet.of(equalExpression("a1","c1")));
  List<Expression> bridges=inference.scopeBridgePredicates(matchesSymbols("a1","c1"));
  Assert.assertEquals(ImmutableSet.copyOf(bridges),ImmutableSet.of(equalExpression("a1","b1")));
  expressions=inference.scopedEqualityPredicates(matchesSymbols("a2","c2","d2"));
  Assert.assertEquals(expressions.size(),2);
  Assert.assertEquals(ImmutableSet.copyOf(expressions),ImmutableSet.of(equalExpression("a2","c2"),equalExpression("a2","d2")));
  bridges=inference.scopeBridgePredicates(matchesSymbols("a2","c2","d2"));
  Assert.assertEquals(ImmutableSet.copyOf(bridges),ImmutableSet.of(equalExpression("a2","b2")));
  expressions=inference.scopedEqualityPredicates(symbolBeginsWith("a","b"));
  Assert.assertEquals(expressions.size(),2);
  Assert.assertEquals(ImmutableSet.copyOf(expressions),ImmutableSet.of(equalExpression("a1","b1"),equalExpression("a2","b2")));
  bridges=inference.scopeBridgePredicates(symbolBeginsWith("a","b"));
  Assert.assertEquals(ImmutableSet.copyOf(bridges),ImmutableSet.of(equalExpression("a1","c1"),equalExpression("a2","c2")));
}
