{
  List<TableMetadata> tables=ImmutableList.<TableMetadata>builder().add(new TableMetadata("default","default","ORDERS",ImmutableList.of(new ColumnMetadata(TupleInfo.Type.FIXED_INT_64,"orderkey"),new ColumnMetadata(TupleInfo.Type.FIXED_INT_64,"custkey"),new ColumnMetadata(TupleInfo.Type.DOUBLE,"totalprice"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"orderdate"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"orderstatus"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"orderpriority"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"clerk"),new ColumnMetadata(TupleInfo.Type.FIXED_INT_64,"shippriority"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"comment")))).add(new TableMetadata("default","default","LINEITEM",ImmutableList.of(new ColumnMetadata(TupleInfo.Type.FIXED_INT_64,"orderkey"),new ColumnMetadata(TupleInfo.Type.FIXED_INT_64,"partkey"),new ColumnMetadata(TupleInfo.Type.FIXED_INT_64,"suppkey"),new ColumnMetadata(TupleInfo.Type.FIXED_INT_64,"linenumber"),new ColumnMetadata(TupleInfo.Type.FIXED_INT_64,"quantity"),new ColumnMetadata(TupleInfo.Type.DOUBLE,"extendedprice"),new ColumnMetadata(TupleInfo.Type.DOUBLE,"discount"),new ColumnMetadata(TupleInfo.Type.DOUBLE,"tax"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"returnflag"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"linestatus"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"shipdate"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"commitdate"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"receiptdate"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"shipinstruct"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"shipmode"),new ColumnMetadata(TupleInfo.Type.VARIABLE_BINARY,"comment")))).build();
  Map<String,FunctionInfo> functions=ImmutableMap.<String,FunctionInfo>builder().put("COUNT",new FunctionInfo(true,CountAggregation.PROVIDER)).put("SUM",new FunctionInfo(true,LongSumAggregation.PROVIDER)).put("AVG",new FunctionInfo(true,AverageAggregation.PROVIDER)).build();
  metadata=new TestingMetadata(tables,functions);
}
