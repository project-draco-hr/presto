{
  this.queryId=requireNonNull(queryId,"queryId is null");
  this.transactionId=requireNonNull(transactionId,"transactionId is null");
  this.user=requireNonNull(user,"user is null");
  this.principal=requireNonNull(principal,"principal is null");
  this.source=requireNonNull(source,"source is null");
  this.catalog=requireNonNull(catalog,"catalog is null");
  this.schema=requireNonNull(schema,"schema is null");
  this.timeZoneKey=requireNonNull(timeZoneKey,"timeZoneKey is null");
  this.locale=requireNonNull(locale,"locale is null");
  this.remoteUserAddress=requireNonNull(remoteUserAddress,"remoteUserAddress is null");
  this.userAgent=requireNonNull(userAgent,"userAgent is null");
  this.startTime=startTime;
  this.systemProperties=ImmutableMap.copyOf(systemProperties);
  ImmutableMap.Builder<String,Map<String,String>> catalogPropertiesBuilder=ImmutableMap.<String,Map<String,String>>builder();
  for (  Entry<String,Map<String,String>> entry : catalogProperties.entrySet()) {
    catalogPropertiesBuilder.put(entry.getKey(),ImmutableMap.copyOf(entry.getValue()));
  }
  this.catalogProperties=catalogPropertiesBuilder.build();
}
