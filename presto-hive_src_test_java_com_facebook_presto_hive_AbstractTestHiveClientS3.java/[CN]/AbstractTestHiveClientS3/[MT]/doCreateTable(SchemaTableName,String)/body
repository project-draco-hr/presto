{
  List<ColumnMetadata> columns=ImmutableList.<ColumnMetadata>builder().add(new ColumnMetadata("id",BIGINT,1,false)).build();
  ConnectorTableMetadata tableMetadata=new ConnectorTableMetadata(tableName,columns,tableOwner);
  HiveOutputTableHandle outputHandle=client.beginCreateTable(tableMetadata);
  RecordSink sink=client.getRecordSink(outputHandle);
  sink.beginRecord(1);
  sink.appendLong(1);
  sink.finishRecord();
  sink.beginRecord(1);
  sink.appendLong(3);
  sink.finishRecord();
  sink.beginRecord(1);
  sink.appendLong(2);
  sink.finishRecord();
  String fragment=sink.commit();
  client.commitCreateTable(outputHandle,ImmutableList.of(fragment));
  metastoreClient.updateTableLocation(database,tableName.getTableName(),outputHandle.getTargetPath());
  ConnectorTableHandle tableHandle=getTableHandle(tableName);
  List<ConnectorColumnHandle> columnHandles=ImmutableList.copyOf(client.getColumnHandles(tableHandle).values());
  ConnectorPartitionResult partitionResult=client.getPartitions(tableHandle,TupleDomain.<ConnectorColumnHandle>all());
  assertEquals(partitionResult.getPartitions().size(),1);
  ConnectorSplitSource splitSource=client.getPartitionSplits(tableHandle,partitionResult.getPartitions());
  ConnectorSplit split=getOnlyElement(getAllSplits(splitSource));
  try (RecordCursor cursor=client.getRecordSet(split,columnHandles).cursor()){
    assertTrue(cursor.advanceNextPosition());
    assertEquals(cursor.getLong(0),1);
    assertTrue(cursor.advanceNextPosition());
    assertEquals(cursor.getLong(0),3);
    assertTrue(cursor.advanceNextPosition());
    assertEquals(cursor.getLong(0),2);
    assertFalse(cursor.advanceNextPosition());
  }
 }
