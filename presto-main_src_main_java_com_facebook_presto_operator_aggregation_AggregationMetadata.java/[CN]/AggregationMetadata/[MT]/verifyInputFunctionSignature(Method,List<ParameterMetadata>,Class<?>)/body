{
  verifyStaticAndPublic(method);
  Class<?>[] parameters=method.getParameterTypes();
  checkArgument(stateInterface == parameters[0],"First argument of aggregation input function must be %s",stateInterface.getSimpleName());
  checkArgument(parameters.length > 1,"Aggregation input function must have at least one parameter");
  checkArgument(parameterMetadatas.get(0).getParameterType() == ParameterMetadata.ParameterType.STATE,"First parameter must be state");
  for (int i=1; i < parameters.length; i++) {
    ParameterMetadata metadata=parameterMetadatas.get(i);
switch (metadata.getParameterType()) {
case INPUT_CHANNEL:
      checkArgument(SUPPORTED_PARAMETER_TYPES.contains(parameters[i]),"Unsupported type: %s",parameters[i].getSimpleName());
    break;
case BLOCK_INDEX:
  checkArgument(parameters[i] == int.class,"Block index parameter must be an int");
break;
case SAMPLE_WEIGHT:
checkArgument(parameters[i] == long.class,"Sample weight parameter must be a long");
break;
default :
throw new IllegalArgumentException("Unsupported parameter: " + metadata.getParameterType());
}
}
}
