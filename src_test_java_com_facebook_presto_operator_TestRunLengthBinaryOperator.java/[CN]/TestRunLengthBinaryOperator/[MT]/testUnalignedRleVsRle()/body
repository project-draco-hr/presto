{
  RunLengthEncodedTupleStream left=new RunLengthEncodedTupleStream(TupleInfo.SINGLE_LONG,ImmutableList.of(new RunLengthEncodedBlock(Tuples.createTuple(8),Range.create(0,4)),new RunLengthEncodedBlock(Tuples.createTuple(16),Range.create(5,9))));
  RunLengthEncodedTupleStream right=new RunLengthEncodedTupleStream(TupleInfo.SINGLE_LONG,ImmutableList.of(new RunLengthEncodedBlock(Tuples.createTuple(5),Range.create(0,7)),new RunLengthEncodedBlock(Tuples.createTuple(3),Range.create(8,9))));
  RunLengthBinaryOperator operator=new RunLengthBinaryOperator(left,right,new SubtractionOperation());
  Cursor cursor=operator.cursor();
  assertNextValue(cursor,0,3);
  assertEquals(cursor.getCurrentValueEndPosition(),4);
  assertNextValue(cursor,5,11);
  assertEquals(cursor.getCurrentValueEndPosition(),7);
  assertNextValue(cursor,8,13);
  assertEquals(cursor.getCurrentValueEndPosition(),9);
  assertAdvanceNextValue(cursor,FINISHED);
}
