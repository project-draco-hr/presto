{
  List<Partition> partitions;
  if (currentFragment.isPartitioned()) {
    partitions=getPartitions(currentFragment.getRoot());
  }
 else {
    ArrayList<Node> nodes=new ArrayList<>(nodeManager.getActiveNodes());
    Preconditions.checkState(!nodes.isEmpty(),"Cluster does not have any active nodes");
    Collections.shuffle(nodes,random);
    Node node=nodes.get(0);
    partitions=ImmutableList.of(new Partition(node,ImmutableList.<PlanFragmentSource>of()));
  }
  for (  PlanFragment childPlanFragment : getChildPlanFragments(currentFragment.getRoot(),allFragments)) {
    scheduleFragment(childPlanFragment,toOutputIds(partitions),allFragments,stages);
  }
  List<HttpTaskClient> taskClients=ImmutableList.copyOf(transform(partitions,new Function<Partition,HttpTaskClient>(){
    @Override public HttpTaskClient apply(    Partition partition){
      Map<String,ExchangePlanFragmentSource> exchangeSources=getExchangeSources(partition,currentFragment.getRoot(),stages);
      Preconditions.checkState(exchangeSources.size() <= 1,"Expected single source");
      Node node=partition.getNode();
      Request request=preparePost().setUri(uriBuilderFrom(node.getHttpUri()).replacePath("/v1/presto/task").build()).setHeader(HttpHeaders.CONTENT_TYPE,MediaType.APPLICATION_JSON).setBodyGenerator(jsonBodyGenerator(queryFragmentRequestCodec,new QueryFragmentRequest(currentFragment,partition.getSplits(),exchangeSources,outputIds))).build();
      JsonResponse<QueryTaskInfo> response=httpClient.execute(request,createFullJsonResponseHandler(jsonCodec(QueryTaskInfo.class)));
      Preconditions.checkState(response.getStatusCode() == 201,"Expected response code from %s to be 201, but was %d: %s",request.getUri(),response.getStatusCode(),response.getStatusMessage());
      String location=response.getHeader("Location");
      Preconditions.checkState(location != null);
      QueryTaskInfo queryTaskInfo=response.getValue();
      return new HttpTaskClient(queryTaskInfo.getTaskId(),URI.create(location),"unused",queryTaskInfo.getTupleInfos(),httpClient,executor,queryTaskInfoCodec);
    }
  }
));
  stages.put(currentFragment.getId(),taskClients);
  waitForRunning(taskClients);
}
