{
  String baseName=null;
  List<TypeSignature> parameters=new ArrayList<>();
  List<String> fieldNames=new ArrayList<>();
  int parameterStart=-1;
  int bracketCount=0;
  boolean inFieldName=false;
  for (int i=0; i < signature.length(); i++) {
    char c=signature.charAt(i);
    if (c == '(') {
      if (bracketCount == 0) {
        verify(baseName == null,"Expected baseName to be null");
        verify(parameterStart == -1,"Expected parameter start to be -1");
        baseName=signature.substring(0,i);
        parameterStart=i + 1;
        inFieldName=true;
      }
      bracketCount++;
    }
 else     if (c == ' ') {
      if (bracketCount == 1 && inFieldName) {
        checkArgument(parameterStart >= 0,"Bad type signature: '%s'",signature);
        fieldNames.add(signature.substring(parameterStart,i));
        parameterStart=i + 1;
        inFieldName=false;
      }
    }
 else     if (c == ',') {
      if (bracketCount == 1) {
        checkArgument(parameterStart >= 0,"Bad type signature: '%s'",signature);
        parameters.add(parseTypeSignature(signature.substring(parameterStart,i),literalParameters));
        parameterStart=i + 1;
        inFieldName=true;
      }
    }
 else     if (c == ')') {
      bracketCount--;
      if (bracketCount == 0) {
        checkArgument(i == signature.length() - 1,"Bad type signature: '%s'",signature);
        checkArgument(parameterStart >= 0,"Bad type signature: '%s'",signature);
        parameters.add(parseTypeSignature(signature.substring(parameterStart,i),literalParameters));
        return new TypeSignature(baseName,createNamedTypeParameters(parameters,fieldNames));
      }
    }
  }
  throw new IllegalArgumentException(format("Bad type signature: '%s'",signature));
}
