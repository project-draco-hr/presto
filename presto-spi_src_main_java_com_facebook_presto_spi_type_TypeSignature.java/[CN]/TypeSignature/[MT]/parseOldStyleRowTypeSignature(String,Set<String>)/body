{
  String baseName=null;
  List<TypeSignature> parameters=new ArrayList<>();
  List<String> fieldNames=new ArrayList<>();
  int parameterStart=-1;
  int bracketCount=0;
  boolean inLiteralParameters=false;
  for (int i=0; i < signature.length(); i++) {
    char c=signature.charAt(i);
    if (c == '<') {
      if (bracketCount == 0) {
        verify(baseName == null,"Expected baseName to be null");
        verify(parameterStart == -1,"Expected parameter start to be -1");
        baseName=signature.substring(0,i);
        parameterStart=i + 1;
      }
      bracketCount++;
    }
 else     if (c == '>') {
      bracketCount--;
      checkArgument(bracketCount >= 0,"Bad type signature: '%s'",signature);
      if (bracketCount == 0) {
        checkArgument(parameterStart >= 0,"Bad type signature: '%s'",signature);
        parameters.add(parseTypeSignature(signature.substring(parameterStart,i),literalParameters));
        parameterStart=i + 1;
      }
    }
 else     if (c == ',') {
      if (bracketCount == 1) {
        if (!inLiteralParameters) {
          checkArgument(parameterStart >= 0,"Bad type signature: '%s'",signature);
          parameters.add(parseTypeSignature(signature.substring(parameterStart,i),literalParameters));
          parameterStart=i + 1;
        }
 else {
          checkArgument(parameterStart >= 0,"Bad type signature: '%s'",signature);
          fieldNames.add(parseFieldName(signature.substring(parameterStart,i)));
          parameterStart=i + 1;
        }
      }
    }
 else     if (c == '(') {
      if (bracketCount == 0) {
        inLiteralParameters=true;
        if (baseName == null) {
          verify(parameters.isEmpty(),"Expected no parameters");
          verify(parameterStart == -1,"Expected parameter start to be -1");
          baseName=signature.substring(0,i);
        }
        parameterStart=i + 1;
      }
      bracketCount++;
    }
 else     if (c == ')') {
      bracketCount--;
      if (bracketCount == 0) {
        checkArgument(inLiteralParameters,"Bad type signature: '%s'",signature);
        inLiteralParameters=false;
        checkArgument(i == signature.length() - 1,"Bad type signature: '%s'",signature);
        checkArgument(parameterStart >= 0,"Bad type signature: '%s'",signature);
        fieldNames.add(parseFieldName(signature.substring(parameterStart,i)));
        return new TypeSignature(baseName,createNamedTypeParameters(parameters,fieldNames));
      }
    }
  }
  throw new IllegalArgumentException(format("Bad type signature: '%s'",signature));
}
