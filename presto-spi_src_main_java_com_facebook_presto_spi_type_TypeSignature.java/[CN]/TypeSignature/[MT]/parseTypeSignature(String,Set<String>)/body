{
  if (!signature.contains("<") && !signature.contains("(")) {
    return new TypeSignature(signature,new ArrayList<>());
  }
  if (signature.toLowerCase(Locale.ENGLISH).startsWith(StandardTypes.ROW + "(")) {
    return parseRowTypeSignature(signature,literalCalculationParameters);
  }
  if (signature.toLowerCase(Locale.ENGLISH).startsWith(StandardTypes.ROW + "<")) {
    return parseOldStyleRowTypeSignature(signature,literalCalculationParameters);
  }
  String baseName=null;
  List<TypeSignatureParameter> parameters=new ArrayList<>();
  int parameterStart=-1;
  int bracketCount=0;
  for (int i=0; i < signature.length(); i++) {
    char c=signature.charAt(i);
    if (c == '(' || c == '<') {
      if (bracketCount == 0) {
        verify(baseName == null,"Expected baseName to be null");
        verify(parameterStart == -1,"Expected parameter start to be -1");
        baseName=signature.substring(0,i);
        parameterStart=i + 1;
      }
      bracketCount++;
    }
 else     if (c == ')' || c == '>') {
      bracketCount--;
      checkArgument(bracketCount >= 0,"Bad type signature: '%s'",signature);
      if (bracketCount == 0) {
        checkArgument(parameterStart >= 0,"Bad type signature: '%s'",signature);
        parameters.add(parseTypeSignatureParameter(signature,parameterStart,i,literalCalculationParameters));
        parameterStart=i + 1;
        if (i == signature.length() - 1) {
          return new TypeSignature(baseName,parameters);
        }
      }
    }
 else     if (c == ',') {
      if (bracketCount == 1) {
        checkArgument(parameterStart >= 0,"Bad type signature: '%s'",signature);
        parameters.add(parseTypeSignatureParameter(signature,parameterStart,i,literalCalculationParameters));
        parameterStart=i + 1;
      }
    }
  }
  throw new IllegalArgumentException(format("Bad type signature: '%s'",signature));
}
