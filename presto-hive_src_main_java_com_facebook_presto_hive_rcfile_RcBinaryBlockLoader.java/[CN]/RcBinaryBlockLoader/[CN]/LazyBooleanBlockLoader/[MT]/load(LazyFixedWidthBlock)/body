{
  if (loaded) {
    return;
  }
  try {
    BytesRefArrayWritable columnBatch=batch.getColumn(fieldId);
    int positionInBatch=batch.getPositionInBatch();
    int positionCount=block.getPositionCount();
    boolean[] isNull=new boolean[positionCount];
    boolean[] vector=new boolean[positionCount];
    for (int i=0; i < positionCount; i++) {
      BytesRefWritable writable=columnBatch.unCheckedGet(i + positionInBatch);
      int length=writable.getLength();
      if (length != 0) {
        byte[] bytes=writable.getData();
        int start=writable.getStart();
        vector[i]=bytes[start] != 0;
      }
 else {
        isNull[i]=true;
      }
    }
    block.setNullVector(isNull);
    block.setRawSlice(wrappedBooleanArray(vector,0,positionCount));
    loaded=true;
  }
 catch (  IOException e) {
    throw Throwables.propagate(e);
  }
}
