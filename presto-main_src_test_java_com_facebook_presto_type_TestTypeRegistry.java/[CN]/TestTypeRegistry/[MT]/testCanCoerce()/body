{
  assertTrue(typeRegistry.canCoerce(BIGINT,BIGINT));
  assertTrue(typeRegistry.canCoerce(UNKNOWN,BIGINT));
  assertFalse(typeRegistry.canCoerce(BIGINT,UNKNOWN));
  assertTrue(typeRegistry.canCoerce(BIGINT,DOUBLE));
  assertTrue(typeRegistry.canCoerce(DATE,TIMESTAMP));
  assertTrue(typeRegistry.canCoerce(DATE,TIMESTAMP_WITH_TIME_ZONE));
  assertTrue(typeRegistry.canCoerce(TIME,TIME_WITH_TIME_ZONE));
  assertTrue(typeRegistry.canCoerce(TIMESTAMP,TIMESTAMP_WITH_TIME_ZONE));
  assertTrue(typeRegistry.canCoerce(VARCHAR,JONI_REGEXP));
  assertTrue(typeRegistry.canCoerce(VARCHAR,RE2J_REGEXP));
  assertTrue(typeRegistry.canCoerce(VARCHAR,LIKE_PATTERN));
  assertTrue(typeRegistry.canCoerce(VARCHAR,JSON_PATH));
  assertFalse(typeRegistry.canCoerce(DOUBLE,BIGINT));
  assertFalse(typeRegistry.canCoerce(TIMESTAMP,TIME_WITH_TIME_ZONE));
  assertFalse(typeRegistry.canCoerce(TIMESTAMP_WITH_TIME_ZONE,TIMESTAMP));
  assertFalse(typeRegistry.canCoerce(VARBINARY,VARCHAR));
  assertTrue(canCoerce("unknown","array(bigint)"));
  assertFalse(canCoerce("array(bigint)","unknown"));
  assertTrue(canCoerce("array(bigint)","array(double)"));
  assertFalse(canCoerce("array(double)","array(bigint)"));
  assertTrue(canCoerce("map(bigint,double)","map(bigint,double)"));
  assertTrue(canCoerce("map(bigint,double)","map(double,double)"));
  assertTrue(canCoerce("row(a bigint,b double,c varchar)","row(a bigint,b double,c varchar)"));
  assertTrue(canCoerce("varchar(42)","varchar(42)"));
  assertTrue(canCoerce("varchar(42)","varchar(44)"));
  assertFalse(canCoerce("varchar(44)","varchar(42)"));
}
