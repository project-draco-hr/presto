{
  assertCommonSuperType(UNKNOWN,UNKNOWN,UNKNOWN);
  assertCommonSuperType(BIGINT,BIGINT,BIGINT);
  assertCommonSuperType(UNKNOWN,BIGINT,BIGINT);
  assertCommonSuperType(BIGINT,DOUBLE,DOUBLE);
  assertCommonSuperType(DATE,TIMESTAMP,TIMESTAMP);
  assertCommonSuperType(DATE,TIMESTAMP_WITH_TIME_ZONE,TIMESTAMP_WITH_TIME_ZONE);
  assertCommonSuperType(TIME,TIME_WITH_TIME_ZONE,TIME_WITH_TIME_ZONE);
  assertCommonSuperType(TIMESTAMP,TIMESTAMP_WITH_TIME_ZONE,TIMESTAMP_WITH_TIME_ZONE);
  assertCommonSuperType(VARCHAR,JONI_REGEXP,JONI_REGEXP);
  assertCommonSuperType(VARCHAR,RE2J_REGEXP,RE2J_REGEXP);
  assertCommonSuperType(VARCHAR,LIKE_PATTERN,LIKE_PATTERN);
  assertCommonSuperType(VARCHAR,JSON_PATH,JSON_PATH);
  assertCommonSuperType(TIMESTAMP,TIME_WITH_TIME_ZONE,null);
  assertCommonSuperType(VARBINARY,VARCHAR,null);
  assertCommonSuperType("unknown","array(bigint)","array(bigint)");
  assertCommonSuperType("array(bigint)","array(double)","array(double)");
  assertCommonSuperType("array(bigint)","array(unknown)","array(bigint)");
  assertCommonSuperType("map(bigint,double)","map(bigint,double)","map(bigint,double)");
  assertCommonSuperType("map(bigint,double)","map(double,double)","map(double,double)");
  assertCommonSuperType("row(a bigint,b double,c varchar)","row(a bigint,b double,c varchar)","row(a bigint,b double,c varchar)");
  assertCommonSuperType("decimal(22,1)","decimal(23,1)","decimal(23,1)");
  assertCommonSuperType("bigint","decimal(23,1)","decimal(23,1)");
  assertCommonSuperType("bigint","decimal(18,0)","decimal(19,0)");
  assertCommonSuperType("bigint","decimal(19,0)","decimal(19,0)");
  assertCommonSuperType("bigint","decimal(37,1)","decimal(37,1)");
  assertCommonSuperType("array(decimal(23,1))","array(decimal(22,1))","array(decimal(23,1))");
  assertCommonSuperType("array(bigint)","array(decimal(2,1))","array(decimal(20,1))");
}
