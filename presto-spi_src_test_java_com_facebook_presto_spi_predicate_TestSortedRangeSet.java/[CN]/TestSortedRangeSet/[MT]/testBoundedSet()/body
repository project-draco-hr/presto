{
  SortedRangeSet rangeSet=SortedRangeSet.of(Range.equal(BIGINT,10L),Range.equal(BIGINT,0L),Range.range(BIGINT,9L,true,11L,false),Range.equal(BIGINT,0L),Range.range(BIGINT,2L,true,4L,true),Range.range(BIGINT,4L,false,5L,true));
  ImmutableList<Range> normalizedResult=ImmutableList.of(Range.equal(BIGINT,0L),Range.range(BIGINT,2L,true,5L,true),Range.range(BIGINT,9L,true,11L,false));
  SortedRangeSet complement=SortedRangeSet.of(Range.lessThan(BIGINT,0L),Range.range(BIGINT,0L,false,2L,false),Range.range(BIGINT,5L,false,9L,false),Range.greaterThanOrEqual(BIGINT,11L));
  Assert.assertEquals(rangeSet.getType(),BIGINT);
  Assert.assertFalse(rangeSet.isNone());
  Assert.assertFalse(rangeSet.isAll());
  Assert.assertFalse(rangeSet.isSingleValue());
  Assert.assertTrue(Iterables.elementsEqual(rangeSet.getOrderedRanges(),normalizedResult));
  Assert.assertEquals(rangeSet,SortedRangeSet.copyOf(BIGINT,normalizedResult));
  Assert.assertEquals(rangeSet.getRangeCount(),3);
  Assert.assertEquals(rangeSet.complement(),complement);
  Assert.assertFalse(rangeSet.includesMarker(Marker.lowerUnbounded(BIGINT)));
  Assert.assertTrue(rangeSet.includesMarker(Marker.exactly(BIGINT,0L)));
  Assert.assertFalse(rangeSet.includesMarker(Marker.exactly(BIGINT,1L)));
  Assert.assertFalse(rangeSet.includesMarker(Marker.exactly(BIGINT,7L)));
  Assert.assertTrue(rangeSet.includesMarker(Marker.exactly(BIGINT,9L)));
  Assert.assertFalse(rangeSet.includesMarker(Marker.upperUnbounded(BIGINT)));
}
