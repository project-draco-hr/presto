{
  assertEquals(tokenizePath("$"),ImmutableList.of());
  assertEquals(tokenizePath("$"),ImmutableList.of());
  assertEquals(tokenizePath("$.foo"),ImmutableList.of("foo"));
  assertEquals(tokenizePath("$[\"foo\"]"),ImmutableList.of("foo"));
  assertEquals(tokenizePath("$[\"foo.bar\"]"),ImmutableList.of("foo.bar"));
  assertEquals(tokenizePath("$[42]"),ImmutableList.of("42"));
  assertEquals(tokenizePath("$.42"),ImmutableList.of("42"));
  assertEquals(tokenizePath("$.42.63"),ImmutableList.of("42","63"));
  assertEquals(tokenizePath("$.foo.42.bar.63"),ImmutableList.of("foo","42","bar","63"));
  assertEquals(tokenizePath("$.x.foo"),ImmutableList.of("x","foo"));
  assertEquals(tokenizePath("$.x[\"foo\"]"),ImmutableList.of("x","foo"));
  assertEquals(tokenizePath("$.x[42]"),ImmutableList.of("x","42"));
  assertEquals(tokenizePath("$.foo_42._bar63"),ImmutableList.of("foo_42","_bar63"));
  assertEquals(tokenizePath("$[foo_42][_bar63]"),ImmutableList.of("foo_42","_bar63"));
  assertEquals(tokenizePath("$.foo:42.:bar63"),ImmutableList.of("foo:42",":bar63"));
  assertEquals(tokenizePath("$[\"foo:42\"][\":bar63\"]"),ImmutableList.of("foo:42",":bar63"));
  assertPathToken("foo");
  assertQuotedPathToken("-1.1");
  assertQuotedPathToken("!@#$%^&*()[]{}/?'");
  assertQuotedPathToken("ab\\u0001c");
  assertQuotedPathToken("ab\0c");
  assertQuotedPathToken("ab\t\n\rc");
  assertQuotedPathToken(".");
  assertQuotedPathToken("$");
  assertQuotedPathToken("]");
  assertQuotedPathToken("[");
  assertQuotedPathToken("'");
  assertQuotedPathToken("!@#$%^&*(){}[]<>?/\\|.,`~\r\n\t \0");
  assertInvalidPath("$[foo:bar]");
  assertInvalidPath(" $.x");
  assertInvalidPath(" $.x ");
  assertInvalidPath("$. x");
  assertInvalidPath("$ .x");
  assertInvalidPath("$\n.x");
  assertInvalidPath("$.x [42]");
  assertInvalidPath("$.x[ 42]");
  assertInvalidPath("$.x[42 ]");
  assertInvalidPath("$.x[ \"foo\"]");
  assertInvalidPath("$.x[\"foo\" ]");
}
