{
  assertEquals(tokenizePath("$"),ImmutableList.of());
  assertEquals(tokenizePath("$.foo"),ImmutableList.of("foo"));
  assertEquals(tokenizePath("$[\"foo\"]"),ImmutableList.of("foo"));
  assertEquals(tokenizePath("$[\"foo.bar\"]"),ImmutableList.of("foo.bar"));
  assertEquals(tokenizePath("$[42]"),ImmutableList.of(42));
  assertEquals(tokenizePath("$.x.foo"),ImmutableList.of("x","foo"));
  assertEquals(tokenizePath("$.x[\"foo\"]"),ImmutableList.of("x","foo"));
  assertEquals(tokenizePath("$.x[42]"),ImmutableList.of("x",42));
  assertPathToken("foo");
  assertQuotedPathToken("42");
  assertQuotedPathToken("1.1");
  assertQuotedPathToken("-1.1");
  assertQuotedPathToken("!@#$%^&*()[]{}/?'");
  assertQuotedPathToken("ab\\u0001c");
  assertQuotedPathToken("ab\0c");
  assertQuotedPathToken("ab\t\n\rc");
  assertQuotedPathToken(".");
  assertQuotedPathToken("$");
  assertQuotedPathToken("]");
  assertQuotedPathToken("[");
  assertQuotedPathToken("'");
  assertQuotedPathToken("!@#$%^&*(){}[]<>?/\\|.,`~\r\n\t \0");
}
