{
  Duration elapsedTime=Duration.nanosSince(start);
  int stages=queryInfo.getStages().size();
  int completeStages=queryInfo.getStages().size();
  State overallState=State.PREPARING;
  int startedSplits=0;
  int completedSplits=0;
  int totalSplits=0;
  long splitCpuTime=0;
  long inputDataSize=0;
  long inputPositions=0;
  long completedDataSize=0;
  long completedPositions=0;
  for (  QueryInfo info : concat(ImmutableList.of(queryInfo),concat(queryInfo.getStages().values()))) {
    totalSplits+=info.getSplits();
    startedSplits+=info.getStartedSplits();
    completedSplits+=info.getCompletedSplits();
    splitCpuTime+=info.getSplitCpuTime();
    inputDataSize+=info.getInputDataSize();
    inputPositions+=info.getInputPositionCount();
    completedDataSize+=info.getCompletedDataSize();
    completedPositions+=info.getCompletedPositionCount();
switch (info.getState()) {
case RUNNING:
      if (overallState == State.PREPARING) {
        overallState=State.RUNNING;
      }
    break;
case FINISHED:
case CANCELED:
  if (overallState != State.FAILED) {
    overallState=State.CANCELED;
  }
break;
case FAILED:
overallState=State.FAILED;
break;
}
}
if (totalSplits > 0 && completedSplits == totalSplits && (overallState == State.PREPARING || overallState == State.RUNNING)) {
overallState=State.FINISHED;
}
Duration cpuTime=new Duration(splitCpuTime,TimeUnit.MILLISECONDS);
String infoString=String.format("%s QueryId %s: Stages [%,d of %,d]: Splits [%,d total, %,d pending, %,d running, %,d finished]: Input [%,d rows %s]: CPU Time %s %s: Elapsed %s %s",overallState,queryInfo.getQueryId(),completeStages,stages,totalSplits,totalSplits - startedSplits,startedSplits - completedSplits,completedSplits,inputPositions,formatDataSize(inputDataSize),cpuTime.toString(TimeUnit.SECONDS),formatDataRate(completedDataSize,cpuTime),elapsedTime.toString(TimeUnit.SECONDS),formatDataRate(completedDataSize,elapsedTime));
if (infoString.length() < maxInfoString) {
infoString=String.format("%-" + maxInfoString + "s",infoString);
}
maxInfoString=infoString.length();
return infoString;
}
