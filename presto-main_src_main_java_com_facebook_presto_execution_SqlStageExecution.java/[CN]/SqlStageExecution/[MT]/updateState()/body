{
  for (  RemoteTask task : tasks) {
    task.updateState();
  }
  for (  StageExecution subStage : subStages) {
    subStage.updateState();
  }
  if (stageState.get().isDone()) {
    return;
  }
  List<TaskState> taskStates=ImmutableList.copyOf(transform(transform(tasks,taskInfoGetter()),taskStateGetter()));
  if (any(taskStates,equalTo(TaskState.FAILED))) {
    stageState.set(StageState.FAILED);
    cancelAll();
  }
 else   if (all(taskStates,TaskState.inDoneState())) {
    stageState.set(StageState.FINISHED);
  }
 else   if (any(taskStates,equalTo(TaskState.RUNNING))) {
    stageState.set(StageState.RUNNING);
  }
 else   if (any(taskStates,equalTo(TaskState.QUEUED))) {
    stageState.set(StageState.SCHEDULED);
  }
}
