{
  Preconditions.checkState(!Thread.holdsLock(this),"Can not update state while holding a lock on this");
  for (  RemoteTask task : tasks) {
    try {
      task.updateState();
    }
 catch (    Exception e) {
      log.debug(e,"Error updating task info");
    }
  }
  for (  StageExecution subStage : subStages) {
    subStage.updateState();
  }
synchronized (this) {
    if (stageState.get().isDone()) {
      return;
    }
    List<StageState> subStageStates=ImmutableList.copyOf(transform(transform(subStages,stageInfoGetter()),stageStateGetter()));
    if (any(subStageStates,equalTo(StageState.FAILED))) {
      stageState.set(StageState.FAILED);
    }
 else {
      List<TaskState> taskStates=ImmutableList.copyOf(transform(transform(tasks,taskInfoGetter()),taskStateGetter()));
      if (any(taskStates,equalTo(TaskState.FAILED))) {
        stageState.set(StageState.FAILED);
      }
 else       if (all(taskStates,TaskState.inDoneState())) {
        stageState.set(StageState.FINISHED);
      }
 else       if (any(taskStates,equalTo(TaskState.RUNNING))) {
        stageState.set(StageState.RUNNING);
      }
 else       if (any(taskStates,equalTo(TaskState.QUEUED))) {
        stageState.set(StageState.SCHEDULED);
      }
    }
  }
  if (stageState.get().isDone()) {
    cancelAll();
  }
}
