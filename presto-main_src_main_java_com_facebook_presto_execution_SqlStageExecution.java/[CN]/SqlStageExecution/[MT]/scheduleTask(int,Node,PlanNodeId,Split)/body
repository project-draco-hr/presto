{
  addNewExchangesAndBuffers();
  String nodeIdentifier=node.getNodeIdentifier();
  TaskId taskId=new TaskId(stageId,String.valueOf(id));
  ImmutableMultimap.Builder<PlanNodeId,Split> initialSplits=ImmutableMultimap.builder();
  if (sourceId != null) {
    initialSplits.put(sourceId,sourceSplit);
  }
  for (  Entry<PlanNodeId,URI> entry : exchangeLocations.get().entries()) {
    initialSplits.put(entry.getKey(),createRemoteSplitFor(node.getNodeIdentifier(),entry.getValue()));
  }
  RemoteTask task=remoteTaskFactory.createRemoteTask(session,taskId,node,fragment,initialSplits.build(),outputReceivers,currentOutputBuffers);
  task.addStateChangeListener(new StateChangeListener<TaskInfo>(){
    @Override public void stateChanged(    TaskInfo taskInfo){
      doUpdateState();
    }
  }
);
  task.start();
  tasks.put(node,task);
  doUpdateState();
  if (getState().isDone()) {
    return task;
  }
  addSubStageBufferId(nodeIdentifier);
  return task;
}
