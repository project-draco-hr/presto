{
  try (SetThreadName setThreadName=new SetThreadName("Stage-%s",stageId)){
    StageState state=stageState.get();
    List<TaskInfo> taskInfos=IterableTransformer.on(tasks.values()).transform(taskInfoGetter()).list();
    List<StageInfo> subStageInfos=IterableTransformer.on(subStages.values()).transform(stageInfoGetter()).list();
    int totalTasks=taskInfos.size();
    int runningTasks=0;
    int completedTasks=0;
    int totalDrivers=0;
    int queuedDrivers=0;
    int runningDrivers=0;
    int completedDrivers=0;
    long totalMemoryReservation=0;
    long totalScheduledTime=0;
    long totalCpuTime=0;
    long totalUserTime=0;
    long totalBlockedTime=0;
    long rawInputDataSize=0;
    long rawInputPositions=0;
    long processedInputDataSize=0;
    long processedInputPositions=0;
    long outputDataSize=0;
    long outputPositions=0;
    for (    TaskInfo taskInfo : taskInfos) {
      if (taskInfo.getState().isDone()) {
        completedTasks++;
      }
 else {
        runningTasks++;
      }
      TaskStats taskStats=taskInfo.getStats();
      totalDrivers+=taskStats.getTotalDrivers();
      queuedDrivers+=taskStats.getQueuedDrivers();
      runningDrivers+=taskStats.getRunningDrivers();
      completedDrivers+=taskStats.getCompletedDrivers();
      totalMemoryReservation+=taskStats.getMemoryReservation().toBytes();
      totalScheduledTime+=taskStats.getTotalScheduledTime().roundTo(NANOSECONDS);
      totalCpuTime+=taskStats.getTotalCpuTime().roundTo(NANOSECONDS);
      totalUserTime+=taskStats.getTotalUserTime().roundTo(NANOSECONDS);
      totalBlockedTime+=taskStats.getTotalBlockedTime().roundTo(NANOSECONDS);
      rawInputDataSize+=taskStats.getRawInputDataSize().toBytes();
      rawInputPositions+=taskStats.getRawInputPositions();
      processedInputDataSize+=taskStats.getProcessedInputDataSize().toBytes();
      processedInputPositions+=taskStats.getProcessedInputPositions();
      outputDataSize+=taskStats.getOutputDataSize().toBytes();
      outputPositions+=taskStats.getOutputPositions();
    }
    StageStats stageStats=new StageStats(schedulingComplete.get(),getSplitDistribution.snapshot(),scheduleTaskDistribution.snapshot(),addSplitDistribution.snapshot(),totalTasks,runningTasks,completedTasks,totalDrivers,queuedDrivers,runningDrivers,completedDrivers,new DataSize(totalMemoryReservation,BYTE).convertToMostSuccinctDataSize(),new Duration(totalScheduledTime,NANOSECONDS).convertToMostSuccinctTimeUnit(),new Duration(totalCpuTime,NANOSECONDS).convertToMostSuccinctTimeUnit(),new Duration(totalUserTime,NANOSECONDS).convertToMostSuccinctTimeUnit(),new Duration(totalBlockedTime,NANOSECONDS).convertToMostSuccinctTimeUnit(),new DataSize(rawInputDataSize,BYTE).convertToMostSuccinctDataSize(),rawInputPositions,new DataSize(processedInputDataSize,BYTE).convertToMostSuccinctDataSize(),processedInputPositions,new DataSize(outputDataSize,BYTE).convertToMostSuccinctDataSize(),outputPositions);
    return new StageInfo(stageId,state,location,fragment,tupleInfos,stageStats,taskInfos,subStageInfos,toFailures(failureCauses));
  }
 }
