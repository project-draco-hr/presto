{
  checkState(!Thread.holdsLock(this),"Can not doUpdateState while holding a lock on this");
  try (SetThreadName setThreadName=new SetThreadName("Stage-%s",stageId)){
synchronized (this) {
      this.notifyAll();
      StageState currentState=stageState.get();
      if (currentState.isDone()) {
        return;
      }
      List<StageState> subStageStates=ImmutableList.copyOf(transform(transform(subStages.values(),stageInfoGetter()),stageStateGetter()));
      if (any(subStageStates,equalTo(StageState.FAILED))) {
        stageState.set(StageState.FAILED);
      }
 else {
        List<TaskState> taskStates=ImmutableList.copyOf(transform(transform(tasks.values(),taskInfoGetter()),taskStateGetter()));
        if (any(taskStates,equalTo(TaskState.FAILED))) {
          stageState.set(StageState.FAILED);
        }
 else         if (currentState != StageState.PLANNED && currentState != StageState.SCHEDULING) {
          if (all(taskStates,TaskState.inDoneState())) {
            stageState.set(StageState.FINISHED);
          }
 else           if (any(taskStates,equalTo(TaskState.RUNNING))) {
            stageState.set(StageState.RUNNING);
          }
        }
      }
    }
    if (stageState.get().isDone()) {
      cancel(false);
    }
  }
 }
