{
  Preconditions.checkNotNull(queryId,"queryId is null");
  Preconditions.checkNotNull(stageId,"stageId is null");
  Preconditions.checkNotNull(location,"location is null");
  Preconditions.checkNotNull(plan,"plan is null");
  Preconditions.checkNotNull(subStages,"subStages is null");
  this.queryId=queryId;
  this.stageId=stageId;
  this.location=location;
  this.plan=plan;
  this.subStages=IterableTransformer.on(subStages).cast(SqlStageExecution.class).uniqueIndex(fragmentIdGetter()).immutableMap();
  this.nodeManager=nodeManager;
  this.splits=splits;
  this.remoteTaskFactory=remoteTaskFactory;
  this.session=session;
  this.queryState=queryState;
  tupleInfos=ImmutableList.copyOf(IterableTransformer.on(plan.getRoot().getOutputSymbols()).transform(Functions.forMap(plan.getSymbols())).transform(com.facebook.presto.sql.analyzer.Type.toRaw()).transform(new Function<Type,TupleInfo>(){
    @Override public TupleInfo apply(    Type input){
      return new TupleInfo(input);
    }
  }
).list());
}
