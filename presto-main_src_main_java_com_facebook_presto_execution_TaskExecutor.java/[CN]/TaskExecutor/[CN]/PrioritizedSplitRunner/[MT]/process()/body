{
  try {
    start.compareAndSet(0,System.currentTimeMillis());
    processCalls.incrementAndGet();
    CpuTimer timer=new CpuTimer();
    ListenableFuture<?> blocked=split.processFor(SPLIT_RUN_QUANTA);
    CpuTimer.CpuDuration elapsed=timer.elapsedTime();
    long durationNanos=elapsed.getWall().roundTo(NANOSECONDS);
    long threadUsageNanos=taskHandle.addThreadUsageNanos(durationNanos);
    this.threadUsageNanos.set(threadUsageNanos);
    priorityLevel.set(calculatePriorityLevel(threadUsageNanos));
    lastRun.set(ticker.read());
    cpuTime.addAndGet(elapsed.getCpu().roundTo(NANOSECONDS));
    return blocked;
  }
 catch (  Throwable e) {
    finishedFuture.setException(e);
    throw e;
  }
}
