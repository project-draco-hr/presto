{
  DateTime oldestAllowedTask=DateTime.now().minus((long)maxTaskAge.toMillis());
  for (  TaskExecution taskExecution : tasks.values()) {
    try {
      TaskInfo taskInfo=taskExecution.getTaskInfo(false);
      if (taskInfo.getState().isDone()) {
        cancelTask(taskExecution.getTaskId());
      }
      DateTime endTime=taskInfo.getStats().getEndTime();
      if (endTime != null && endTime.isBefore(oldestAllowedTask)) {
        taskInfos.remove(taskExecution.getTaskId());
      }
    }
 catch (    Exception e) {
      log.warn(e,"Error while inspecting age of task %s",taskExecution.getTaskId());
    }
  }
}
