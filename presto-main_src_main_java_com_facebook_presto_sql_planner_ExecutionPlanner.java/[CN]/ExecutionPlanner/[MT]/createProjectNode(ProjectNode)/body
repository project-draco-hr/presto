{
  PlanNode source=Iterables.getOnlyElement(node.getSources());
  Operator sourceOperator=plan(Iterables.getOnlyElement(node.getSources()));
  FilterFunction trueFunction=new FilterFunction(){
    @Override public boolean filter(    BlockCursor[] cursors){
      return true;
    }
  }
;
  Map<Slot,Integer> slotToChannelMappings=mapSlotsToChannels(source.getOutputs());
  List<ProjectionFunction> projections=new ArrayList<>();
  for (int i=0; i < node.getExpressions().size(); i++) {
    Slot slot=node.getOutputs().get(i);
    Expression expression=node.getExpressions().get(i);
    ProjectionFunction function=new InterpretedProjectionFunction(slot.getType(),expression,slotToChannelMappings);
    projections.add(function);
  }
  return new FilterAndProjectOperator(sourceOperator,trueFunction,projections);
}
