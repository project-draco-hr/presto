{
  PlanNode source=Iterables.getOnlyElement(node.getSources());
  Operator sourceOperator=plan(Iterables.getOnlyElement(node.getSources()));
  Map<Symbol,Integer> symbolToChannelMappings=mapSymbolsToChannels(source.getOutputSymbols());
  List<ProjectionFunction> projections=new ArrayList<>();
  for (int i=0; i < node.getExpressions().size(); i++) {
    Symbol symbol=node.getOutputSymbols().get(i);
    Expression expression=node.getExpressions().get(i);
    ProjectionFunction function=new InterpretedProjectionFunction(analysis.getType(symbol),expression,symbolToChannelMappings,analysis.getTypes());
    projections.add(function);
  }
  return new FilterAndProjectOperator(sourceOperator,FilterFunctions.TRUE_FUNCTION,projections);
}
