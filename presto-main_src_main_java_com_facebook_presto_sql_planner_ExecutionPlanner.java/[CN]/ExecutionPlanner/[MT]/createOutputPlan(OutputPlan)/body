{
  PlanNode source=node.getSource();
  Operator sourceOperator=plan(node.getSource());
  Map<Symbol,Integer> symbolToChannelMappings=mapSymbolsToChannels(source.getOutputSymbols());
  List<Symbol> resultSymbols=Lists.transform(node.getColumnNames(),forMap(node.getAssignments()));
  if (resultSymbols.equals(source.getOutputSymbols())) {
    return sourceOperator;
  }
  List<ProjectionFunction> projections=new ArrayList<>();
  for (  Symbol symbol : resultSymbols) {
    ProjectionFunction function=new InterpretedProjectionFunction(analysis.getType(symbol),new QualifiedNameReference(symbol.toQualifiedName()),symbolToChannelMappings,analysis.getTypes());
    projections.add(function);
  }
  return new FilterAndProjectOperator(sourceOperator,FilterFunctions.TRUE_FUNCTION,projections);
}
