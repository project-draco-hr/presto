{
  Block constructor=classDefinition.declareConstructor(new CompilerContext(bootstrapMethod),a(PUBLIC),arg("channels",type(List.class,type(List.class,RandomAccessBlock.class)))).getBody().comment("super();").pushThis().invokeConstructor(Object.class);
  constructor.comment("Set channel fields");
  for (int index=0; index < channelFields.size(); index++) {
    constructor.pushThis().getVariable("channels").push(index).invokeInterface(List.class,"get",Object.class,int.class).checkCast(type(List.class,RandomAccessBlock.class)).putField(channelFields.get(index));
  }
  constructor.comment("Set hash channel fields");
  for (int index=0; index < hashChannelFields.size(); index++) {
    constructor.pushThis().getVariable("channels").push(hashChannels.get(index)).invokeInterface(List.class,"get",Object.class,int.class).checkCast(type(List.class,RandomAccessBlock.class)).putField(hashChannelFields.get(index));
  }
  constructor.ret();
}
