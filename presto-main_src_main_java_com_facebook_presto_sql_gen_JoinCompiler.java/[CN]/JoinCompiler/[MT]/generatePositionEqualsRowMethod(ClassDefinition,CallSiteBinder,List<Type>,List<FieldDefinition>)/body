{
  Parameter leftBlockIndex=arg("leftBlockIndex",int.class);
  Parameter leftBlockPosition=arg("leftBlockPosition",int.class);
  Parameter rightPosition=arg("rightPosition",int.class);
  Parameter rightBlocks=arg("rightBlocks",Block[].class);
  MethodDefinition positionEqualsRowMethod=classDefinition.declareMethod(a(PUBLIC),"positionEqualsRow",type(boolean.class),leftBlockIndex,leftBlockPosition,rightPosition,rightBlocks);
  Variable thisVariable=positionEqualsRowMethod.getThis();
  for (int index=0; index < joinChannelTypes.size(); index++) {
    ByteCodeExpression type=constantType(callSiteBinder,joinChannelTypes.get(index));
    ByteCodeExpression leftBlock=thisVariable.getField(joinChannelFields.get(index)).invoke("get",Object.class,leftBlockIndex).cast(Block.class);
    ByteCodeExpression rightBlock=rightBlocks.getElement(index);
    LabelNode checkNextField=new LabelNode("checkNextField");
    positionEqualsRowMethod.getBody().append(typeEquals(type,leftBlock,leftBlockPosition,rightBlock,rightPosition)).ifTrueGoto(checkNextField).push(false).retBoolean().visitLabel(checkNextField);
  }
  positionEqualsRowMethod.getBody().push(true).retInt();
}
