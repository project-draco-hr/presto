{
  QueryTemplate.Parameter type=new QueryTemplate.Parameter("type","");
  QueryTemplate.Parameter condition=new QueryTemplate.Parameter("condition","true");
  QueryTemplate queryTemplate=new QueryTemplate("SELECT * FROM (VALUES 1,2,3,4) t(x) %type% JOIN (VALUES 1,2,3,5) t2(y) ON %condition%",type,condition);
  QueryTemplate.Parameter twoDuplicatedInSubqueriesCondition=condition.of("(x in (VALUES 1,2,3)) = (y in (VALUES 1,2,3)) AND (x in (VALUES 1,2,4)) = (y in (VALUES 1,2,4))");
  assertQuery(queryTemplate.replace(twoDuplicatedInSubqueriesCondition),"VALUES (1,1), (1,2), (2,2), (2,1), (3,3)");
  assertQuery(queryTemplate.replace(condition.of("(x in (VALUES 1,2)) = (y in (VALUES 1,2)) AND (x in (VALUES 1)) = (y in (VALUES 3))")),"VALUES (2,2), (2,1), (3,5), (4,5)");
  assertQuery(queryTemplate.replace(condition.of("(x in (VALUES 1,2)) = (y in (VALUES 1,2)) AND (x in (VALUES 1)) != (y in (VALUES 3))")),"VALUES (1,2), (1,1), (3, 3), (4,3)");
  assertQuery(queryTemplate.replace(condition.of("(x in (VALUES 1)) = (y in (VALUES 1)) AND (x in (SELECT 2)) != (y in (SELECT 2))")),"VALUES (2,3), (2,5), (3, 2), (4,2)");
  QueryTemplate.Parameter left=type.of("left");
  QueryTemplate.Parameter right=type.of("right");
  QueryTemplate.Parameter full=type.of("full");
  for (  QueryTemplate.Parameter joinType : ImmutableList.of(left,right,full)) {
    for (    String joinCondition : ImmutableList.of("x IN (VALUES 1)","y in (VALUES 1)")) {
      assertQueryFails(queryTemplate.replace(joinType,condition.of(joinCondition)),".*IN with subquery predicate in join condition is not supported");
    }
  }
  assertQuery(queryTemplate.replace(left,twoDuplicatedInSubqueriesCondition),"VALUES (1,1), (1,2), (2,2), (2,1), (3,3), (4, null)");
  assertQuery(queryTemplate.replace(right,twoDuplicatedInSubqueriesCondition),"VALUES (1,1), (1,2), (2,2), (2,1), (3,3), (null, 5)");
  assertQuery(queryTemplate.replace(full,twoDuplicatedInSubqueriesCondition),"VALUES (1,1), (1,2), (2,2), (2,1), (3,3), (4, null), (null, 5)");
}
