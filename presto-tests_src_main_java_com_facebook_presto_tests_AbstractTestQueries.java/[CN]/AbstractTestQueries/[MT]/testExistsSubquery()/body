{
  assertQuery("SELECT EXISTS(SELECT NOT EXISTS(SELECT EXISTS(SELECT 1)))");
  assertQuery("SELECT COUNT(*) FROM lineitem WHERE " + "EXISTS(SELECT max(orderkey) FROM orders)");
  assertQuery("SELECT COUNT(*) FROM lineitem WHERE " + "NOT EXISTS(SELECT max(orderkey) FROM orders)");
  assertQuery("SELECT COUNT(*) FROM lineitem WHERE " + "NOT EXISTS(SELECT orderkey FROM orders WHERE false)");
  assertQuery("SELECT COUNT(*) FROM lineitem WHERE " + "EXISTS(SELECT orderkey FROM orders WHERE false)");
  assertQuery("SELECT COUNT(*) FROM lineitem WHERE " + "NOT EXISTS(SELECT orderkey FROM orders WHERE false)");
  assertQuery("SELECT (EXISTS(SELECT 1)) IN (false)","SELECT false");
  assertQuery("SELECT (NOT EXISTS(SELECT 1)) IN (false)","SELECT true");
  assertQuery("SELECT (EXISTS(SELECT 1)) IN (true, false)","SELECT true");
  assertQuery("SELECT (NOT EXISTS(SELECT 1)) IN (true, false)","SELECT true");
  assertQuery("SELECT (EXISTS(SELECT 1 WHERE false)) IN (true, false)","SELECT true");
  assertQuery("SELECT (NOT EXISTS(SELECT 1 WHERE false)) IN (true, false)","SELECT true");
  assertQuery("SELECT (EXISTS(SELECT 1 WHERE false)) IN (false)","SELECT true");
  assertQuery("SELECT (NOT EXISTS(SELECT 1 WHERE false)) IN (false)","SELECT false");
  assertQuery("SELECT (EXISTS(SELECT 1)) = (EXISTS(SELECT 1)) WHERE NOT EXISTS(SELECT 1)","SELECT true WHERE false");
  assertQuery("SELECT (EXISTS(SELECT 1)) = (EXISTS(SELECT 3)) WHERE NOT EXISTS(SELECT 1 WHERE false)","SELECT true");
  assertQuery("SELECT COUNT(*) FROM lineitem WHERE " + "(EXISTS(SELECT min(orderkey) FROM orders))" + "="+ "(NOT EXISTS(SELECT orderkey FROM orders WHERE false))","SELECT count(*) FROM lineitem");
  assertQuery("SELECT EXISTS(SELECT 1), EXISTS(SELECT 1), EXISTS(SELECT 3), NOT EXISTS(SELECT 1), NOT EXISTS(SELECT 1 WHERE false)");
  assertQuery("SELECT DISTINCT orderkey FROM lineitem " + "WHERE EXISTS(SELECT avg(orderkey) FROM orders)");
  QueryTemplate.Parameter joinType=new QueryTemplate.Parameter("join_type");
  QueryTemplate.Parameter condition=new QueryTemplate.Parameter("condition");
  QueryTemplate queryTemplate=new QueryTemplate("SELECT o1.orderkey, COUNT(*) " + "FROM orders o1 %join_type% JOIN (SELECT * FROM orders LIMIT 10) o2 ON %condition% " + "GROUP BY o1.orderkey ORDER BY o1.orderkey LIMIT 5",joinType,condition);
  List<QueryTemplate.Parameter> conditions=condition.of("EXISTS(SELECT avg(orderkey) FROM ORDERS)","(SELECT avg(orderkey) FROM ORDERS) > 3");
  for (  QueryTemplate.Parameter actualCondition : conditions) {
    for (    QueryTemplate.Parameter actualJoinType : joinType.of("","LEFT","RIGHT")) {
      assertQuery(queryTemplate.replace(actualJoinType,actualCondition));
    }
    assertQuery(queryTemplate.replace(joinType.of("FULL"),actualCondition),"VALUES (1, 10), (2, 10), (3, 10), (4, 10), (5, 10)");
  }
  assertQuery("SELECT orderkey, totalprice FROM orders ORDER BY EXISTS(SELECT 2)");
  assertQuery("SELECT orderkey, totalprice FROM orders ORDER BY NOT(EXISTS(SELECT 2))");
}
