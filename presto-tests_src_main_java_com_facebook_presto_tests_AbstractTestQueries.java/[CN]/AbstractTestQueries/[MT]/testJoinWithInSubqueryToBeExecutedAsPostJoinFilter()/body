{
  QueryTemplate.Parameter type=new QueryTemplate.Parameter("type","");
  QueryTemplate.Parameter condition=new QueryTemplate.Parameter("condition","true");
  QueryTemplate queryTemplate=new QueryTemplate("SELECT * FROM (VALUES 1,2,3,4) t(x) %type% JOIN (VALUES 1,2,3,5) t2(y) ON %condition%",type,condition);
  assertQuery(queryTemplate.resolve(condition.of("(x+y in (VALUES 4))")),"VALUES (1,3), (2,2), (3,1)");
  assertQuery(queryTemplate.resolve(condition.of("(x+y in (VALUES 4)) AND (x*y in (VALUES 4,5))")),"VALUES (2,2)");
  assertQuery(queryTemplate.resolve(condition.of("(x+y in (VALUES 4,5)) AND (x*y IN (VALUES 4,5))")),"VALUES (4,1), (2,2)");
  assertQuery(queryTemplate.resolve(condition.of("(x+y in (VALUES 4,5)) AND (x in (VALUES 4,5)) != (y in (VALUES 4,5))")),"VALUES (4,1)");
  for (  QueryTemplate.Parameter joinType : ImmutableList.of(type.of("left"),type.of("right"),type.of("full"))) {
    assertQueryFails(queryTemplate.resolve(joinType,condition.of("(x+y in (VALUES 4,5)) AND (x in (VALUES 4,5)) != (y in (VALUES 4,5))")),".*IN with subquery predicate in join condition is not supported");
  }
}
