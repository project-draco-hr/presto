{
  assertQuery("SELECT (SELECT round(3 * avg(i.a)) FROM (VALUES 1, 1, 1, 2, 2, 3, 4) i(a) WHERE i.a < o.a AND i.a < 4) " + "FROM (VALUES 0, 3, 3, 5) o(a)","VALUES null, 4, 4, 5");
  assertQuery("SELECT count(*) FROM orders o " + "WHERE (SELECT avg(i.orderkey) FROM orders i " + "WHERE o.orderkey < i.orderkey AND i.orderkey % 10000 = 0) > 100","VALUES 14999");
  assertQuery("SELECT orderkey FROM orders o ORDER BY " + "(SELECT avg(i.orderkey) FROM orders i WHERE o.orderkey < i.orderkey AND i.orderkey % 10000 = 0)");
  assertQuery("SELECT max(o.orderdate), o.orderkey, " + "(SELECT avg(i.orderkey) FROM orders i WHERE o.orderkey < i.orderkey AND i.orderkey % 10000 = 0) " + "FROM orders o GROUP BY o.orderkey ORDER BY o.orderkey LIMIT 1","VALUES ('1996-01-02', 1, 40000.0)");
  assertQuery("SELECT max(o.orderdate), o.orderkey " + "FROM orders o " + "GROUP BY o.orderkey "+ "HAVING 40000 < (SELECT avg(i.orderkey) FROM orders i WHERE o.orderkey < i.orderkey AND i.orderkey % 10000 = 0)"+ "ORDER BY o.orderkey LIMIT 1","VALUES ('1996-07-24', 20000)");
  assertQuery("SELECT max(o.orderdate), o.orderkey FROM orders o " + "GROUP BY o.orderkey, (SELECT avg(i.orderkey) FROM orders i WHERE o.orderkey < i.orderkey AND i.orderkey % 10000 = 0)" + "ORDER BY o.orderkey LIMIT 1","VALUES ('1996-01-02', 1)");
  assertQuery("SELECT count(*) " + "FROM (SELECT * FROM orders ORDER BY orderkey LIMIT 10) o1 " + "JOIN (SELECT * FROM orders ORDER BY orderkey LIMIT 5) o2 "+ "ON NOT 1 = (SELECT avg(i.orderkey) FROM orders i WHERE o1.orderkey < o2.orderkey AND i.orderkey % 10000 = 0)");
  assertQueryFails("SELECT count(*) FROM orders o1 LEFT JOIN orders o2 " + "ON NOT 1 = (SELECT avg(i.orderkey) FROM orders i WHERE o1.orderkey < o2.orderkey)","line .*: Correlated subquery in given context is not supported");
  assertQuery("SELECT count(*) FROM orders o " + "WHERE 100 < (SELECT * " + "FROM (SELECT (SELECT avg(i.orderkey) FROM orders i WHERE o.orderkey < i.orderkey AND i.orderkey % 10000 = 0)))","VALUES 14999");
}
