{
  DirectedPseudograph<String,DefaultEdge> graph=new DirectedPseudograph<String,DefaultEdge>(DefaultEdge.class);
  for (  QueryQueueRule rule : rules) {
    String lastQueueName=null;
    for (    QueryQueueDefinition queue : rule.getQueues()) {
      String currentQueueName=queue.getTemplate();
      graph.addVertex(currentQueueName);
      if (lastQueueName != null) {
        graph.addEdge(lastQueueName,currentQueueName);
      }
      lastQueueName=currentQueueName;
    }
  }
  List<String> shortestCycle=shortestCycle(graph);
  if (shortestCycle != null) {
    String s=Joiner.on(", ").join(shortestCycle);
    throw new IllegalArgumentException(format("Queues must not contain a cycle. The shortest cycle found is [%s]",s));
  }
}
