{
  try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(null,null,null,null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(getTablesRow("information_schema","tables")));
      assertTrue(rows.contains(getTablesRow("information_schema","schemata")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(TEST_CATALOG,null,null,null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(getTablesRow("information_schema","tables")));
      assertTrue(rows.contains(getTablesRow("information_schema","schemata")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables("",null,null,null)){
      assertTableMetadata(rs);
      assertEquals(readRows(rs).size(),0);
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(TEST_CATALOG,"information_schema",null,null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(getTablesRow("information_schema","tables")));
      assertTrue(rows.contains(getTablesRow("information_schema","schemata")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(TEST_CATALOG,"",null,null)){
      assertTableMetadata(rs);
      assertEquals(readRows(rs).size(),0);
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(TEST_CATALOG,"information_schema","tables",null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(getTablesRow("information_schema","tables")));
      assertFalse(rows.contains(getTablesRow("information_schema","schemata")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(TEST_CATALOG,"information_schema","tables",array("TABLE"))){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(getTablesRow("information_schema","tables")));
      assertFalse(rows.contains(getTablesRow("information_schema","schemata")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(null,"information_schema",null,null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(getTablesRow("information_schema","tables")));
      assertTrue(rows.contains(getTablesRow("information_schema","schemata")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(null,null,"tables",null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(getTablesRow("information_schema","tables")));
      assertFalse(rows.contains(getTablesRow("information_schema","schemata")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(null,null,null,array("TABLE"))){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(getTablesRow("information_schema","tables")));
      assertTrue(rows.contains(getTablesRow("information_schema","schemata")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(TEST_CATALOG,"inf%","tables",null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(getTablesRow("information_schema","tables")));
      assertFalse(rows.contains(getTablesRow("information_schema","schemata")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(TEST_CATALOG,"information_schema","tab%",null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(getTablesRow("information_schema","tables")));
      assertFalse(rows.contains(getTablesRow("information_schema","schemata")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables("unknown","information_schema","tables",array("TABLE"))){
      assertTableMetadata(rs);
      assertEquals(readRows(rs).size(),0);
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(TEST_CATALOG,"unknown","tables",array("TABLE"))){
      assertTableMetadata(rs);
      assertEquals(readRows(rs).size(),0);
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(TEST_CATALOG,"information_schema","unknown",array("TABLE"))){
      assertTableMetadata(rs);
      assertEquals(readRows(rs).size(),0);
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(TEST_CATALOG,"information_schema","tables",array("unknown"))){
      assertTableMetadata(rs);
      assertEquals(readRows(rs).size(),0);
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(TEST_CATALOG,"information_schema","tables",array("unknown","TABLE"))){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(getTablesRow("information_schema","tables")));
      assertFalse(rows.contains(getTablesRow("information_schema","schemata")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(TEST_CATALOG,"information_schema","tables",array())){
      assertTableMetadata(rs);
      assertEquals(readRows(rs).size(),0);
    }
   }
 }
