{
  try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(null,null,null,null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(ImmutableList.of("default","information_schema","tables","BASE TABLE","","","","","","")));
      assertTrue(rows.contains(ImmutableList.of("default","information_schema","schemata","BASE TABLE","","","","","","")));
      assertTrue(rows.contains(ImmutableList.of("default","sys","node","BASE TABLE","","","","","","")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables("default",null,null,null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(ImmutableList.of("default","information_schema","tables","BASE TABLE","","","","","","")));
      assertTrue(rows.contains(ImmutableList.of("default","information_schema","schemata","BASE TABLE","","","","","","")));
      assertTrue(rows.contains(ImmutableList.of("default","sys","node","BASE TABLE","","","","","","")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables("",null,null,null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertEquals(rows.size(),0);
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables("default","information_schema",null,null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(ImmutableList.of("default","information_schema","tables","BASE TABLE","","","","","","")));
      assertTrue(rows.contains(ImmutableList.of("default","information_schema","schemata","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","sys","node","BASE TABLE","","","","","","")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables("default","",null,null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertEquals(rows.size(),0);
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables("default","information_schema","tables",null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(ImmutableList.of("default","information_schema","tables","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","information_schema","schemata","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","sys","node","BASE TABLE","","","","","","")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables("default","information_schema","tables",new String[]{"BASE TABLE"})){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(ImmutableList.of("default","information_schema","tables","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","information_schema","schemata","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","sys","node","BASE TABLE","","","","","","")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(null,"information_schema",null,null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(ImmutableList.of("default","information_schema","tables","BASE TABLE","","","","","","")));
      assertTrue(rows.contains(ImmutableList.of("default","information_schema","schemata","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","sys","node","BASE TABLE","","","","","","")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(null,null,"tables",null)){
      assertTableMetadata(rs);
      readRows(rs);
      fail("Expected SQLException");
    }
 catch (    SQLException expected) {
    }
  }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables(null,null,null,new String[]{"BASE TABLE"})){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(ImmutableList.of("default","information_schema","tables","BASE TABLE","","","","","","")));
      assertTrue(rows.contains(ImmutableList.of("default","information_schema","schemata","BASE TABLE","","","","","","")));
      assertTrue(rows.contains(ImmutableList.of("default","sys","node","BASE TABLE","","","","","","")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables("default","inf%","tables",null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(ImmutableList.of("default","information_schema","tables","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","information_schema","schemata","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","sys","node","BASE TABLE","","","","","","")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables("default","information_schema","tab%",null)){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(ImmutableList.of("default","information_schema","tables","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","information_schema","schemata","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","sys","node","BASE TABLE","","","","","","")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables("unknown","information_schema","tables",new String[]{"BASE TABLE"})){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertFalse(rows.contains(ImmutableList.of("default","information_schema","tables","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","information_schema","schemata","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","sys","node","BASE TABLE","","","","","","")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables("default","unknown","tables",new String[]{"BASE TABLE"})){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertFalse(rows.contains(ImmutableList.of("default","information_schema","tables","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","information_schema","schemata","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","sys","node","BASE TABLE","","","","","","")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables("default","information_schema","unknown",new String[]{"BASE TABLE"})){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertFalse(rows.contains(ImmutableList.of("default","information_schema","tables","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","information_schema","schemata","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","sys","node","BASE TABLE","","","","","","")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables("default","information_schema","tables",new String[]{"unknown"})){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertFalse(rows.contains(ImmutableList.of("default","information_schema","tables","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","information_schema","schemata","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","sys","node","BASE TABLE","","","","","","")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables("default","information_schema","tables",new String[]{"unknown","BASE TABLE"})){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(ImmutableList.of("default","information_schema","tables","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","information_schema","schemata","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","sys","node","BASE TABLE","","","","","","")));
    }
   }
   try (Connection connection=createConnection()){
    try (ResultSet rs=connection.getMetaData().getTables("default","information_schema","tables",new String[]{})){
      assertTableMetadata(rs);
      Set<List<Object>> rows=ImmutableSet.copyOf(readRows(rs));
      assertTrue(rows.contains(ImmutableList.of("default","information_schema","tables","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","information_schema","schemata","BASE TABLE","","","","","","")));
      assertFalse(rows.contains(ImmutableList.of("default","sys","node","BASE TABLE","","","","","","")));
    }
   }
 }
