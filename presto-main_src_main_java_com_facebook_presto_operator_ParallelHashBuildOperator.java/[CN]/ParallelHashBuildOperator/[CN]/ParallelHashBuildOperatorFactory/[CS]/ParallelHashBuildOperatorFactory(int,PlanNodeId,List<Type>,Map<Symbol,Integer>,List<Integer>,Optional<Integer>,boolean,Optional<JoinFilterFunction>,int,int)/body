{
  this.operatorId=operatorId;
  this.planNodeId=requireNonNull(planNodeId,"planNodeId is null");
  checkArgument(Integer.bitCount(partitionCount) == 1,"partitionCount must be a power of 2");
  lookupSourceSupplier=new PartitionedLookupSourceSupplier(types,hashChannels,partitionCount,requireNonNull(layout,"layout is null"),outer);
  checkArgument(!hashChannels.isEmpty(),"hashChannels is empty");
  this.hashChannels=ImmutableList.copyOf(requireNonNull(hashChannels,"hashChannels is null"));
  this.preComputedHashChannel=requireNonNull(preComputedHashChannel,"preComputedHashChannel is null");
  this.filterFunction=requireNonNull(filterFunction,"filterFunction is null");
  this.expectedPositions=expectedPositions;
}
