{
  Select rewritten=treeRewriter.defaultRewrite(node,context);
  ImmutableList.Builder<Expression> builder=ImmutableList.builder();
  for (  Expression expression : rewritten.getSelectItems()) {
    if (expression instanceof AliasedExpression || expression instanceof AllColumns) {
      builder.add(expression);
      continue;
    }
    String alias;
    if (expression instanceof QualifiedNameReference) {
      alias=((QualifiedNameReference)expression).getSuffix().toString();
    }
 else     if (expression instanceof FunctionCall) {
      alias=((FunctionCall)expression).getName().getSuffix();
    }
 else {
      alias=namer.newFieldAlias();
    }
    builder.add(new AliasedExpression(expression,alias));
  }
  if (!sameElements(rewritten.getSelectItems(),builder.build())) {
    return new Select(rewritten.isDistinct(),builder.build());
  }
  return rewritten;
}
