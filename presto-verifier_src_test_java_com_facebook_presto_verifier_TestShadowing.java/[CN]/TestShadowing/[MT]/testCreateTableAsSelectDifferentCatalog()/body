{
  handle.execute("CREATE TABLE \"my_test_table2\" (column1 BIGINT, column2 DOUBLE)");
  SqlParser parser=new SqlParser();
  Query query=new Query(CATALOG,SCHEMA,ImmutableList.of(),"CREATE TABLE public.my_test_table2 AS SELECT 1 column1, 2.0 column2",ImmutableList.of(),null,null,ImmutableMap.of());
  QueryRewriter rewriter=new QueryRewriter(parser,URL,QualifiedName.of("other_catalog","other_schema","tmp_"),Optional.empty(),Optional.empty(),Optional.empty(),Optional.empty(),1,new Duration(10,SECONDS));
  Query rewrittenQuery=rewriter.shadowQuery(query);
  assertEquals(rewrittenQuery.getPreQueries().size(),1);
  CreateTableAsSelect createTableAs=checkType(parser.createStatement(rewrittenQuery.getPreQueries().get(0)),CreateTableAsSelect.class,"statement");
  assertEquals(createTableAs.getName().getParts().size(),3);
  assertEquals(createTableAs.getName().getPrefix().get(),QualifiedName.of("other_catalog","other_schema"));
  assertTrue(createTableAs.getName().getSuffix().startsWith("tmp_"));
  assertFalse(createTableAs.getName().getSuffix().contains("my_test_table"));
}
