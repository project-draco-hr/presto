{
  Cursor cursor=createCursor();
  assertTrue(cursor.advanceToPosition(0));
  CursorAssertions.assertCurrentValue(cursor,0,getExpectedValue(0));
  assertTrue(cursor.advanceToPosition(2));
  CursorAssertions.assertCurrentValue(cursor,2,getExpectedValue(2));
  assertTrue(cursor.advanceToPosition(2));
  CursorAssertions.assertCurrentValue(cursor,2,getExpectedValue(2));
  assertTrue(cursor.advanceToPosition(4));
  CursorAssertions.assertCurrentValue(cursor,4,getExpectedValue(4));
  assertTrue(cursor.advanceToPosition(8));
  CursorAssertions.assertCurrentValue(cursor,8,getExpectedValue(8));
  assertTrue(cursor.advanceToPosition(10));
  CursorAssertions.assertCurrentValue(cursor,10,getExpectedValue(10));
  try {
    cursor.advanceToPosition(2);
    fail("Expected IllegalArgumentException");
  }
 catch (  IllegalArgumentException e) {
    CursorAssertions.assertCurrentValue(cursor,10,getExpectedValue(10));
  }
  assertFalse(cursor.advanceToPosition(100));
  assertTrue(cursor.isFinished());
  assertFalse(cursor.isValid());
}
