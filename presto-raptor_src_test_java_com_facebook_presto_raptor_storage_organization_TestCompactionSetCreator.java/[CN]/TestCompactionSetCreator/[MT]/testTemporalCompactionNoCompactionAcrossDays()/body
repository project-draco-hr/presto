{
  CompactionSetCreator compactionSetCreator=new TemporalCompactionSetCreator(new DataSize(100,BYTE),MAX_SHARD_ROWS,TIMESTAMP);
  long tableId=1L;
  long day1=Duration.ofDays(Duration.ofNanos(System.nanoTime()).toDays()).toMillis();
  long day2=Duration.ofDays(Duration.ofMillis(day1).toDays() + 1).toMillis();
  List<ShardMetadata> inputShards=ImmutableList.of(shardWithRange(10,day1,day1),shardWithRange(10,day2,day2),shardWithRange(10,day1,day1));
  Set<OrganizationSet> actual=compactionSetCreator.createCompactionSets(tableId,ImmutableSet.copyOf(inputShards));
  assertEquals(actual.size(),2);
  Set<OrganizationSet> expected=ImmutableSet.of(new OrganizationSet(tableId,extractIndexes(inputShards,0,2),OptionalInt.empty()),new OrganizationSet(tableId,extractIndexes(inputShards,1),OptionalInt.empty()));
  assertEquals(actual,expected);
}
