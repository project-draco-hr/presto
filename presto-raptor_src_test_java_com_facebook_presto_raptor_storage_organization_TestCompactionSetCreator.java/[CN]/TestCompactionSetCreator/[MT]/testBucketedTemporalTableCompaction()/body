{
  long day1=1;
  long day2=2;
  long day3=3;
  long day4=4;
  List<ShardIndexInfo> inputShards=ImmutableList.of(shardWithTemporalBucket(OptionalInt.of(1),DATE,day1,day1),shardWithTemporalBucket(OptionalInt.of(2),DATE,day2,day2),shardWithTemporalBucket(OptionalInt.of(1),DATE,day1,day1),shardWithTemporalBucket(OptionalInt.of(2),DATE,day2,day2),shardWithTemporalBucket(OptionalInt.of(1),DATE,day3,day3),shardWithTemporalBucket(OptionalInt.of(2),DATE,day4,day4));
  long tableId=bucketedTemporalTableInfo.getTableId();
  Set<OrganizationSet> actual=compactionSetCreator.createCompactionSets(bucketedTemporalTableInfo,inputShards);
  assertEquals(actual.size(),2);
  Set<OrganizationSet> expected=ImmutableSet.of(new OrganizationSet(tableId,extractIndexes(inputShards,0,2),OptionalInt.of(1)),new OrganizationSet(tableId,extractIndexes(inputShards,1,3),OptionalInt.of(2)));
  assertEquals(actual,expected);
}
