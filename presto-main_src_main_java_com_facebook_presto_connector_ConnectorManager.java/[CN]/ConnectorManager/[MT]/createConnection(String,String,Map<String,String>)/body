{
  checkNotNull(catalogName,"catalogName is null");
  checkNotNull(connectorName,"connectorName is null");
  checkNotNull(properties,"properties is null");
  String connectorId=catalogName;
  checkState(!connectors.containsKey(connectorId),"A connector %s already exists",connectorId);
  ConnectorFactory connectorFactory=connectorFactories.get(connectorName);
  Preconditions.checkArgument(connectorFactory != null,"No factory for connector %s",connectorName);
  Connector connector=connectorFactory.create(connectorId,properties);
  connectors.put(connectorName,connector);
  ConnectorMetadata connectorMetadata=connector.getService(ConnectorMetadata.class);
  checkState(connectorMetadata != null,"Connector %s can not provide metadata",connectorId);
  ConnectorSplitManager connectorSplitManager=connector.getService(ConnectorSplitManager.class);
  checkState(connectorSplitManager != null,"Connector %s does not have a split manager",connectorId);
  ConnectorDataStreamProvider connectorDataStreamProvider=connector.getService(ConnectorDataStreamProvider.class);
  checkState(connectorDataStreamProvider != null,"Connector %s does not have a data stream provider",connectorId);
  ConnectorHandleResolver connectorHandleResolver=connector.getService(ConnectorHandleResolver.class);
  checkState(connectorDataStreamProvider != null,"Connector %s does not have a handle resolver",connectorId);
  metadataManager.addConnectorMetadata(catalogName,connectorMetadata);
  handleResolver.addHandleResolver(connectorId,connectorHandleResolver);
  splitManager.addConnectorSplitManager(connectorSplitManager);
  dataStreamManager.addConnectorDataStreamProvider(connectorDataStreamProvider);
}
