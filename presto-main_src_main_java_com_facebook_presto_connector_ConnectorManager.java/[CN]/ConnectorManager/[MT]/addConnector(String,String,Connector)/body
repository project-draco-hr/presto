{
  ConnectorMetadata connectorMetadata=connector.getMetadata();
  checkState(connectorMetadata != null,"Connector %s can not provide metadata",connectorId);
  ConnectorSplitManager connectorSplitManager=connector.getSplitManager();
  checkState(connectorSplitManager != null,"Connector %s does not have a split manager",connectorId);
  ConnectorPageSourceProvider connectorPageSourceProvider=null;
  if (connector instanceof InternalConnector) {
    try {
      connectorPageSourceProvider=((InternalConnector)connector).getPageSourceProvider();
    }
 catch (    UnsupportedOperationException ignored) {
    }
  }
  if (connectorPageSourceProvider == null) {
    ConnectorRecordSetProvider connectorRecordSetProvider=null;
    try {
      connectorRecordSetProvider=connector.getRecordSetProvider();
    }
 catch (    UnsupportedOperationException ignored) {
    }
    checkState(connectorRecordSetProvider != null,"Connector %s does not have a data stream provider",connectorId);
    connectorPageSourceProvider=new RecordPageSourceProvider(connectorRecordSetProvider);
  }
  ConnectorHandleResolver connectorHandleResolver=connector.getHandleResolver();
  checkNotNull(connectorHandleResolver,"Connector %s does not have a handle resolver",connectorId);
  ConnectorRecordSinkProvider connectorRecordSinkProvider=null;
  try {
    connectorRecordSinkProvider=connector.getRecordSinkProvider();
    checkNotNull(connectorRecordSinkProvider,"Connector %s returned a null record sink provider",connectorId);
  }
 catch (  UnsupportedOperationException ignored) {
  }
  ConnectorIndexResolver indexResolver=null;
  try {
    indexResolver=connector.getIndexResolver();
    checkNotNull(indexResolver,"Connector %s returned a null index resolver",connectorId);
  }
 catch (  UnsupportedOperationException ignored) {
  }
  if (catalogName != null) {
    metadataManager.addConnectorMetadata(connectorId,catalogName,connectorMetadata);
    metadataManager.addInformationSchemaMetadata(makeInformationSchemaConnectorId(connectorId),catalogName,new InformationSchemaMetadata(catalogName));
    splitManager.addConnectorSplitManager(makeInformationSchemaConnectorId(connectorId),new InformationSchemaSplitManager(nodeManager));
    pageSourceManager.addConnectorPageSourceProvider(makeInformationSchemaConnectorId(connectorId),new InformationSchemaPageSourceProvider(metadataManager,splitManager));
  }
 else {
    metadataManager.addGlobalSchemaMetadata(connectorId,connectorMetadata);
  }
  splitManager.addConnectorSplitManager(connectorId,connectorSplitManager);
  handleResolver.addHandleResolver(connectorId,connectorHandleResolver);
  pageSourceManager.addConnectorPageSourceProvider(connectorId,connectorPageSourceProvider);
  if (connectorRecordSinkProvider != null) {
    recordSinkManager.addConnectorRecordSinkProvider(connectorId,connectorRecordSinkProvider);
  }
  if (indexResolver != null) {
    indexManager.addIndexResolver(connectorId,indexResolver);
  }
}
