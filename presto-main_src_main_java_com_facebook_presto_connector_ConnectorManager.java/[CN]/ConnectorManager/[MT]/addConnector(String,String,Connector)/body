{
  checkState(!stopped.get(),"ConnectorManager is stopped");
  checkState(!connectors.containsKey(connectorId),"A connector %s already exists",connectorId);
  connectors.put(connectorId,connector);
  ConnectorMetadata connectorMetadata=connector.getMetadata();
  checkState(connectorMetadata != null,"Connector %s can not provide metadata",connectorId);
  ConnectorSplitManager connectorSplitManager=connector.getSplitManager();
  checkState(connectorSplitManager != null,"Connector %s does not have a split manager",connectorId);
  Set<SystemTable> systemTables=connector.getSystemTables();
  checkNotNull(systemTables,"Connector %s returned a null system tables set");
  ConnectorPageSourceProvider connectorPageSourceProvider=null;
  try {
    connectorPageSourceProvider=connector.getPageSourceProvider();
    checkNotNull(connectorPageSourceProvider,"Connector %s returned a null page source provider",connectorId);
  }
 catch (  UnsupportedOperationException ignored) {
  }
  if (connectorPageSourceProvider == null) {
    ConnectorRecordSetProvider connectorRecordSetProvider=null;
    try {
      connectorRecordSetProvider=connector.getRecordSetProvider();
      checkNotNull(connectorRecordSetProvider,"Connector %s returned a null record set provider",connectorId);
    }
 catch (    UnsupportedOperationException ignored) {
    }
    checkState(connectorRecordSetProvider != null,"Connector %s has neither a PageSource or RecordSet provider",connectorId);
    connectorPageSourceProvider=new RecordPageSourceProvider(connectorRecordSetProvider);
  }
  ConnectorHandleResolver connectorHandleResolver=connector.getHandleResolver();
  checkNotNull(connectorHandleResolver,"Connector %s does not have a handle resolver",connectorId);
  ConnectorPageSinkProvider connectorPageSinkProvider=null;
  try {
    connectorPageSinkProvider=connector.getPageSinkProvider();
    checkNotNull(connectorPageSinkProvider,"Connector %s returned a null page sink provider",connectorId);
  }
 catch (  UnsupportedOperationException ignored) {
  }
  if (connectorPageSinkProvider == null) {
    ConnectorRecordSinkProvider connectorRecordSinkProvider=null;
    try {
      connectorRecordSinkProvider=connector.getRecordSinkProvider();
      checkNotNull(connectorRecordSinkProvider,"Connector %s returned a null record sink provider",connectorId);
      connectorPageSinkProvider=new RecordPageSinkProvider(connectorRecordSinkProvider);
    }
 catch (    UnsupportedOperationException ignored) {
    }
  }
  ConnectorIndexResolver indexResolver=null;
  try {
    indexResolver=connector.getIndexResolver();
    checkNotNull(indexResolver,"Connector %s returned a null index resolver",connectorId);
  }
 catch (  UnsupportedOperationException ignored) {
  }
  List<PropertyMetadata<?>> tableProperties=connector.getTableProperties();
  checkNotNull(tableProperties,"Connector %s returned null table properties",connectorId);
  ConnectorAccessControl accessControl=null;
  try {
    accessControl=connector.getAccessControl();
  }
 catch (  UnsupportedOperationException ignored) {
  }
  metadataManager.addConnectorMetadata(connectorId,catalogName,connectorMetadata);
  metadataManager.addInformationSchemaMetadata(makeInformationSchemaConnectorId(connectorId),catalogName,new InformationSchemaMetadata(catalogName));
  splitManager.addConnectorSplitManager(makeInformationSchemaConnectorId(connectorId),new InformationSchemaSplitManager(nodeManager));
  pageSourceManager.addConnectorPageSourceProvider(makeInformationSchemaConnectorId(connectorId),new InformationSchemaPageSourceProvider(metadataManager));
  Connector systemConnector=new SystemConnector(nodeManager,systemTables);
  metadataManager.addSystemTablesMetadata(makeSystemTablesConnectorId(connectorId),catalogName,systemConnector.getMetadata());
  splitManager.addConnectorSplitManager(makeSystemTablesConnectorId(connectorId),systemConnector.getSplitManager());
  pageSourceManager.addConnectorPageSourceProvider(makeSystemTablesConnectorId(connectorId),new RecordPageSourceProvider(systemConnector.getRecordSetProvider()));
  splitManager.addConnectorSplitManager(connectorId,connectorSplitManager);
  handleResolver.addHandleResolver(connectorId,connectorHandleResolver);
  pageSourceManager.addConnectorPageSourceProvider(connectorId,connectorPageSourceProvider);
  metadataManager.getSessionPropertyManager().addConnectorSessionProperties(catalogName,connector.getSessionProperties());
  metadataManager.getTablePropertyManager().addTableProperties(catalogName,tableProperties);
  if (connectorPageSinkProvider != null) {
    pageSinkManager.addConnectorPageSinkProvider(connectorId,connectorPageSinkProvider);
  }
  if (indexResolver != null) {
    indexManager.addIndexResolver(connectorId,indexResolver);
  }
  if (accessControl != null) {
    accessControlManager.addCatalogAccessControl(catalogName,accessControl);
  }
}
