{
  if (!groupByBlocksIterator.hasNext()) {
    return null;
  }
  BlockBuilder[] outputs=new BlockBuilder[tupleInfos.size()];
  for (int i=0; i < outputs.length; i++) {
    outputs[i]=new BlockBuilder(tupleInfos.get(i));
  }
  UncompressedBlock groupByBlock=groupByBlocksIterator.next();
  for (int i=0; i < groupByBlock.getPositionCount(); i++) {
    for (int channel=0; channel < outputs.length; channel++) {
      outputs[channel].append(aggregateValues.get(channel).get(currentPosition).evaluate());
    }
    currentPosition++;
  }
  Block[] blocks=new Block[outputs.length + 1];
  blocks[0]=groupByBlock;
  for (int i=0; i < blocks.length; i++) {
    blocks[i + 1]=outputs[i].build();
  }
  Page page=new Page(blocks);
  return page;
}
