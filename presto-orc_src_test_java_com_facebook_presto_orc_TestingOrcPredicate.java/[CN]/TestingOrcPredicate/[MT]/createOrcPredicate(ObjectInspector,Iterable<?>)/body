{
  if (!(objectInspector instanceof PrimitiveObjectInspector)) {
    return new BasicOrcPredicate<>(expectedValues,Object.class);
  }
  PrimitiveObjectInspector primitiveObjectInspector=(PrimitiveObjectInspector)objectInspector;
  PrimitiveCategory primitiveCategory=primitiveObjectInspector.getPrimitiveCategory();
switch (primitiveCategory) {
case BOOLEAN:
    return new BooleanOrcPredicate(expectedValues);
case BYTE:
case SHORT:
case INT:
case LONG:
case TIMESTAMP:
  return new LongOrcPredicate(expectedValues);
case DATE:
return new DateOrcPredicate(expectedValues);
case FLOAT:
case DOUBLE:
return new DoubleOrcPredicate(expectedValues);
case BINARY:
return new BasicOrcPredicate<>(expectedValues,Object.class);
case STRING:
return new StringOrcPredicate(expectedValues);
default :
throw new IllegalArgumentException("Unsupported types " + primitiveCategory);
}
}
