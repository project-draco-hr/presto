{
  Block expectedBoolean=VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1).writeByte(1).closeEntry().build();
  Block actualBoolean=toBinaryBlock(BOOLEAN,true,getInspector(Boolean.class));
  assertBlockEquals(actualBoolean,expectedBoolean);
  Block expectedByte=VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1).writeByte(5).closeEntry().build();
  Block actualByte=toBinaryBlock(TINYINT,(byte)5,getInspector(Byte.class));
  assertBlockEquals(actualByte,expectedByte);
  Block expectedShort=VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1).writeShort(2).closeEntry().build();
  Block actualShort=toBinaryBlock(SMALLINT,(short)2,getInspector(Short.class));
  assertBlockEquals(actualShort,expectedShort);
  Block expectedInt=VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1).writeInt(1).closeEntry().build();
  Block actualInt=toBinaryBlock(INTEGER,1,getInspector(Integer.class));
  assertBlockEquals(actualInt,expectedInt);
  Block expectedLong=VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1).writeLong(10).closeEntry().build();
  Block actualLong=toBinaryBlock(BIGINT,10L,getInspector(Long.class));
  assertBlockEquals(actualLong,expectedLong);
  Block expectedFloat=VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1).writeLong(doubleToLongBits(20.0)).closeEntry().build();
  Block actualFloat=toBinaryBlock(DOUBLE,20.0f,getInspector(Float.class));
  assertBlockEquals(actualFloat,expectedFloat);
  Block expectedDouble=VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1).writeLong(doubleToLongBits(30.12)).closeEntry().build();
  Block actualDouble=toBinaryBlock(DOUBLE,30.12d,getInspector(Double.class));
  assertBlockEquals(actualDouble,expectedDouble);
  Block expectedString=VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1).writeBytes(utf8Slice("abdd"),0,4).closeEntry().build();
  Block actualString=toBinaryBlock(createUnboundedVarcharType(),"abdd",getInspector(String.class));
  assertBlockEquals(actualString,expectedString);
  DateTime dateTime=new DateTime(2008,10,28,16,7,15,0);
  Block expectedTimestamp=VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1).writeLong(dateTime.getMillis()).closeEntry().build();
  Block actualTimestamp=toBinaryBlock(BIGINT,new Timestamp(dateTime.getMillis()),getInspector(Timestamp.class));
  assertBlockEquals(actualTimestamp,expectedTimestamp);
  byte[] byteArray={81,82,84,85};
  Block expectedBinary=VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1).writeBytes(Slices.wrappedBuffer(byteArray),0,4).closeEntry().build();
  Block actualBinary=toBinaryBlock(createUnboundedVarcharType(),byteArray,getInspector(byte[].class));
  assertBlockEquals(actualBinary,expectedBinary);
}
