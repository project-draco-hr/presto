{
  Slice expectedBoolean=new DynamicSliceOutput(10).appendByte(1).slice();
  Slice actualBoolean=toBinarySlice(true,getInspector(Boolean.class));
  assertEquals(actualBoolean,expectedBoolean);
  Slice expectedByte=new DynamicSliceOutput(10).appendLong(5).slice();
  Slice actualByte=toBinarySlice((byte)5,getInspector(Byte.class));
  assertEquals(actualByte,expectedByte);
  Slice expectedShort=new DynamicSliceOutput(10).appendLong(2).slice();
  Slice actualShort=toBinarySlice((short)2,getInspector(Short.class));
  assertEquals(actualShort,expectedShort);
  Slice expectedInt=new DynamicSliceOutput(10).appendLong(1).slice();
  Slice actualInt=toBinarySlice(1,getInspector(Integer.class));
  assertEquals(actualInt,expectedInt);
  Slice expectedLong=new DynamicSliceOutput(10).appendLong(10).slice();
  Slice actualLong=toBinarySlice(10L,getInspector(Long.class));
  assertEquals(actualLong,expectedLong);
  Slice expectedFloat=new DynamicSliceOutput(10).appendDouble(20.0).slice();
  Slice actualFloat=toBinarySlice(20.0f,getInspector(Float.class));
  assertEquals(actualFloat,expectedFloat);
  Slice expectedDouble=new DynamicSliceOutput(10).appendDouble(30.12).slice();
  Slice actualDouble=toBinarySlice(30.12d,getInspector(Double.class));
  assertEquals(actualDouble,expectedDouble);
  Slice expectedString=Slices.utf8Slice("abdd");
  Slice actualString=toBinarySlice("abdd",getInspector(String.class));
  assertEquals(actualString,expectedString);
  DateTime dateTime=new DateTime(2008,10,28,16,7,15,0);
  Slice expectedTimestamp=new DynamicSliceOutput(10).appendLong(dateTime.getMillis()).slice();
  Slice actualTimestamp=toBinarySlice(new Timestamp(dateTime.getMillis()),getInspector(Timestamp.class));
  assertEquals(actualTimestamp,expectedTimestamp);
  byte[] byteArray={81,82,84,85};
  Slice expectedBinary=Slices.wrappedBuffer(byteArray);
  Slice actualBinary=toBinarySlice(byteArray,getInspector(byte[].class));
  assertEquals(actualBinary,expectedBinary);
}
