{
  assertUpdate("CREATE TABLE test_add_column AS SELECT 123 x",1);
  assertUpdate("CREATE TABLE test_add_column_a AS SELECT 234 x, 111 a",1);
  assertUpdate("CREATE TABLE test_add_column_ab AS SELECT 345 x, 222 a, 33.3 b",1);
  assertQueryFails("ALTER TABLE test_add_column ADD COLUMN x bigint",".* Column 'x' already exists");
  assertQueryFails("ALTER TABLE test_add_column ADD COLUMN X bigint",".* Column 'X' already exists");
  assertUpdate("ALTER TABLE test_add_column ADD COLUMN a bigint");
  assertUpdate("INSERT INTO test_add_column SELECT * FROM test_add_column_a",1);
  MaterializedResult materializedRows=computeActual("SELECT x, a FROM test_add_column ORDER BY x");
  assertEquals(materializedRows.getMaterializedRows().get(0).getField(0),123L);
  assertEquals(materializedRows.getMaterializedRows().get(0).getField(1),null);
  assertEquals(materializedRows.getMaterializedRows().get(1).getField(0),234L);
  assertEquals(materializedRows.getMaterializedRows().get(1).getField(1),111L);
  assertUpdate("ALTER TABLE test_add_column ADD COLUMN b double");
  assertUpdate("INSERT INTO test_add_column SELECT * FROM test_add_column_ab",1);
  materializedRows=computeActual("SELECT x, a, b FROM test_add_column ORDER BY x");
  assertEquals(materializedRows.getMaterializedRows().get(0).getField(0),123L);
  assertEquals(materializedRows.getMaterializedRows().get(0).getField(1),null);
  assertEquals(materializedRows.getMaterializedRows().get(0).getField(2),null);
  assertEquals(materializedRows.getMaterializedRows().get(1).getField(0),234L);
  assertEquals(materializedRows.getMaterializedRows().get(1).getField(1),111L);
  assertEquals(materializedRows.getMaterializedRows().get(1).getField(2),null);
  assertEquals(materializedRows.getMaterializedRows().get(2).getField(0),345L);
  assertEquals(materializedRows.getMaterializedRows().get(2).getField(1),222L);
  assertEquals(materializedRows.getMaterializedRows().get(2).getField(2),33.3);
  assertUpdate("DROP TABLE test_add_column");
  assertUpdate("DROP TABLE test_add_column_a");
  assertUpdate("DROP TABLE test_add_column_ab");
  assertFalse(queryRunner.tableExists(getSession(),"test_add_column"));
  assertFalse(queryRunner.tableExists(getSession(),"test_add_column_a"));
  assertFalse(queryRunner.tableExists(getSession(),"test_add_column_ab"));
}
