{
  assertUpdate("CREATE TABLE test_delete AS SELECT * FROM orders","SELECT count(*) FROM orders");
  assertUpdate("DELETE FROM test_delete WHERE orderkey % 2 = 0","SELECT count(*) FROM orders WHERE orderkey % 2 = 0");
  assertQuery("SELECT * FROM test_delete","SELECT * FROM orders WHERE orderkey % 2 <> 0");
  assertUpdate("DELETE FROM test_delete","SELECT count(*) FROM orders WHERE orderkey % 2 <> 0");
  assertQuery("SELECT * FROM test_delete","SELECT * FROM orders LIMIT 0");
  assertUpdate("DROP TABLE test_delete");
  assertUpdate("CREATE TABLE test_delete AS SELECT * FROM orders","SELECT count(*) FROM orders");
  assertUpdate("DELETE FROM test_delete WHERE custkey <= 100","SELECT count(*) FROM orders WHERE custkey <= 100");
  assertQuery("SELECT * FROM test_delete","SELECT * FROM orders WHERE custkey > 100");
  assertUpdate("DELETE FROM test_delete WHERE custkey <= 300","SELECT count(*) FROM orders WHERE custkey > 100 AND custkey <= 300");
  assertQuery("SELECT * FROM test_delete","SELECT * FROM orders WHERE custkey > 300");
  assertUpdate("DELETE FROM test_delete WHERE custkey <= 500","SELECT count(*) FROM orders WHERE custkey > 300 AND custkey <= 500");
  assertQuery("SELECT * FROM test_delete","SELECT * FROM orders WHERE custkey > 500");
  assertUpdate("DROP TABLE test_delete");
  assertUpdate("CREATE TABLE test_delete AS SELECT * FROM orders","SELECT count(*) FROM orders");
  assertUpdate("DELETE FROM test_delete WHERE orderstatus = 'O'","SELECT count(*) FROM orders WHERE orderstatus = 'O'");
  assertQuery("SELECT * FROM test_delete","SELECT * FROM orders WHERE orderstatus <> 'O'");
  assertUpdate("DROP TABLE test_delete");
  assertUpdate("CREATE TABLE test_delete AS SELECT * FROM orders","SELECT count(*) FROM orders");
  assertUpdate("DELETE FROM test_delete WHERE rand() < 0",0);
  assertUpdate("DROP TABLE test_delete");
  assertUpdate("CREATE TABLE test_delete AS SELECT * FROM lineitem","SELECT count(*) FROM lineitem");
  assertUpdate("DELETE FROM test_delete WHERE orderkey IN (SELECT orderkey FROM orders WHERE orderstatus = 'F')","SELECT count(*) FROM lineitem WHERE orderkey IN (SELECT orderkey FROM orders WHERE orderstatus = 'F')");
  assertQuery("SELECT * FROM test_delete","SELECT * FROM lineitem WHERE orderkey IN (SELECT orderkey FROM orders WHERE orderstatus <> 'F')");
  assertUpdate("DROP TABLE test_delete");
  assertUpdate("CREATE TABLE test_delete AS SELECT * FROM lineitem","SELECT count(*) FROM lineitem");
  assertUpdate("DELETE FROM test_delete\n" + "WHERE orderkey IN (SELECT orderkey FROM orders WHERE orderstatus = 'F')\n" + "  AND orderkey IN (SELECT orderkey FROM orders WHERE custkey % 5 = 0)\n","SELECT count(*) FROM lineitem\n" + "WHERE orderkey IN (SELECT orderkey FROM orders WHERE orderstatus = 'F')\n" + "  AND orderkey IN (SELECT orderkey FROM orders WHERE custkey % 5 = 0)");
  assertQuery("SELECT * FROM test_delete","SELECT * FROM lineitem\n" + "WHERE orderkey IN (SELECT orderkey FROM orders WHERE orderstatus <> 'F')\n" + "  OR orderkey IN (SELECT orderkey FROM orders WHERE custkey % 5 <> 0)");
  assertUpdate("DROP TABLE test_delete");
  assertUpdate("CREATE TABLE test_delete AS SELECT * FROM orders","SELECT count(*) FROM orders");
  assertUpdate("DELETE FROM test_delete\n" + "WHERE (orderkey IN (SELECT CASE WHEN orderkey % 3 = 0 THEN NULL ELSE orderkey END FROM lineitem)) IS NULL\n","SELECT count(*) FROM orders\n" + "WHERE (orderkey IN (SELECT CASE WHEN orderkey % 3 = 0 THEN NULL ELSE orderkey END FROM lineitem)) IS NULL\n");
  assertQuery("SELECT * FROM test_delete","SELECT * FROM orders\n" + "WHERE (orderkey IN (SELECT CASE WHEN orderkey % 3 = 0 THEN NULL ELSE orderkey END FROM lineitem)) IS NOT NULL\n");
  assertUpdate("DROP TABLE test_delete");
}
