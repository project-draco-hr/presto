{
  assertCreateTableAsSelect("test_select","SELECT orderdate, orderkey, totalprice FROM orders","SELECT count(*) FROM orders");
  assertCreateTableAsSelect("test_group","SELECT orderstatus, sum(totalprice) x FROM orders GROUP BY orderstatus","SELECT count(DISTINCT orderstatus) FROM orders");
  assertCreateTableAsSelect("test_join","SELECT count(*) x FROM lineitem JOIN orders ON lineitem.orderkey = orders.orderkey","SELECT 1");
  assertCreateTableAsSelect("test_limit","SELECT orderkey FROM orders ORDER BY orderkey LIMIT 10","SELECT 10");
  assertCreateTableAsSelect("test_unicode","SELECT '\u2603' unicode","SELECT 1");
  assertCreateTableAsSelect("test_with_data","SELECT * FROM orders WITH DATA","SELECT * FROM orders","SELECT count(*) FROM orders");
  assertCreateTableAsSelect("test_with_no_data","SELECT * FROM orders WITH NO DATA","SELECT * FROM orders LIMIT 0","SELECT 0");
  assertCreateTableAsSelect("test_union_all","SELECT orderdate, orderkey, totalprice FROM orders WHERE orderkey % 2 = 0 UNION ALL " + "SELECT orderdate, orderkey, totalprice FROM orders WHERE orderkey % 2 = 1","SELECT orderdate, orderkey, totalprice FROM orders","SELECT count(*) FROM orders");
  assertCreateTableAsSelect("test_sampled","SELECT orderkey FROM tpch_sampled.tiny.orders ORDER BY orderkey LIMIT 10","SELECT orderkey FROM orders ORDER BY orderkey LIMIT 10","SELECT 10");
}
