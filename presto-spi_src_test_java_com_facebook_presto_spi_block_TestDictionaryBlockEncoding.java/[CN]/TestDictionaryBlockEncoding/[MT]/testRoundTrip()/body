{
  int positionCount=40;
  BlockBuilder dictionaryBuilder=VARCHAR.createBlockBuilder(new BlockBuilderStatus(),4);
  VARCHAR.writeString(dictionaryBuilder,"alice");
  VARCHAR.writeString(dictionaryBuilder,"bob");
  VARCHAR.writeString(dictionaryBuilder,"charlie");
  VARCHAR.writeString(dictionaryBuilder,"dave");
  Block dictionary=dictionaryBuilder.build();
  int[] ids=new int[positionCount];
  for (int i=0; i < 40; i++) {
    ids[i]=i % 4;
  }
  Slice idsSlice=Slices.wrappedIntArray(ids);
  BlockEncoding blockEncoding=new DictionaryBlockEncoding(new VariableWidthBlockEncoding());
  DictionaryBlock dictionaryBlock=new DictionaryBlock(positionCount,dictionary,idsSlice,false,UUID.randomUUID());
  DynamicSliceOutput sliceOutput=new DynamicSliceOutput(1024);
  blockEncoding.writeBlock(sliceOutput,dictionaryBlock);
  Block actualBlock=blockEncoding.readBlock(sliceOutput.slice().getInput());
  assertTrue(actualBlock instanceof DictionaryBlock);
  DictionaryBlock actualDictionaryBlock=(DictionaryBlock)actualBlock;
  assertBlockEquals(VARCHAR,actualDictionaryBlock.getDictionary(),dictionary);
  assertEquals(actualDictionaryBlock.getIds(),idsSlice);
  assertEquals(actualDictionaryBlock.getDictionarySourceId(),dictionaryBlock.getDictionarySourceId());
}
