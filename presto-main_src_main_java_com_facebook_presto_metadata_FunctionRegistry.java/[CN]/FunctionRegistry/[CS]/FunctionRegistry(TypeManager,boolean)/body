{
  this.typeManager=checkNotNull(typeManager,"typeManager is null");
  FunctionListBuilder builder=new FunctionListBuilder().window("row_number",BIGINT,ImmutableList.<Type>of(),RowNumberFunction.class).window("rank",BIGINT,ImmutableList.<Type>of(),RankFunction.class).window("dense_rank",BIGINT,ImmutableList.<Type>of(),DenseRankFunction.class).window("percent_rank",DOUBLE,ImmutableList.<Type>of(),PercentRankFunction.class).window("cume_dist",DOUBLE,ImmutableList.<Type>of(),CumulativeDistributionFunction.class).aggregate("count",BIGINT,ImmutableList.<Type>of(),BIGINT,COUNT).aggregate("count",BIGINT,ImmutableList.of(BOOLEAN),BIGINT,COUNT_BOOLEAN_COLUMN).aggregate("count",BIGINT,ImmutableList.of(BIGINT),BIGINT,COUNT_LONG_COLUMN).aggregate("count",BIGINT,ImmutableList.of(DOUBLE),BIGINT,COUNT_DOUBLE_COLUMN).aggregate("count",BIGINT,ImmutableList.of(VARCHAR),BIGINT,COUNT_STRING_COLUMN).aggregate("count_if",BIGINT,ImmutableList.of(BOOLEAN),BIGINT,COUNT_IF).aggregate("sum",BIGINT,ImmutableList.of(BIGINT),BIGINT,LONG_SUM).aggregate("sum",DOUBLE,ImmutableList.of(DOUBLE),DOUBLE,DOUBLE_SUM).aggregate("avg",DOUBLE,ImmutableList.of(DOUBLE),VARCHAR,DOUBLE_AVERAGE).aggregate("avg",DOUBLE,ImmutableList.of(BIGINT),VARCHAR,LONG_AVERAGE).aggregate("max",BOOLEAN,ImmutableList.of(BOOLEAN),BOOLEAN,BOOLEAN_MAX).aggregate("max",BIGINT,ImmutableList.of(BIGINT),BIGINT,LONG_MAX).aggregate("max",DOUBLE,ImmutableList.of(DOUBLE),DOUBLE,DOUBLE_MAX).aggregate("max",VARCHAR,ImmutableList.of(VARCHAR),VARCHAR,VAR_BINARY_MAX).aggregate("min",BOOLEAN,ImmutableList.of(BOOLEAN),BOOLEAN,BOOLEAN_MIN).aggregate("min",BIGINT,ImmutableList.of(BIGINT),BIGINT,LONG_MIN).aggregate("min",DOUBLE,ImmutableList.of(DOUBLE),DOUBLE,DOUBLE_MIN).aggregate("min",VARCHAR,ImmutableList.of(VARCHAR),VARCHAR,VAR_BINARY_MIN).aggregate("var_pop",DOUBLE,ImmutableList.of(DOUBLE),VARCHAR,DOUBLE_VARIANCE_POP_INSTANCE).aggregate("var_pop",DOUBLE,ImmutableList.of(BIGINT),VARCHAR,LONG_VARIANCE_POP_INSTANCE).aggregate("var_samp",DOUBLE,ImmutableList.of(DOUBLE),VARCHAR,DOUBLE_VARIANCE_INSTANCE).aggregate("var_samp",DOUBLE,ImmutableList.of(BIGINT),VARCHAR,LONG_VARIANCE_INSTANCE).aggregate("variance",DOUBLE,ImmutableList.of(DOUBLE),VARCHAR,DOUBLE_VARIANCE_INSTANCE).aggregate("variance",DOUBLE,ImmutableList.of(BIGINT),VARCHAR,LONG_VARIANCE_INSTANCE).aggregate("stddev_pop",DOUBLE,ImmutableList.of(DOUBLE),VARCHAR,DOUBLE_STDDEV_POP_INSTANCE).aggregate("stddev_pop",DOUBLE,ImmutableList.of(BIGINT),VARCHAR,LONG_STDDEV_POP_INSTANCE).aggregate("stddev_samp",DOUBLE,ImmutableList.of(DOUBLE),VARCHAR,DOUBLE_STDDEV_INSTANCE).aggregate("stddev_samp",DOUBLE,ImmutableList.of(BIGINT),VARCHAR,LONG_STDDEV_INSTANCE).aggregate("stddev",DOUBLE,ImmutableList.of(DOUBLE),VARCHAR,DOUBLE_STDDEV_INSTANCE).aggregate("stddev",DOUBLE,ImmutableList.of(BIGINT),VARCHAR,LONG_STDDEV_INSTANCE).aggregate("approx_distinct",BIGINT,ImmutableList.of(BOOLEAN),VARCHAR,LONG_APPROXIMATE_COUNT_DISTINCT_AGGREGATIONS).aggregate("approx_distinct",BIGINT,ImmutableList.of(BIGINT),VARCHAR,LONG_APPROXIMATE_COUNT_DISTINCT_AGGREGATIONS).aggregate("approx_distinct",BIGINT,ImmutableList.of(DOUBLE),VARCHAR,DOUBLE_APPROXIMATE_COUNT_DISTINCT_AGGREGATIONS).aggregate("approx_distinct",BIGINT,ImmutableList.of(VARCHAR),VARCHAR,VARBINARY_APPROXIMATE_COUNT_DISTINCT_AGGREGATIONS).aggregate("approx_set",HYPER_LOG_LOG,ImmutableList.of(BIGINT),HYPER_LOG_LOG,BIGINT_APPROXIMATE_SET_AGGREGATION).aggregate("approx_set",HYPER_LOG_LOG,ImmutableList.of(VARCHAR),HYPER_LOG_LOG,VARCHAR_APPROXIMATE_SET_AGGREGATION).aggregate("approx_set",HYPER_LOG_LOG,ImmutableList.of(DOUBLE),HYPER_LOG_LOG,DOUBLE_APPROXIMATE_SET_AGGREGATION).aggregate("merge",HYPER_LOG_LOG,ImmutableList.of(HYPER_LOG_LOG),HYPER_LOG_LOG,MERGE_HYPER_LOG_LOG_AGGREGATION).aggregate("approx_percentile",BIGINT,ImmutableList.of(BIGINT,DOUBLE),VARCHAR,LONG_APPROXIMATE_PERCENTILE_AGGREGATION).aggregate("approx_percentile",BIGINT,ImmutableList.of(BIGINT,BIGINT,DOUBLE),VARCHAR,LONG_APPROXIMATE_PERCENTILE_WEIGHTED_AGGREGATION).aggregate("approx_percentile",DOUBLE,ImmutableList.of(DOUBLE,DOUBLE),VARCHAR,DOUBLE_APPROXIMATE_PERCENTILE_AGGREGATION).aggregate("approx_percentile",DOUBLE,ImmutableList.of(DOUBLE,BIGINT,DOUBLE),VARCHAR,DOUBLE_APPROXIMATE_PERCENTILE_WEIGHTED_AGGREGATION).aggregate("approx_avg",VARCHAR,ImmutableList.of(BIGINT),VARCHAR,LONG_APPROXIMATE_AVERAGE_AGGREGATION).aggregate("approx_avg",VARCHAR,ImmutableList.of(DOUBLE),VARCHAR,DOUBLE_APPROXIMATE_AVERAGE_AGGREGATION).scalar(StringFunctions.class).scalar(VarbinaryFunctions.class).scalar(RegexpFunctions.class).scalar(UrlFunctions.class).scalar(MathFunctions.class).scalar(DateTimeFunctions.class).scalar(JsonFunctions.class).scalar(ColorFunctions.class).scalar(HyperLogLogFunctions.class).scalar(BooleanOperators.class).scalar(BigintOperators.class).scalar(DoubleOperators.class).scalar(VarcharOperators.class).scalar(VarbinaryOperators.class).scalar(DateOperators.class).scalar(TimeOperators.class).scalar(TimestampOperators.class).scalar(IntervalDayTimeOperators.class).scalar(IntervalYearMonthOperators.class).scalar(TimeWithTimeZoneOperators.class).scalar(TimestampWithTimeZoneOperators.class).scalar(DateTimeOperators.class);
  if (experimentalSyntaxEnabled) {
    builder.approximateAggregate("avg",VARCHAR,ImmutableList.of(BIGINT),VARCHAR,LONG_APPROXIMATE_AVERAGE_AGGREGATION).approximateAggregate("avg",VARCHAR,ImmutableList.of(DOUBLE),VARCHAR,DOUBLE_APPROXIMATE_AVERAGE_AGGREGATION).approximateAggregate("sum",VARCHAR,ImmutableList.of(BIGINT),VARCHAR,LONG_APPROXIMATE_SUM_AGGREGATION).approximateAggregate("sum",VARCHAR,ImmutableList.of(DOUBLE),VARCHAR,DOUBLE_APPROXIMATE_SUM_AGGREGATION).approximateAggregate("count",VARCHAR,ImmutableList.<Type>of(),VARCHAR,APPROXIMATE_COUNT_AGGREGATION).approximateAggregate("count",VARCHAR,ImmutableList.of(BOOLEAN),VARCHAR,BOOLEAN_APPROXIMATE_COUNT_AGGREGATION).approximateAggregate("count",VARCHAR,ImmutableList.of(BIGINT),VARCHAR,LONG_APPROXIMATE_COUNT_AGGREGATION).approximateAggregate("count",VARCHAR,ImmutableList.of(DOUBLE),VARCHAR,DOUBLE_APPROXIMATE_COUNT_AGGREGATION).approximateAggregate("count",VARCHAR,ImmutableList.of(VARCHAR),VARCHAR,VARBINARY_APPROXIMATE_COUNT_AGGREGATION);
  }
  addFunctions(builder.getFunctions(),builder.getOperators());
}
