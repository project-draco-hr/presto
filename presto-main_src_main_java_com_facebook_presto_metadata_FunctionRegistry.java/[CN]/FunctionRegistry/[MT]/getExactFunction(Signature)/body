{
  if (signature.getName().startsWith(OPERATOR_PREFIX)) {
    try {
      return getExactOperator(unmangleOperator(signature.getName()),resolveTypes(signature.getArgumentTypes(),typeManager),typeManager.getType(signature.getReturnType()));
    }
 catch (    OperatorNotFoundException e) {
      return null;
    }
  }
  Iterable<ParametricFunction> candidates=functions.get(QualifiedName.of(signature.getName()));
  for (  ParametricFunction operator : candidates) {
    Type returnType=typeManager.getType(signature.getReturnType());
    List<Type> argumentTypes=resolveTypes(signature.getArgumentTypes(),typeManager);
    if (operator.getSignature().match(returnType,argumentTypes,false,typeManager)) {
      return operator.specialize(returnType,argumentTypes);
    }
  }
  return null;
}
