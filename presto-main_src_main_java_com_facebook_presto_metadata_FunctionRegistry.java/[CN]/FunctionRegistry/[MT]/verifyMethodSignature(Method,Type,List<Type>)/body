{
  checkArgument(Primitives.unwrap(method.getReturnType()) == returnType.getJavaType(),"Expected method %s return type to be %s (%s)",method,returnType.getJavaType().getName(),returnType);
  Class<?>[] parameterTypes=method.getParameterTypes();
  if (parameterTypes.length > 0 && parameterTypes[0] == ConnectorSession.class) {
    parameterTypes=Arrays.copyOfRange(parameterTypes,1,parameterTypes.length);
  }
  for (int i=0; i < parameterTypes.length; i++) {
    Class<?> actualType=parameterTypes[i];
    Type expectedType=argumentTypes.get(i);
    checkArgument(Primitives.unwrap(actualType) == expectedType.getJavaType(),"Expected method %s parameter %s type to be %s (%s)",method,i,expectedType.getJavaType().getName(),expectedType);
  }
}
