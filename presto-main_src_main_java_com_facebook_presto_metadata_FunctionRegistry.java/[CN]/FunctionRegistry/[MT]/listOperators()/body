{
  final Set<String> operatorNames=FluentIterable.from(Arrays.asList(OperatorType.values())).transform(new Function<OperatorType,String>(){
    @Override public String apply(    OperatorType input){
      return mangleOperatorName(input);
    }
  }
).toSet();
  return FluentIterable.from(functions.functions.values()).filter(new Predicate<ParametricFunction>(){
    @Override public boolean apply(    ParametricFunction input){
      return operatorNames.contains(input.getSignature().getName());
    }
  }
).toList();
}
