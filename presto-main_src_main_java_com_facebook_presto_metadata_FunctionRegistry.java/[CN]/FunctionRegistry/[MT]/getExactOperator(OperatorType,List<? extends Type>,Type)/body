{
  Iterable<FunctionInfo> candidates=functions.get(QualifiedName.of(mangleOperatorName(operatorType)));
  List<String> argumentTypeNames=FluentIterable.from(argumentTypes).transform(nameGetter()).toList();
  for (  FunctionInfo operatorInfo : candidates) {
    if (operatorInfo.getReturnType().equals(returnType.getName()) && operatorInfo.getArgumentTypes().equals(argumentTypeNames)) {
      return operatorInfo;
    }
  }
  if ((operatorType == OperatorType.CAST) && (argumentTypes.size() == 1) && argumentTypes.get(0).equals(returnType)) {
    MethodHandle identity=MethodHandles.identity(returnType.getJavaType());
    return operatorInfo(OperatorType.CAST,returnType.getName(),FluentIterable.from(argumentTypes).transform(nameGetter()).toList(),identity,false,ImmutableList.of(false));
  }
  throw new OperatorNotFoundException(operatorType,argumentTypes,returnType);
}
