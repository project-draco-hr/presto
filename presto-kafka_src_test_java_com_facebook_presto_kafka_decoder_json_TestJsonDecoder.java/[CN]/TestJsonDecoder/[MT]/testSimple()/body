{
  byte[] json=ByteStreams.toByteArray(TestJsonDecoder.class.getResourceAsStream("/decoder/json/message.json"));
  JsonKafkaRowDecoder rowDecoder=new JsonKafkaRowDecoder(PROVIDER.get());
  KafkaColumnHandle row1=new KafkaColumnHandle("",0,"row1",VarcharType.VARCHAR,"source",null,null,false,false,false);
  KafkaColumnHandle row2=new KafkaColumnHandle("",1,"row2",VarcharType.VARCHAR,"user/screen_name",null,null,false,false,false);
  KafkaColumnHandle row3=new KafkaColumnHandle("",2,"row3",BigintType.BIGINT,"id",null,null,false,false,false);
  KafkaColumnHandle row4=new KafkaColumnHandle("",3,"row4",BigintType.BIGINT,"user/statuses_count",null,null,false,false,false);
  KafkaColumnHandle row5=new KafkaColumnHandle("",4,"row5",BooleanType.BOOLEAN,"user/geo_enabled",null,null,false,false,false);
  List<KafkaColumnHandle> columns=ImmutableList.of(row1,row2,row3,row4,row5);
  Set<KafkaFieldValueProvider> providers=new HashSet<>();
  boolean corrupt=rowDecoder.decodeRow(json,providers,columns,buildMap(columns));
  assertFalse(corrupt);
  assertEquals(providers.size(),columns.size());
  checkValue(providers,row1,"<a href=\"http://twitterfeed.com\" rel=\"nofollow\">twitterfeed</a>");
  checkValue(providers,row2,"EKentuckyNews");
  checkValue(providers,row3,493857959588286460L);
  checkValue(providers,row4,7630);
  checkValue(providers,row5,true);
}
