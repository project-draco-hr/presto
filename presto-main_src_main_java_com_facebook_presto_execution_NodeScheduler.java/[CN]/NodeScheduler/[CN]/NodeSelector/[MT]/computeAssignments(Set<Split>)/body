{
  Multimap<Node,Split> assignment=HashMultimap.create();
  for (  Split split : splits) {
    List<Node> candidateNodes;
    if (locationAwareScheduling) {
      candidateNodes=selectCandidateNodes(nodeMap.get().get(),split);
    }
 else {
      candidateNodes=selectRandomNodes(minCandidates);
    }
    checkState(!candidateNodes.isEmpty(),"No nodes available to run query");
    Node chosen=null;
    int min=Integer.MAX_VALUE;
    for (    Node node : candidateNodes) {
      RemoteTask task=taskMap.get(node);
      int currentSplits=(task == null) ? 0 : task.getQueuedSplits();
      int assignedSplits=currentSplits + assignment.get(node).size();
      if (assignedSplits < min && assignedSplits < maxPendingSplitsPerTask) {
        chosen=node;
        min=assignedSplits;
      }
    }
    if (chosen != null) {
      assignment.put(chosen,split);
    }
  }
  return assignment;
}
