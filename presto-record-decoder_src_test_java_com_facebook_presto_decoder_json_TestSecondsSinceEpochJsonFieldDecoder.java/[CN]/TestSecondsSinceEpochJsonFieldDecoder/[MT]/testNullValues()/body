{
  byte[] json="{}".getBytes(StandardCharsets.UTF_8);
  JsonRowDecoder rowDecoder=new JsonRowDecoder(PROVIDER.get());
  DecoderTestColumnHandle row1=new DecoderTestColumnHandle("",0,"row1",BigintType.BIGINT,"a_number",DEFAULT_FIELD_DECODER_NAME,null,false,false,false);
  DecoderTestColumnHandle row2=new DecoderTestColumnHandle("",1,"row2",createVarcharType(100),"a_string",DEFAULT_FIELD_DECODER_NAME,null,false,false,false);
  DecoderTestColumnHandle row3=new DecoderTestColumnHandle("",2,"row3",BigintType.BIGINT,"a_number",SecondsSinceEpochJsonFieldDecoder.NAME,null,false,false,false);
  DecoderTestColumnHandle row4=new DecoderTestColumnHandle("",3,"row4",BigintType.BIGINT,"a_string",SecondsSinceEpochJsonFieldDecoder.NAME,null,false,false,false);
  DecoderTestColumnHandle row5=new DecoderTestColumnHandle("",4,"row5",createVarcharType(100),"a_number",SecondsSinceEpochJsonFieldDecoder.NAME,null,false,false,false);
  DecoderTestColumnHandle row6=new DecoderTestColumnHandle("",5,"row6",createVarcharType(100),"a_string",SecondsSinceEpochJsonFieldDecoder.NAME,null,false,false,false);
  List<DecoderColumnHandle> columns=ImmutableList.of(row1,row2,row3,row4,row5,row6);
  Set<FieldValueProvider> providers=new HashSet<>();
  boolean corrupt=rowDecoder.decodeRow(json,null,providers,columns,buildMap(columns));
  assertFalse(corrupt);
  assertEquals(providers.size(),columns.size());
  checkIsNull(providers,row1);
  checkIsNull(providers,row2);
  checkIsNull(providers,row3);
  checkIsNull(providers,row4);
  checkIsNull(providers,row5);
  checkIsNull(providers,row6);
}
