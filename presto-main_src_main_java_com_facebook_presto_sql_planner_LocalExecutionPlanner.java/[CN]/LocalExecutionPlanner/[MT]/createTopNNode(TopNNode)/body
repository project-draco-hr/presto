{
  Preconditions.checkArgument(node.getOrderBy().size() == 1,"Order by multiple fields not yet supported");
  Symbol orderBySymbol=Iterables.getOnlyElement(node.getOrderBy());
  PlanNode source=node.getSource();
  Map<Symbol,Integer> symbolToChannelMappings=mapSymbolsToChannels(source.getOutputSymbols());
  List<ProjectionFunction> projections=new ArrayList<>();
  for (int i=0; i < node.getOutputSymbols().size(); i++) {
    Symbol symbol=node.getOutputSymbols().get(i);
    ProjectionFunction function=ProjectionFunctions.singleColumn(types.get(symbol).getRawType(),symbolToChannelMappings.get(symbol),0);
    projections.add(function);
  }
  Ordering<TupleReadable> ordering=Ordering.from(FieldOrderedTupleComparator.INSTANCE);
  if (node.getOrderings().get(orderBySymbol) == SortItem.Ordering.ASCENDING) {
    ordering=ordering.reverse();
  }
  return new TopNOperator(plan(source),(int)node.getCount(),symbolToChannelMappings.get(orderBySymbol),projections,ordering);
}
