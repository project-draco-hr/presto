{
  PlanNode source=node.getSource();
  Operator sourceOperator=plan(source);
  Map<Symbol,Integer> symbolToChannelMappings=mapSymbolsToChannels(source.getOutputSymbols());
  FilterFunction filter=new InterpretedFilterFunction(node.getPredicate(),symbolToChannelMappings);
  List<ProjectionFunction> projections=new ArrayList<>();
  for (int i=0; i < node.getOutputSymbols().size(); i++) {
    Symbol symbol=node.getOutputSymbols().get(i);
    ProjectionFunction function=ProjectionFunctions.singleColumn(types.get(symbol).getRawType(),symbolToChannelMappings.get(symbol),0);
    projections.add(function);
  }
  return new FilterAndProjectOperator(sourceOperator,filter,projections);
}
