{
  PlanNode source=node.getSource();
  Operator sourceOperator=plan(node.getSource());
  Map<Symbol,Integer> symbolToChannelMappings=mapSymbolsToChannels(source.getOutputSymbols());
  List<ProjectionFunction> projections=new ArrayList<>();
  for (int i=0; i < node.getExpressions().size(); i++) {
    Symbol symbol=node.getOutputSymbols().get(i);
    Expression expression=node.getExpressions().get(i);
    ProjectionFunction function=new InterpretedProjectionFunction(types.get(symbol),expression,symbolToChannelMappings,metadata);
    projections.add(function);
  }
  return new FilterAndProjectOperator(sourceOperator,FilterFunctions.TRUE_FUNCTION,projections);
}
