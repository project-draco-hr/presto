{
  probeSource=packIfNecessary(probeSymbols,probeSource,context.getTypes());
  buildSource=packIfNecessary(buildSymbols,buildSource,context.getTypes());
  int probeChannel=Iterables.getOnlyElement(getChannelSetForSymbols(probeSymbols,probeSource.getLayout()));
  int buildChannel=Iterables.getOnlyElement(getChannelSetForSymbols(buildSymbols,buildSource.getLayout()));
  SourceHashSupplier hashSupplier=context.getJoinHashFactory().getSourceHashSupplier(node,buildSource.getOperator(),buildChannel,context.getOperatorStats());
  ImmutableMultimap.Builder<Symbol,Input> outputMappings=ImmutableMultimap.builder();
  outputMappings.putAll(probeSource.getLayout());
  int offset=probeSource.getOperator().getChannelCount();
  for (  Map.Entry<Symbol,Input> entry : buildSource.getLayout().entries()) {
    Input input=entry.getValue();
    outputMappings.put(entry.getKey(),new Input(offset + input.getChannel(),input.getField()));
  }
  HashJoinOperator operator=createJoinOperator(node.getType(),hashSupplier,probeSource.getOperator(),probeChannel);
  return new PhysicalOperation(operator,outputMappings.build());
}
