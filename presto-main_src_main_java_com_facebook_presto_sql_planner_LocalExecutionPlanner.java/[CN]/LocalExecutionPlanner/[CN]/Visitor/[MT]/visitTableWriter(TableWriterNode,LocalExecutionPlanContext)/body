{
  PhysicalOperation exchange=createInMemoryExchange(node.getSource(),context);
  Optional<Integer> sampleWeightChannel=node.getSampleWeightSymbol().transform(exchange.channelGetter());
  RecordSink recordSink=recordSinkManager.getRecordSink(node.getTarget());
  List<Type> types=IterableTransformer.on(node.getColumns()).transform(Functions.forMap(context.getTypes())).list();
  List<Integer> inputChannels=IterableTransformer.on(node.getColumns()).transform(exchange.channelGetter()).list();
  OperatorFactory operatorFactory=new TableWriterOperatorFactory(context.getNextOperatorId(),recordSink,types,inputChannels,sampleWeightChannel);
  Map<Symbol,Integer> layout=ImmutableMap.<Symbol,Integer>builder().put(node.getOutputSymbols().get(0),0).put(node.getOutputSymbols().get(1),1).build();
  return new PhysicalOperation(operatorFactory,layout,exchange);
}
