{
  List<JoinNode.EquiJoinClause> clauses=node.getCriteria();
  List<Symbol> leftSymbols=Lists.transform(clauses,leftGetter());
  List<Symbol> rightSymbols=Lists.transform(clauses,rightGetter());
switch (node.getType()) {
case INNER:
case LEFT:
    return createJoinOperator(node,node.getLeft(),leftSymbols,node.getLeftHashSymbol(),node.getRight(),rightSymbols,node.getRightHashSymbol(),context);
case RIGHT:
  return createJoinOperator(node,node.getRight(),rightSymbols,node.getRightHashSymbol(),node.getLeft(),leftSymbols,node.getLeftHashSymbol(),context);
default :
throw new UnsupportedOperationException("Unsupported join type: " + node.getType());
}
}
