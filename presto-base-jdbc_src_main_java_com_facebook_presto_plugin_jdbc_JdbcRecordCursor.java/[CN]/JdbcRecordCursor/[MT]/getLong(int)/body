{
  checkState(!closed,"cursor is closed");
  try {
    Type type=getType(field);
    if (type.equals(TinyintType.TINYINT)) {
      return (long)resultSet.getByte(field + 1);
    }
    if (type.equals(SmallintType.SMALLINT)) {
      return (long)resultSet.getShort(field + 1);
    }
    if (type.equals(IntegerType.INTEGER)) {
      return (long)resultSet.getInt(field + 1);
    }
    if (type.equals(BigintType.BIGINT)) {
      return resultSet.getLong(field + 1);
    }
    if (type.equals(DateType.DATE)) {
      long localMillis=resultSet.getDate(field + 1).getTime();
      long utcMillis=ISOChronology.getInstance().getZone().getMillisKeepLocal(UTC,localMillis);
      return TimeUnit.MILLISECONDS.toDays(utcMillis);
    }
    if (type.equals(TimeType.TIME)) {
      Time time=resultSet.getTime(field + 1);
      return UTC_CHRONOLOGY.millisOfDay().get(time.getTime());
    }
    if (type.equals(TimestampType.TIMESTAMP)) {
      Timestamp timestamp=resultSet.getTimestamp(field + 1);
      return timestamp.getTime();
    }
    throw new PrestoException(GENERIC_INTERNAL_ERROR,"Unhandled type for long: " + type.getTypeSignature());
  }
 catch (  SQLException e) {
    throw handleSqlException(e);
  }
}
