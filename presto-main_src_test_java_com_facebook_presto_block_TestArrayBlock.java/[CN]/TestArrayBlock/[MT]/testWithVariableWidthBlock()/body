{
  Slice[][] expectedValues=new Slice[ARRAY_SIZES.length][];
  for (int i=0; i < ARRAY_SIZES.length; i++) {
    expectedValues[i]=new Slice[ARRAY_SIZES[i]];
    for (int j=0; j < ARRAY_SIZES[i]; j++) {
      expectedValues[i][j]=Slices.utf8Slice(String.format("%d.%d",i,j));
    }
  }
  BlockBuilder blockBuilder=createBlockBuilderWithValues(expectedValues);
  assertBlock(blockBuilder,expectedValues);
  assertBlock(blockBuilder.build(),expectedValues);
  assertBlockFilteredPositions(expectedValues,blockBuilder.build(),Ints.asList(0,1,3,4,7));
  assertBlockFilteredPositions(expectedValues,blockBuilder.build(),Ints.asList(2,3,5,6));
  Slice[][] expectedValuesWithNull=(Slice[][])alternatingNullValues(expectedValues);
  BlockBuilder blockBuilderWithNull=createBlockBuilderWithValues(expectedValuesWithNull);
  assertBlock(blockBuilderWithNull,expectedValuesWithNull);
  assertBlock(blockBuilderWithNull.build(),expectedValuesWithNull);
  assertBlockFilteredPositions(expectedValuesWithNull,blockBuilderWithNull.build(),Ints.asList(0,1,5,6,7,10,11,12,15));
  assertBlockFilteredPositions(expectedValuesWithNull,blockBuilderWithNull.build(),Ints.asList(2,3,4,9,13,14));
}
