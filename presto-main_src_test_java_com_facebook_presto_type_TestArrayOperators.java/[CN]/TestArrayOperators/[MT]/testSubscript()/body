{
  String outOfBounds="Array subscript out of bounds";
  String negativeIndex="Array subscript is negative";
  String indexIsZero="SQL array indices start at 1";
  assertInvalidFunction("ARRAY [][1]",outOfBounds);
  assertInvalidFunction("ARRAY [null][-1]",negativeIndex);
  assertInvalidFunction("ARRAY [1, 2, 3][0]",indexIsZero);
  assertInvalidFunction("ARRAY [1, 2, 3][-1]",negativeIndex);
  assertInvalidFunction("ARRAY [1, 2, 3][4]",outOfBounds);
  try {
    assertFunction("ARRAY [1, 2, 3][1.1]",BIGINT,null);
    fail("Access to array with double subscript should fail");
  }
 catch (  SemanticException e) {
    assertTrue(e.getCode() == TYPE_MISMATCH);
  }
  assertFunction("ARRAY[NULL][1]",UNKNOWN,null);
  assertFunction("ARRAY[NULL, NULL, NULL][3]",UNKNOWN,null);
  assertFunction("1 + ARRAY [2, 1, 3][2]",BIGINT,2L);
  assertFunction("ARRAY [2, 1, 3][2]",BIGINT,1L);
  assertFunction("ARRAY [2, NULL, 3][2]",BIGINT,null);
  assertFunction("ARRAY [1.0, 2.5, 3.5][3]",DOUBLE,3.5);
  assertFunction("ARRAY [ARRAY[1, 2], ARRAY[3]][2]",new ArrayType(BIGINT),ImmutableList.of(3L));
  assertFunction("ARRAY [ARRAY[1, 2], NULL, ARRAY[3]][2]",new ArrayType(BIGINT),null);
  assertFunction("ARRAY [ARRAY[1, 2], ARRAY[3]][2][1]",BIGINT,3L);
  assertFunction("ARRAY ['puppies', 'kittens'][2]",createVarcharType(7),"kittens");
  assertFunction("ARRAY ['puppies', 'kittens', NULL][3]",createVarcharType(7),null);
  assertFunction("ARRAY [TRUE, FALSE][2]",BOOLEAN,false);
  assertFunction("ARRAY [from_unixtime(1), from_unixtime(100)][1]",TIMESTAMP,sqlTimestamp(1000));
  assertFunction("ARRAY [infinity()][1]",DOUBLE,POSITIVE_INFINITY);
  assertFunction("ARRAY [-infinity()][1]",DOUBLE,NEGATIVE_INFINITY);
  assertFunction("ARRAY [sqrt(-1)][1]",DOUBLE,NaN);
}
