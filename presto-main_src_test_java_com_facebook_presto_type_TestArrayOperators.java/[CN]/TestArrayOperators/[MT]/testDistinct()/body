{
  assertFunction("ARRAY_DISTINCT(ARRAY [])",ImmutableList.of());
  assertFunction("ARRAY_DISTINCT(ARRAY [2, 3, 4, 3, 1, 2, 3])",ImmutableList.of(2L,3L,4L,1L));
  assertFunction("ARRAY_DISTINCT(ARRAY [2.2, 3.3, 4.4, 3.3, 1, 2.2, 3.3])",ImmutableList.of(2.2,3.3,4.4,1.0));
  assertFunction("ARRAY_DISTINCT(ARRAY [TRUE, TRUE, TRUE])",ImmutableList.of(true));
  assertFunction("ARRAY_DISTINCT(ARRAY [TRUE, FALSE, FALSE, TRUE])",ImmutableList.of(true,false));
  assertFunction("ARRAY_DISTINCT(ARRAY [from_unixtime(100), from_unixtime(1), from_unixtime(100)])",ImmutableList.of(sqlTimestamp(100 * 1000),sqlTimestamp(1000)));
  assertFunction("ARRAY_DISTINCT(ARRAY ['2', '3', '2'])",ImmutableList.of("2","3"));
  assertFunction("ARRAY_DISTINCT(ARRAY ['BB', 'CCC', 'BB'])",ImmutableList.of("BB","CCC"));
  assertFunction("ARRAY_DISTINCT(ARRAY [NULL, 2.2, 3.3, 4.4, 3.3, 1, 2.2, 3.3])",Arrays.asList(null,2.2,3.3,4.4,1.0));
  assertFunction("ARRAY_DISTINCT(ARRAY [2, 3, NULL, 4, 3, 1, 2, 3])",Arrays.asList(2L,3L,null,4L,1L));
  assertFunction("ARRAY_DISTINCT(ARRAY ['BB', 'CCC', 'BB', NULL])",Arrays.asList("BB","CCC",null));
  assertFunction("ARRAY_DISTINCT(ARRAY [NULL])",Arrays.asList((Object)null));
  assertFunction("ARRAY_DISTINCT(ARRAY [NULL, NULL])",Arrays.asList((Object)null));
  assertFunction("ARRAY_DISTINCT(ARRAY [NULL, NULL, NULL])",Arrays.asList((Object)null));
}
