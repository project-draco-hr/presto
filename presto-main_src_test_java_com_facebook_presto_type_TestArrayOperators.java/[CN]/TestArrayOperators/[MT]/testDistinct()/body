{
  assertFunction("ARRAY_DISTINCT(ARRAY [])",new ArrayType(UNKNOWN),ImmutableList.of());
  assertFunction("ARRAY_DISTINCT(ARRAY [2, 3, 4, 3, 1, 2, 3])",new ArrayType(BIGINT),ImmutableList.of(2L,3L,4L,1L));
  assertFunction("ARRAY_DISTINCT(ARRAY [2.2, 3.3, 4.4, 3.3, 1, 2.2, 3.3])",new ArrayType(DOUBLE),ImmutableList.of(2.2,3.3,4.4,1.0));
  assertFunction("ARRAY_DISTINCT(ARRAY [TRUE, TRUE, TRUE])",new ArrayType(BOOLEAN),ImmutableList.of(true));
  assertFunction("ARRAY_DISTINCT(ARRAY [TRUE, FALSE, FALSE, TRUE])",new ArrayType(BOOLEAN),ImmutableList.of(true,false));
  assertFunction("ARRAY_DISTINCT(ARRAY [from_unixtime(100), from_unixtime(1), from_unixtime(100)])",new ArrayType(TIMESTAMP),ImmutableList.of(sqlTimestamp(100 * 1000),sqlTimestamp(1000)));
  assertFunction("ARRAY_DISTINCT(ARRAY ['2', '3', '2'])",new ArrayType(VARCHAR),ImmutableList.of("2","3"));
  assertFunction("ARRAY_DISTINCT(ARRAY ['BB', 'CCC', 'BB'])",new ArrayType(VARCHAR),ImmutableList.of("BB","CCC"));
  assertFunction("ARRAY_DISTINCT(ARRAY [ARRAY [1], ARRAY [1, 2], ARRAY [1, 2, 3], ARRAY [1, 2]])",new ArrayType(new ArrayType(BIGINT)),ImmutableList.of(ImmutableList.of(1L),ImmutableList.of(1L,2L),ImmutableList.of(1L,2L,3L)));
  assertFunction("ARRAY_DISTINCT(ARRAY [NULL, 2.2, 3.3, 4.4, 3.3, 1, 2.2, 3.3])",new ArrayType(DOUBLE),asList(null,2.2,3.3,4.4,1.0));
  assertFunction("ARRAY_DISTINCT(ARRAY [2, 3, NULL, 4, 3, 1, 2, 3])",new ArrayType(BIGINT),asList(2L,3L,null,4L,1L));
  assertFunction("ARRAY_DISTINCT(ARRAY ['BB', 'CCC', 'BB', NULL])",new ArrayType(VARCHAR),asList("BB","CCC",null));
  assertFunction("ARRAY_DISTINCT(ARRAY [NULL])",new ArrayType(UNKNOWN),asList((Object)null));
  assertFunction("ARRAY_DISTINCT(ARRAY [NULL, NULL])",new ArrayType(UNKNOWN),asList((Object)null));
  assertFunction("ARRAY_DISTINCT(ARRAY [NULL, NULL, NULL])",new ArrayType(UNKNOWN),asList((Object)null));
}
