{
  assertFunction("CAST(CAST('[1, 2, 3]' AS JSON) AS ARRAY<BIGINT>)",new ArrayType(BIGINT),ImmutableList.of(1L,2L,3L));
  assertFunction("CAST(CAST('[1, null, 3]' AS JSON) AS ARRAY<BIGINT>)",new ArrayType(BIGINT),asList(1L,null,3L));
  assertFunction("CAST(CAST('[1, 2.0, 3]' AS JSON) AS ARRAY<DOUBLE>)",new ArrayType(DOUBLE),ImmutableList.of(1.0,2.0,3.0));
  assertFunction("CAST(CAST('[1.0, 2.5, 3.0]' AS JSON) AS ARRAY<DOUBLE>)",new ArrayType(DOUBLE),ImmutableList.of(1.0,2.5,3.0));
  assertFunction("CAST(CAST('[\"puppies\", \"kittens\"]' AS JSON) AS ARRAY<VARCHAR>)",new ArrayType(VARCHAR),ImmutableList.of("puppies","kittens"));
  assertFunction("CAST(CAST('[true, false]' AS JSON) AS ARRAY<BOOLEAN>)",new ArrayType(BOOLEAN),ImmutableList.of(true,false));
  assertFunction("CAST(CAST('[[1], [null]]' AS JSON) AS ARRAY<ARRAY<BIGINT>>)",new ArrayType(new ArrayType(BIGINT)),asList(asList(1L),asList((Long)null)));
  assertFunction("CAST(CAST('null' AS JSON) AS ARRAY<BIGINT>)",new ArrayType(BIGINT),null);
  assertInvalidFunction("CAST(CAST('[1, null, 3]' AS JSON) AS ARRAY<TIMESTAMP>)");
  assertInvalidFunction("CAST(CAST('[1, null, 3]' AS JSON) AS ARRAY<ARRAY<TIMESTAMP>>)");
  assertInvalidFunction("CAST(CAST('[1, 2, 3]' AS JSON) AS ARRAY<BOOLEAN>)");
  assertInvalidFunction("CAST(CAST('[\"puppies\", \"kittens\"]' AS JSON) AS ARRAY<BIGINT>)");
}
