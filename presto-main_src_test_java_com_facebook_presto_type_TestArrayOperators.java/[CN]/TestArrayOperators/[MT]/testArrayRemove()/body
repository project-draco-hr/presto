{
  assertFunction("ARRAY_REMOVE(ARRAY ['foo', 'bar', 'baz'], 'foo')",new ArrayType(createVarcharType(3)),ImmutableList.of("bar","baz"));
  assertFunction("ARRAY_REMOVE(ARRAY ['foo', 'bar', 'baz'], 'bar')",new ArrayType(createVarcharType(3)),ImmutableList.of("foo","baz"));
  assertFunction("ARRAY_REMOVE(ARRAY ['foo', 'bar', 'baz'], 'baz')",new ArrayType(createVarcharType(3)),ImmutableList.of("foo","bar"));
  assertFunction("ARRAY_REMOVE(ARRAY ['foo', 'bar', 'baz'], 'zzz')",new ArrayType(createVarcharType(3)),ImmutableList.of("foo","bar","baz"));
  assertFunction("ARRAY_REMOVE(ARRAY ['foo', 'foo', 'foo'], 'foo')",new ArrayType(createVarcharType(3)),ImmutableList.of());
  assertFunction("ARRAY_REMOVE(ARRAY [NULL, 'bar', 'baz'], 'foo')",new ArrayType(createVarcharType(3)),asList(null,"bar","baz"));
  assertFunction("ARRAY_REMOVE(ARRAY ['foo', 'bar', NULL], 'foo')",new ArrayType(createVarcharType(3)),asList("bar",null));
  assertFunction("ARRAY_REMOVE(ARRAY [1, 2, 3], 1)",new ArrayType(INTEGER),ImmutableList.of(2,3));
  assertFunction("ARRAY_REMOVE(ARRAY [1, 2, 3], 2)",new ArrayType(INTEGER),ImmutableList.of(1,3));
  assertFunction("ARRAY_REMOVE(ARRAY [1, 2, 3], 3)",new ArrayType(INTEGER),ImmutableList.of(1,2));
  assertFunction("ARRAY_REMOVE(ARRAY [1, 2, 3], 4)",new ArrayType(INTEGER),ImmutableList.of(1,2,3));
  assertFunction("ARRAY_REMOVE(ARRAY [1, 1, 1], 1)",new ArrayType(INTEGER),ImmutableList.of());
  assertFunction("ARRAY_REMOVE(ARRAY [NULL, 2, 3], 1)",new ArrayType(INTEGER),asList(null,2,3));
  assertFunction("ARRAY_REMOVE(ARRAY [1, NULL, 3], 1)",new ArrayType(INTEGER),asList(null,3));
  assertFunction("ARRAY_REMOVE(ARRAY [-1.23, 3.14], 3.14)",new ArrayType(DOUBLE),ImmutableList.of(-1.23));
  assertFunction("ARRAY_REMOVE(ARRAY [3.14], 0.0)",new ArrayType(DOUBLE),ImmutableList.of(3.14));
  assertFunction("ARRAY_REMOVE(ARRAY [sqrt(-1), 3.14], 3.14)",new ArrayType(DOUBLE),ImmutableList.of(NaN));
  assertFunction("ARRAY_REMOVE(ARRAY [-1.23, sqrt(-1)], nan())",new ArrayType(DOUBLE),ImmutableList.of(-1.23,NaN));
  assertFunction("ARRAY_REMOVE(ARRAY [-1.23, nan()], nan())",new ArrayType(DOUBLE),ImmutableList.of(-1.23,NaN));
  assertFunction("ARRAY_REMOVE(ARRAY [-1.23, infinity()], -1.23)",new ArrayType(DOUBLE),ImmutableList.of(POSITIVE_INFINITY));
  assertFunction("ARRAY_REMOVE(ARRAY [infinity(), 3.14], infinity())",new ArrayType(DOUBLE),ImmutableList.of(3.14));
  assertFunction("ARRAY_REMOVE(ARRAY [-1.23, NULL, 3.14], 3.14)",new ArrayType(DOUBLE),asList(-1.23,null));
  assertFunction("ARRAY_REMOVE(ARRAY [TRUE, FALSE, TRUE], TRUE)",new ArrayType(BOOLEAN),ImmutableList.of(false));
  assertFunction("ARRAY_REMOVE(ARRAY [TRUE, FALSE, TRUE], FALSE)",new ArrayType(BOOLEAN),ImmutableList.of(true,true));
  assertFunction("ARRAY_REMOVE(ARRAY [NULL, FALSE, TRUE], TRUE)",new ArrayType(BOOLEAN),asList(null,false));
  assertFunction("ARRAY_REMOVE(ARRAY [ARRAY ['foo'], ARRAY ['bar'], ARRAY ['baz']], ARRAY ['bar'])",new ArrayType(new ArrayType(createVarcharType(3))),ImmutableList.of(ImmutableList.of("foo"),ImmutableList.of("baz")));
}
