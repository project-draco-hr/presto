{
  assertFunction("CAST(ARRAY [null] AS ARRAY<INTEGER>)",new ArrayType(INTEGER),asList((Integer)null));
  assertFunction("CAST(ARRAY [1, 2, 3] AS ARRAY<INTEGER>)",new ArrayType(INTEGER),ImmutableList.of(1,2,3));
  assertFunction("CAST(ARRAY [1, null, 3] AS ARRAY<INTEGER>)",new ArrayType(INTEGER),asList(1,null,3));
  assertFunction("CAST(ARRAY [null] AS ARRAY<BIGINT>)",new ArrayType(BIGINT),asList((Long)null));
  assertFunction("CAST(ARRAY [1, 2, 3] AS ARRAY<BIGINT>)",new ArrayType(BIGINT),ImmutableList.of(1L,2L,3L));
  assertFunction("CAST(ARRAY [1, null, 3] AS ARRAY<BIGINT>)",new ArrayType(BIGINT),asList(1L,null,3L));
  assertFunction("CAST(ARRAY [1, 2, 3] AS ARRAY<DOUBLE>)",new ArrayType(DOUBLE),ImmutableList.of(1.0,2.0,3.0));
  assertFunction("CAST(ARRAY [1, null, 3] AS ARRAY<DOUBLE>)",new ArrayType(DOUBLE),asList(1.0,null,3.0));
  assertFunction("CAST(ARRAY ['1', '2'] AS ARRAY<VARCHAR>)",new ArrayType(VARCHAR),ImmutableList.of("1","2"));
  assertFunction("CAST(ARRAY ['1', '2'] AS ARRAY<DOUBLE>)",new ArrayType(DOUBLE),ImmutableList.of(1.0,2.0));
  assertFunction("CAST(ARRAY [true, false] AS ARRAY<BOOLEAN>)",new ArrayType(BOOLEAN),ImmutableList.of(true,false));
  assertFunction("CAST(ARRAY [true, false] AS ARRAY<VARCHAR>)",new ArrayType(VARCHAR),ImmutableList.of("true","false"));
  assertFunction("CAST(ARRAY [1, 0] AS ARRAY<BOOLEAN>)",new ArrayType(BOOLEAN),ImmutableList.of(true,false));
  assertFunction("CAST(ARRAY [ARRAY[1], ARRAY[2, 3]] AS ARRAY<ARRAY<DOUBLE>>)",new ArrayType(new ArrayType(DOUBLE)),asList(asList(1.0),asList(2.0,3.0)));
  assertInvalidFunction("CAST(ARRAY [1, null, 3] AS ARRAY<TIMESTAMP>)",TYPE_MISMATCH);
  assertInvalidFunction("CAST(ARRAY [1, null, 3] AS ARRAY<ARRAY<TIMESTAMP>>)",TYPE_MISMATCH);
  assertInvalidFunction("CAST(ARRAY ['puppies', 'kittens'] AS ARRAY<BIGINT>)",INVALID_CAST_ARGUMENT);
}
