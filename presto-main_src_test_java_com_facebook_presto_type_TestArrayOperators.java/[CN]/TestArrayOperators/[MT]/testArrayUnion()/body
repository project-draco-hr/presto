{
  assertFunction("ARRAY_UNION(ARRAY [cast(10 as bigint), NULL, cast(12 as bigint), NULL], ARRAY [NULL, cast(10 as bigint), NULL, NULL])",new ArrayType(BIGINT),asList(10L,null,12L));
  assertFunction("ARRAY_UNION(ARRAY [12], ARRAY [10])",new ArrayType(INTEGER),ImmutableList.of(12,10));
  assertFunction("ARRAY_UNION(ARRAY ['foo', 'bar', 'baz'], ARRAY ['foo', 'test', 'bar'])",new ArrayType(createVarcharType(4)),ImmutableList.of("foo","bar","baz","test"));
  assertFunction("ARRAY_UNION(ARRAY [NULL], ARRAY [NULL, NULL])",new ArrayType(UNKNOWN),asList((Object)null));
  assertFunction("ARRAY_UNION(ARRAY ['abc', NULL, 'xyz', NULL], ARRAY [NULL, 'abc', NULL, NULL])",new ArrayType(createVarcharType(3)),asList("abc",null,"xyz"));
  assertFunction("ARRAY_UNION(ARRAY [1, 5], ARRAY [1])",new ArrayType(INTEGER),ImmutableList.of(1,5));
  assertFunction("ARRAY_UNION(ARRAY [1, 1, 2, 4], ARRAY [1, 1, 4, 4])",new ArrayType(INTEGER),ImmutableList.of(1,2,4));
  assertFunction("ARRAY_UNION(ARRAY [2, 8], ARRAY [8, 3])",new ArrayType(INTEGER),ImmutableList.of(2,8,3));
  assertFunction("ARRAY_UNION(ARRAY [IF (RAND() < 1.0, 7, 1) , 2], ARRAY [7])",new ArrayType(INTEGER),ImmutableList.of(7,2));
  assertFunction("ARRAY_UNION(ARRAY [1, 5], ARRAY [1.0])",new ArrayType(DOUBLE),ImmutableList.of(1.0,5.0));
  assertFunction("ARRAY_UNION(ARRAY [8.3, 1.6, 4.1, 5.2], ARRAY [4.0, 5.2, 8.3, 9.7, 3.5])",new ArrayType(DOUBLE),ImmutableList.of(8.3,1.6,4.1,5.2,4.0,9.7,3.5));
  assertFunction("ARRAY_UNION(ARRAY [5.1, 7, 3.0, 4.8, 10], ARRAY [6.5, 10.0, 1.9, 5.1, 3.9, 4.8])",new ArrayType(DOUBLE),ImmutableList.of(5.1,7.0,3.0,4.8,10.0,6.5,1.9,3.9));
  assertFunction("ARRAY_UNION(ARRAY [ARRAY [4, 5], ARRAY [6, 7]], ARRAY [ARRAY [4, 5], ARRAY [6, 8]])",new ArrayType(new ArrayType(INTEGER)),ImmutableList.of(ImmutableList.of(4,5),ImmutableList.of(6,7),ImmutableList.of(6,8)));
}
