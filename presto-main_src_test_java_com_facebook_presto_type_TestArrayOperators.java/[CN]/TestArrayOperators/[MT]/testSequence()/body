{
  assertFunction("SEQUENCE(1, 5)",new ArrayType(BIGINT),ImmutableList.of(1L,2L,3L,4L,5L));
  assertFunction("SEQUENCE(-10, -5)",new ArrayType(BIGINT),ImmutableList.of(-10L,-9L,-8L,-7L,-6L,-5L));
  assertFunction("SEQUENCE(-5, 2)",new ArrayType(BIGINT),ImmutableList.of(-5L,-4L,-3L,-2L,-1L,0L,1L,2L));
  assertFunction("SEQUENCE(2, 2)",new ArrayType(BIGINT),ImmutableList.of(2L));
  assertFunction("SEQUENCE(5, 1)",new ArrayType(BIGINT),ImmutableList.of(5L,4L,3L,2L,1L));
  assertFunction("SEQUENCE(-5, -10)",new ArrayType(BIGINT),ImmutableList.of(-5L,-6L,-7L,-8L,-9L,-10L));
  assertFunction("SEQUENCE(2, -5)",new ArrayType(BIGINT),ImmutableList.of(2L,1L,0L,-1L,-2L,-3L,-4L,-5L));
  assertFunction("SEQUENCE(1, 9, 4)",new ArrayType(BIGINT),ImmutableList.of(1L,5L,9L));
  assertFunction("SEQUENCE(-10, -5, 2)",new ArrayType(BIGINT),ImmutableList.of(-10L,-8L,-6L));
  assertFunction("SEQUENCE(-5, 2, 3)",new ArrayType(BIGINT),ImmutableList.of(-5L,-2L,1L));
  assertFunction("SEQUENCE(2, 2, 2)",new ArrayType(BIGINT),ImmutableList.of(2L));
  assertFunction("SEQUENCE(5, 1, -1)",new ArrayType(BIGINT),ImmutableList.of(5L,4L,3L,2L,1L));
  assertFunction("SEQUENCE(10, 2, -2)",new ArrayType(BIGINT),ImmutableList.of(10L,8L,6L,4L,2L));
  assertInvalidFunction("SEQUENCE(2, -1, 1)",INVALID_FUNCTION_ARGUMENT);
  assertInvalidFunction("SEQUENCE(-1, -10, 1)",INVALID_FUNCTION_ARGUMENT);
}
