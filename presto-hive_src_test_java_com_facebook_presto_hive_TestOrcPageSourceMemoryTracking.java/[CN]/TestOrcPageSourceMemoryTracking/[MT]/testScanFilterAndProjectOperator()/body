{
  DriverContext driverContext=testPreparer.newDriverContext();
  SourceOperator operator=testPreparer.newScanFilterAndProjectOperator(driverContext);
  assertEquals(driverContext.getSystemMemoryUsage(),0);
  for (int i=0; i < 52; i++) {
    assertFalse(operator.isFinished());
    operator.getOutput();
    assertBetweenInclusive(driverContext.getSystemMemoryUsage(),550000L,639999L);
  }
  for (int i=52; i < 65; i++) {
    assertFalse(operator.isFinished());
    operator.getOutput();
    assertBetweenInclusive(driverContext.getSystemMemoryUsage(),450000L,539999L);
  }
  assertFalse(operator.isFinished());
  assertNull(operator.getOutput());
  assertBetweenInclusive(driverContext.getSystemMemoryUsage(),100000L,109999L);
  assertFalse(operator.isFinished());
  Page lastPage=operator.getOutput();
  assertNotNull(lastPage);
  assertTrue(operator.isFinished());
  PageBuilder pageBuilder=new PageBuilder(ImmutableList.of(createUnboundedVarcharType(),createUnboundedVarcharType()));
  for (int i=0; i < lastPage.getPositionCount(); i++) {
    pageBuilder.declarePosition();
    createUnboundedVarcharType().appendTo(lastPage.getBlock(0),i,pageBuilder.getBlockBuilder(0));
    createUnboundedVarcharType().appendTo(lastPage.getBlock(1),i,pageBuilder.getBlockBuilder(1));
  }
  pageBuilder.reset();
  assertEquals(driverContext.getSystemMemoryUsage(),pageBuilder.getRetainedSizeInBytes());
}
