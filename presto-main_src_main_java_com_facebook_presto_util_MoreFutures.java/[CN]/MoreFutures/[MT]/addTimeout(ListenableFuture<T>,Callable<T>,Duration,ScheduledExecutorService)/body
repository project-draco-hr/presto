{
  if (future.isDone()) {
    return future;
  }
  final SettableFuture<T> settableFuture=SettableFuture.create();
  final ScheduledFuture<?> timeoutTaskFuture=executorService.schedule(new TimeoutFutureTask<>(settableFuture,timeoutTask,future),timeout.toMillis(),TimeUnit.MILLISECONDS);
  Futures.addCallback(future,new FutureCallback<T>(){
    @Override public void onSuccess(    @Nullable T result){
      settableFuture.set(result);
      timeoutTaskFuture.cancel(true);
    }
    @Override public void onFailure(    Throwable t){
      settableFuture.setException(t);
      timeoutTaskFuture.cancel(true);
    }
  }
,executorService);
  return settableFuture;
}
