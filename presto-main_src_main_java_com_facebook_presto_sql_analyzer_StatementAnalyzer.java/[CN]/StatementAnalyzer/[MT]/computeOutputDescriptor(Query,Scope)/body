{
  ImmutableList.Builder<Field> outputFields=ImmutableList.builder();
  int relationId=analysis.getNextRelationId();
  int index=0;
  for (  Expression expression : node.getSelect().getSelectItems()) {
    if (expression instanceof AllColumns) {
      Optional<QualifiedName> starPrefix=((AllColumns)expression).getPrefix();
      List<TupleDescriptor> descriptors=queryScope.getDescriptorsMatching(starPrefix);
      for (      TupleDescriptor descriptor : descriptors) {
        for (        Field field : descriptor.getFields()) {
          outputFields.add(new Field(relationId,field.getName(),field.getType(),index++));
        }
      }
    }
 else {
      Optional<String> alias=Optional.absent();
      if (expression instanceof AliasedExpression) {
        AliasedExpression aliased=(AliasedExpression)expression;
        alias=Optional.of(aliased.getAlias());
      }
 else       if (expression instanceof QualifiedNameReference) {
        alias=Optional.of(((QualifiedNameReference)expression).getName().getSuffix());
      }
      outputFields.add(new Field(relationId,alias,analysis.getType(expression),index++));
    }
  }
  TupleDescriptor result=new TupleDescriptor(outputFields.build());
  analysis.setOutputDescriptor(node,result);
  return result;
}
