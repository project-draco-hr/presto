{
  List<SortItem> items=node.getOrderBy();
  ImmutableList.Builder<FieldOrExpression> orderByFieldsBuilder=ImmutableList.builder();
  if (!items.isEmpty()) {
    for (    SortItem item : items) {
      Expression expression=item.getSortKey();
      FieldOrExpression orderByField;
      if (expression instanceof LongLiteral) {
        long ordinal=((LongLiteral)expression).getValue();
        if (ordinal < 1 || ordinal > tupleDescriptor.getFields().size()) {
          throw new SemanticException(INVALID_ORDINAL,expression,"ORDER BY position %s is not in select list",ordinal);
        }
        orderByField=new FieldOrExpression((int)(ordinal - 1));
      }
 else {
        orderByField=new FieldOrExpression(expression);
        ExpressionAnalysis expressionAnalysis=Analyzer.analyzeExpression(session,metadata,tupleDescriptor,analysis,experimentalSyntaxEnabled,context,orderByField.getExpression());
        analysis.addInPredicates(node,expressionAnalysis.getSubqueryInPredicates());
      }
      orderByFieldsBuilder.add(orderByField);
    }
  }
  analysis.setOrderByExpressions(node,orderByFieldsBuilder.build());
}
