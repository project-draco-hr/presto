{
  ImmutableList.Builder<Expression> rows=ImmutableList.builder();
  for (  Entry<String,String> property : new TreeMap<>(session.getSystemProperties()).entrySet()) {
    rows.add(row(new StringLiteral(property.getKey()),new StringLiteral(property.getValue()),TRUE_LITERAL));
  }
  for (  Entry<String,Map<String,String>> entry : new TreeMap<>(session.getCatalogProperties()).entrySet()) {
    String catalog=entry.getKey();
    for (    Entry<String,String> property : new TreeMap<>(entry.getValue()).entrySet()) {
      rows.add(row(new StringLiteral(catalog + "." + property.getKey()),new StringLiteral(property.getValue()),TRUE_LITERAL));
    }
  }
  rows.add(row(new StringLiteral(""),new StringLiteral(""),FALSE_LITERAL));
  Query query=simpleQuery(selectList(aliasedName("name","Name"),aliasedName("value","Value")),aliased(new Values(rows.build()),"session",ImmutableList.of("name","value","include")),nameReference("include"));
  return process(query,context);
}
