{
  List<SortItem> items=node.getOrderBy();
  ImmutableList.Builder<Expression> orderByFieldsBuilder=ImmutableList.builder();
  for (  SortItem item : items) {
    Expression expression=item.getSortKey();
    if (expression instanceof LongLiteral) {
      long ordinal=((LongLiteral)expression).getValue();
      if (ordinal < 1 || ordinal > tupleDescriptor.getVisibleFieldCount()) {
        throw new SemanticException(INVALID_ORDINAL,expression,"ORDER BY position %s is not in select list",ordinal);
      }
      expression=new FieldReference(Ints.checkedCast(ordinal - 1));
    }
    ExpressionAnalysis expressionAnalysis=ExpressionAnalyzer.analyzeExpression(session,metadata,accessControl,sqlParser,tupleDescriptor,analysis,experimentalSyntaxEnabled,context,expression);
    analysis.recordSubqueries(node,expressionAnalysis);
    orderByFieldsBuilder.add(expression);
  }
  analysis.setOrderByExpressions(node,orderByFieldsBuilder.build());
}
