{
  QualifiedTableName table=MetadataUtil.createQualifiedTableName(session,showPartitions.getTable());
  Optional<TableHandle> tableHandle=metadata.getTableHandle(table);
  if (!tableHandle.isPresent()) {
    throw new SemanticException(MISSING_TABLE,showPartitions,"Table '%s' does not exist",table);
  }
  ImmutableList.Builder<Expression> selectList=ImmutableList.builder();
  for (  String partition : metadata.getTableMetadata(tableHandle.get()).getPartitionKeys()) {
    Expression key=equal(nameReference("partition_key"),new StringLiteral(partition));
    Expression function=functionCall("max",caseWhen(key,nameReference("partition_value")));
    selectList.add(new AliasedExpression(function,partition));
  }
  Query query=new Query(Optional.<With>absent(),selectAll(selectList.build()),table(QualifiedName.of(table.getCatalogName(),INFORMATION_SCHEMA,TABLE_INTERNAL_PARTITIONS)),Optional.of(logicalAnd(equal(nameReference("table_schema"),new StringLiteral(table.getSchemaName())),equal(nameReference("table_name"),new StringLiteral(table.getTableName())))),ImmutableList.of(nameReference("partition_number")),Optional.<Expression>absent(),ImmutableList.of(ascending("partition_number")),Optional.<String>absent());
  return process(query,context);
}
