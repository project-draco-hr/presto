{
  getCursor(table,ImmutableList.of(textColumn,valueColumn),TupleDomain.withColumnDomains(ImmutableMap.<ColumnHandle,Domain>of(textColumn,Domain.singleValue(VARCHAR,utf8Slice("foo")))));
  getCursor(table,ImmutableList.of(textColumn,valueColumn),TupleDomain.withColumnDomains(ImmutableMap.<ColumnHandle,Domain>of(textColumn,Domain.union(ImmutableList.of(Domain.singleValue(VARCHAR,utf8Slice("foo")),Domain.singleValue(VARCHAR,utf8Slice("bar")))))));
  getCursor(table,ImmutableList.of(textColumn,valueColumn),TupleDomain.withColumnDomains(ImmutableMap.<ColumnHandle,Domain>of(textColumn,Domain.create(ValueSet.ofRanges(Range.greaterThan(VARCHAR,utf8Slice("foo"))),false))));
  getCursor(table,ImmutableList.of(textColumn,valueColumn),TupleDomain.withColumnDomains(ImmutableMap.<ColumnHandle,Domain>of(textColumn,Domain.create(ValueSet.ofRanges(Range.greaterThan(VARCHAR,utf8Slice("foo"))),false))));
  getCursor(table,ImmutableList.of(textColumn,valueColumn),TupleDomain.withColumnDomains(ImmutableMap.<ColumnHandle,Domain>of(textColumn,Domain.create(ValueSet.ofRanges(Range.lessThanOrEqual(VARCHAR,utf8Slice("foo"))),false))));
  getCursor(table,ImmutableList.of(textColumn,valueColumn),TupleDomain.withColumnDomains(ImmutableMap.<ColumnHandle,Domain>of(textColumn,Domain.create(ValueSet.ofRanges(Range.lessThan(VARCHAR,utf8Slice("foo"))),false))));
  getCursor(table,ImmutableList.of(textColumn,valueColumn),TupleDomain.withColumnDomains(ImmutableMap.<ColumnHandle,Domain>of(textColumn,Domain.onlyNull(VARCHAR))));
  getCursor(table,ImmutableList.of(textColumn,valueColumn),TupleDomain.withColumnDomains(ImmutableMap.<ColumnHandle,Domain>of(textColumn,Domain.notNull(VARCHAR))));
  getCursor(table,ImmutableList.of(textColumn,valueColumn),TupleDomain.withColumnDomains(ImmutableMap.<ColumnHandle,Domain>of(textColumn,Domain.union(ImmutableList.of(Domain.singleValue(VARCHAR,utf8Slice("foo")),Domain.onlyNull(VARCHAR))))));
  getCursor(table,ImmutableList.of(textColumn,valueColumn),TupleDomain.withColumnDomains(ImmutableMap.<ColumnHandle,Domain>of(textColumn,Domain.create(ValueSet.ofRanges(Range.range(VARCHAR,utf8Slice("bar"),true,utf8Slice("foo"),true)),false))));
  getCursor(table,ImmutableList.of(textColumn,valueColumn),TupleDomain.withColumnDomains(ImmutableMap.<ColumnHandle,Domain>of(textColumn,Domain.create(ValueSet.ofRanges(Range.range(VARCHAR,utf8Slice("bar"),true,utf8Slice("foo"),true),Range.range(VARCHAR,utf8Slice("hello"),false,utf8Slice("world"),false)),false))));
  getCursor(table,ImmutableList.of(textColumn,valueColumn),TupleDomain.withColumnDomains(ImmutableMap.<ColumnHandle,Domain>of(textColumn,Domain.create(ValueSet.ofRanges(Range.range(VARCHAR,utf8Slice("bar"),true,utf8Slice("foo"),true),Range.range(VARCHAR,utf8Slice("hello"),false,utf8Slice("world"),false),Range.equal(VARCHAR,utf8Slice("apple")),Range.equal(VARCHAR,utf8Slice("banana")),Range.equal(VARCHAR,utf8Slice("zoo"))),false),valueColumn,Domain.create(ValueSet.ofRanges(Range.range(BIGINT,1L,true,5L,true),Range.range(BIGINT,10L,false,20L,false)),true))));
}
