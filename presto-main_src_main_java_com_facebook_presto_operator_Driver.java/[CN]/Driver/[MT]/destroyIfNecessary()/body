{
  checkLockHeld("Lock must be held to call destroyIfNecessary");
  if (!state.compareAndSet(State.NEED_DESTRUCTION,State.DESTROYED)) {
    return;
  }
  boolean wasInterrupted=Thread.interrupted();
  Throwable inFlightException=null;
  try {
    for (    Operator operator : operators) {
      try {
        operator.close();
      }
 catch (      InterruptedException t) {
        wasInterrupted=true;
      }
catch (      Throwable t) {
        inFlightException=addSuppressedException(inFlightException,t,"Error closing operator %s for task %s",operator.getOperatorContext().getOperatorId(),driverContext.getTaskId());
      }
    }
    driverContext.finished();
  }
 catch (  Throwable t) {
    inFlightException=addSuppressedException(inFlightException,t,"Error destroying driver for task %s",driverContext.getTaskId());
  }
 finally {
    if (wasInterrupted) {
      Thread.currentThread().interrupt();
    }
  }
  if (inFlightException != null) {
    throw Throwables.propagate(inFlightException);
  }
}
