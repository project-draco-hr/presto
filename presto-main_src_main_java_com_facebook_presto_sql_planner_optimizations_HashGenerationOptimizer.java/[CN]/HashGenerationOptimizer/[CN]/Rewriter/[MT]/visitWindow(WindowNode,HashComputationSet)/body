{
  if (node.getPartitionBy().isEmpty()) {
    return planSimpleNodeWithProperties(node,parentPreference,true);
  }
  Optional<HashComputation> hashComputation=computeHash(node.getPartitionBy());
  PlanWithProperties child=planAndEnforce(node.getSource(),new HashComputationSet(hashComputation),true,parentPreference.withHashComputation(node,hashComputation));
  Symbol hashSymbol=child.getRequiredHashSymbol(hashComputation.get());
  return new PlanWithProperties(new WindowNode(idAllocator.getNextId(),child.getNode(),node.getSpecification(),node.getWindowFunctions(),Optional.of(hashSymbol),node.getPrePartitionedInputs(),node.getPreSortedOrderPrefix()),child.getHashSymbols());
}
