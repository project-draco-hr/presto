{
  List<JoinNode.EquiJoinClause> clauses=node.getCriteria();
  List<Symbol> leftSymbols=Lists.transform(clauses,leftGetter());
  List<Symbol> rightSymbols=Lists.transform(clauses,rightGetter());
  PlanNode rewrittenLeft=planRewriter.rewrite(node.getLeft(),null);
  PlanNode rewrittenRight=planRewriter.rewrite(node.getRight(),null);
  Symbol leftHashSymbol=symbolAllocator.newHashSymbol();
  Symbol rightHashSymbol=symbolAllocator.newHashSymbol();
  PlanNode leftHashProjectNode=getHashProjectNode(idAllocator,rewrittenLeft,leftHashSymbol,leftSymbols);
  PlanNode rightHashProjectNode=getHashProjectNode(idAllocator,rewrittenRight,rightHashSymbol,rightSymbols);
  return new JoinNode(idAllocator.getNextId(),node.getType(),leftHashProjectNode,rightHashProjectNode,node.getCriteria(),Optional.of(leftHashSymbol),Optional.of(rightHashSymbol));
}
