{
  if (node.getPartitionBy().isEmpty()) {
    return planSimpleNodeWithProperties(node,parentPreference);
  }
  Optional<HashComputation> hashComputation=computeHash(node.getPartitionBy());
  PlanWithProperties child=planAndEnforce(node.getSource(),new HashComputationSet(hashComputation),false,parentPreference.withHashComputation(node,hashComputation));
  Symbol hashSymbol=child.getRequiredHashSymbol(hashComputation.get());
  return new PlanWithProperties(new RowNumberNode(idAllocator.getNextId(),child.getNode(),node.getPartitionBy(),node.getRowNumberSymbol(),node.getMaxRowCountPerPartition(),Optional.of(hashSymbol)),child.getHashSymbols());
}
