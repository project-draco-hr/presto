{
  Type leftType=analysis.getType(leftExpression);
  Type rightType=analysis.getType(rightExpression);
  Optional<Type> superType=FunctionRegistry.getCommonSuperType(leftType,rightType);
  if (!superType.isPresent()) {
    throw new SemanticException(TYPE_MISMATCH,node,"Join criteria has incompatible types: %s, %s",leftType.getDisplayName(),rightType.getDisplayName());
  }
  if (!leftType.equals(superType.get())) {
    analysis.addCoercion(leftExpression,superType.get());
  }
  if (!rightType.equals(superType.get())) {
    analysis.addCoercion(rightExpression,superType.get());
  }
}
