{
  checkArgument(indexKeysRecordSet.getColumnTypes().equals(missingKeysTypes),"indexKeysRecordSet must have same schema as missingKeys");
  checkState(!isMemoryExceeded(),"Max memory exceeded");
  for (  Page page : pages) {
    outputPagesIndex.addPage(page);
  }
  pages.clear();
  LookupSource lookupSource=outputPagesIndex.createLookupSource(keyOutputChannels,keyOutputHashChannel,Optional.empty());
  PageBuilder missingKeysPageBuilder=new PageBuilder(missingKeysIndex.getTypes());
  UnloadedIndexKeyRecordCursor indexKeysRecordCursor=indexKeysRecordSet.cursor();
  while (indexKeysRecordCursor.advanceNextPosition()) {
    Block[] blocks=indexKeysRecordCursor.getBlocks();
    Page page=indexKeysRecordCursor.getPage();
    int position=indexKeysRecordCursor.getPosition();
    if (lookupSource.getJoinPosition(position,page,page) < 0) {
      missingKeysPageBuilder.declarePosition();
      for (int i=0; i < blocks.length; i++) {
        Block block=blocks[i];
        Type type=indexKeysRecordCursor.getType(i);
        type.appendTo(block,position,missingKeysPageBuilder.getBlockBuilder(i));
      }
    }
  }
  Page missingKeysPage=missingKeysPageBuilder.build();
  memoryInBytes+=missingKeysPage.getSizeInBytes();
  if (isMemoryExceeded()) {
    return null;
  }
  if (!missingKeysPageBuilder.isEmpty()) {
    missingKeysIndex.addPage(missingKeysPage);
    missingKeys=missingKeysIndex.createLookupSource(missingKeysChannels);
  }
  return new IndexSnapshot(lookupSource,missingKeys);
}
