{
  RootResourceGroup root=new RootResourceGroup("root",directExecutor());
  root.setSoftMemoryLimit(new DataSize(1,MEGABYTE));
  root.setMaxQueuedQueries(4);
  root.setMaxRunningQueries(1);
  ResourceGroup group1=root.getOrCreateSubGroup("1");
  group1.setSoftMemoryLimit(new DataSize(1,MEGABYTE));
  group1.setMaxQueuedQueries(4);
  group1.setMaxRunningQueries(1);
  ResourceGroup group2=root.getOrCreateSubGroup("2");
  group2.setSoftMemoryLimit(new DataSize(1,MEGABYTE));
  group2.setMaxQueuedQueries(4);
  group2.setMaxRunningQueries(1);
  ResourceGroup group3=root.getOrCreateSubGroup("3");
  group3.setSoftMemoryLimit(new DataSize(1,MEGABYTE));
  group3.setMaxQueuedQueries(4);
  group3.setMaxRunningQueries(1);
  MockQueryExecution query1a=new MockQueryExecution(0);
  group1.add(query1a);
  assertEquals(query1a.getState(),RUNNING);
  MockQueryExecution query1b=new MockQueryExecution(0);
  group1.add(query1b);
  assertEquals(query1b.getState(),QUEUED);
  MockQueryExecution query2a=new MockQueryExecution(0);
  group2.add(query2a);
  assertEquals(query2a.getState(),QUEUED);
  MockQueryExecution query2b=new MockQueryExecution(0);
  group2.add(query2b);
  assertEquals(query2b.getState(),QUEUED);
  MockQueryExecution query3a=new MockQueryExecution(0);
  group3.add(query3a);
  assertEquals(query3a.getState(),QUEUED);
  query1a.complete();
  root.processQueuedQueries();
  assertEquals(query1b.getState(),QUEUED);
  assertEquals(query2a.getState(),RUNNING);
  assertEquals(query2b.getState(),QUEUED);
  assertEquals(query3a.getState(),QUEUED);
  query2a.complete();
  root.processQueuedQueries();
  assertEquals(query3a.getState(),RUNNING);
  assertEquals(query2b.getState(),QUEUED);
  assertEquals(query1b.getState(),QUEUED);
  query3a.complete();
  root.processQueuedQueries();
  assertEquals(query1b.getState(),RUNNING);
  assertEquals(query2b.getState(),QUEUED);
}
