{
  if (actual.getBase().equals(UnknownType.NAME)) {
    if (expected.getBase().equals(StandardTypes.DECIMAL)) {
      return Optional.of(createDecimalType(1,0));
    }
    if (expected.getBase().equals(StandardTypes.VARCHAR)) {
      return Optional.of(createVarcharType(0));
    }
  }
  if (expected.isCalculated()) {
    return Optional.empty();
  }
  if (!canCoerce(actual,expected)) {
    return Optional.empty();
  }
  Optional<TypeSignature> commonType=getCommonSuperTypeSignature(actual,expected);
  checkState(commonType.isPresent(),"common supper type signature hasn't been found");
  checkState(baseTypesAreEqual(expected,commonType.get()),"base types are supposed to be equal after coercion");
  Type type=typeManager.getType(commonType.get());
  checkState(type != null,"type signature for concrete type must be calculated here");
  return Optional.of(type);
}
