{
  Optional<Symbol> mask=context.get();
  if (mask.isPresent() && mask.get().equals(node.getMarkerSymbol())) {
    AggregationNode aggregationNode=new AggregationNode(idAllocator.getNextId(),context.rewrite(node.getSource(),Optional.empty()),node.getDistinctSymbols(),Collections.emptyMap(),Collections.emptyMap(),Collections.emptyMap(),SINGLE,Optional.empty(),1.0,node.getHashSymbol());
    ImmutableMap.Builder<Symbol,Expression> outputSymbols=ImmutableMap.builder();
    for (    Symbol symbol : aggregationNode.getOutputSymbols()) {
      Expression expression=new QualifiedNameReference(symbol.toQualifiedName());
      outputSymbols.put(symbol,expression);
    }
    outputSymbols.put(mask.get(),new NullLiteral());
    return new ProjectNode(idAllocator.getNextId(),aggregationNode,outputSymbols.build());
  }
  return context.defaultRewrite(node,Optional.empty());
}
