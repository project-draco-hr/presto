{
  filter=ExpressionTreeRewriter.rewriteWith(new SymbolToInputRewriter(ImmutableMap.<Symbol,Input>of()),filter);
  IdentityHashMap<Expression,Type> expressionTypes=getExpressionTypesFromInput(SESSION,metadataManager,INPUT_TYPES,ImmutableList.of(filter));
  try {
    return compiler.compileFilterAndProjectOperator(0,filter,ImmutableList.<Expression>of(),expressionTypes);
  }
 catch (  Throwable e) {
    if (e instanceof UncheckedExecutionException) {
      e=e.getCause();
    }
    throw new RuntimeException("Error compiling " + filter + ": "+ e.getMessage(),e);
  }
}
