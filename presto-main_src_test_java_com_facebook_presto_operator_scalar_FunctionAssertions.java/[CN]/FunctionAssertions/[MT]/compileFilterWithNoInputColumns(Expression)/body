{
  filter=ExpressionTreeRewriter.rewriteWith(new SymbolToInputRewriter(ImmutableMap.<Symbol,Input>of()),filter);
  try {
    return compiler.compileFilterAndProjectOperator(0,filter,ImmutableList.<Expression>of(),ImmutableMap.<Input,Type>of(),ImmutableList.<Type>of());
  }
 catch (  Throwable e) {
    if (e instanceof UncheckedExecutionException) {
      e=e.getCause();
    }
    throw new RuntimeException("Error compiling " + filter + ": "+ e.getMessage(),e);
  }
}
