{
  filter=ExpressionTreeRewriter.rewriteWith(new SymbolToInputRewriter(ImmutableMap.<Symbol,Integer>of()),filter);
  IdentityHashMap<Expression,Type> expressionTypes=getExpressionTypesFromInput(TEST_SESSION,metadata,SQL_PARSER,INPUT_TYPES,ImmutableList.of(filter));
  try {
    Supplier<PageProcessor> processor=compiler.compilePageProcessor(toRowExpression(filter,expressionTypes),ImmutableList.of());
    return new FilterAndProjectOperator.FilterAndProjectOperatorFactory(0,new PlanNodeId("test"),processor,ImmutableList.<Type>of());
  }
 catch (  Throwable e) {
    if (e instanceof UncheckedExecutionException) {
      e=e.getCause();
    }
    throw new RuntimeException("Error compiling " + filter + ": "+ e.getMessage(),e);
  }
}
