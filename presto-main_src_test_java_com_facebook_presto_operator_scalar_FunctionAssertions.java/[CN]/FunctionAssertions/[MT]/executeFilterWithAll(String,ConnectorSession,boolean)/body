{
  checkNotNull(filter,"filter is null");
  Expression filterExpression=createExpression(filter,metadataManager,SYMBOL_TYPES);
  List<Boolean> results=new ArrayList<>();
  OperatorFactory operatorFactory=compileFilterProject(filterExpression,TRUE_LITERAL);
  results.add(executeFilter(operatorFactory,session));
  if (executeWithNoInputColumns) {
    operatorFactory=compileFilterWithNoInputColumns(filterExpression);
    results.add(executeFilterWithNoInputColumns(operatorFactory,session));
  }
  boolean interpretedValue=executeFilter(interpretedFilterProject(filterExpression,TRUE_LITERAL,session));
  results.add(interpretedValue);
  SourceOperatorFactory scanProjectOperatorFactory=compileScanFilterProject(filterExpression,TRUE_LITERAL);
  boolean scanOperatorValue=executeFilter(scanProjectOperatorFactory,createNormalSplit(),session);
  results.add(scanOperatorValue);
  boolean recordValue=executeFilter(scanProjectOperatorFactory,createRecordSetSplit(),session);
  results.add(recordValue);
  if (!needsBoundValue(filterExpression)) {
    MaterializedResult result=runner.execute("SELECT TRUE WHERE " + filter);
    assertEquals(result.getTypes().size(),1);
    Boolean queryResult;
    if (result.getMaterializedRows().isEmpty()) {
      queryResult=false;
    }
 else {
      assertEquals(result.getMaterializedRows().size(),1);
      queryResult=(Boolean)Iterables.getOnlyElement(result.getMaterializedRows()).getField(0);
    }
    results.add(queryResult);
  }
  return results;
}
