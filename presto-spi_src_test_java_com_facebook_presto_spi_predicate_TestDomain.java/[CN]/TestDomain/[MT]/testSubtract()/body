{
  Assert.assertEquals(Domain.all(BIGINT).subtract(Domain.all(BIGINT)),Domain.none(BIGINT));
  Assert.assertEquals(Domain.all(BIGINT).subtract(Domain.none(BIGINT)),Domain.all(BIGINT));
  Assert.assertEquals(Domain.all(BIGINT).subtract(Domain.notNull(BIGINT)),Domain.onlyNull(BIGINT));
  Assert.assertEquals(Domain.all(BIGINT).subtract(Domain.onlyNull(BIGINT)),Domain.notNull(BIGINT));
  Assert.assertEquals(Domain.all(BIGINT).subtract(Domain.singleValue(BIGINT,0L)),Domain.create(ValueSet.ofRanges(Range.lessThan(BIGINT,0L),Range.greaterThan(BIGINT,0L)),true));
  Assert.assertEquals(Domain.none(BIGINT).subtract(Domain.all(BIGINT)),Domain.none(BIGINT));
  Assert.assertEquals(Domain.none(BIGINT).subtract(Domain.none(BIGINT)),Domain.none(BIGINT));
  Assert.assertEquals(Domain.none(BIGINT).subtract(Domain.notNull(BIGINT)),Domain.none(BIGINT));
  Assert.assertEquals(Domain.none(BIGINT).subtract(Domain.onlyNull(BIGINT)),Domain.none(BIGINT));
  Assert.assertEquals(Domain.none(BIGINT).subtract(Domain.singleValue(BIGINT,0L)),Domain.none(BIGINT));
  Assert.assertEquals(Domain.notNull(BIGINT).subtract(Domain.all(BIGINT)),Domain.none(BIGINT));
  Assert.assertEquals(Domain.notNull(BIGINT).subtract(Domain.none(BIGINT)),Domain.notNull(BIGINT));
  Assert.assertEquals(Domain.notNull(BIGINT).subtract(Domain.notNull(BIGINT)),Domain.none(BIGINT));
  Assert.assertEquals(Domain.notNull(BIGINT).subtract(Domain.onlyNull(BIGINT)),Domain.notNull(BIGINT));
  Assert.assertEquals(Domain.notNull(BIGINT).subtract(Domain.singleValue(BIGINT,0L)),Domain.create(ValueSet.ofRanges(Range.lessThan(BIGINT,0L),Range.greaterThan(BIGINT,0L)),false));
  Assert.assertEquals(Domain.onlyNull(BIGINT).subtract(Domain.all(BIGINT)),Domain.none(BIGINT));
  Assert.assertEquals(Domain.onlyNull(BIGINT).subtract(Domain.none(BIGINT)),Domain.onlyNull(BIGINT));
  Assert.assertEquals(Domain.onlyNull(BIGINT).subtract(Domain.notNull(BIGINT)),Domain.onlyNull(BIGINT));
  Assert.assertEquals(Domain.onlyNull(BIGINT).subtract(Domain.onlyNull(BIGINT)),Domain.none(BIGINT));
  Assert.assertEquals(Domain.onlyNull(BIGINT).subtract(Domain.singleValue(BIGINT,0L)),Domain.onlyNull(BIGINT));
  Assert.assertEquals(Domain.singleValue(BIGINT,0L).subtract(Domain.all(BIGINT)),Domain.none(BIGINT));
  Assert.assertEquals(Domain.singleValue(BIGINT,0L).subtract(Domain.none(BIGINT)),Domain.singleValue(BIGINT,0L));
  Assert.assertEquals(Domain.singleValue(BIGINT,0L).subtract(Domain.notNull(BIGINT)),Domain.none(BIGINT));
  Assert.assertEquals(Domain.singleValue(BIGINT,0L).subtract(Domain.onlyNull(BIGINT)),Domain.singleValue(BIGINT,0L));
  Assert.assertEquals(Domain.singleValue(BIGINT,0L).subtract(Domain.singleValue(BIGINT,0L)),Domain.none(BIGINT));
  Assert.assertEquals(Domain.create(ValueSet.ofRanges(Range.equal(BIGINT,1L)),true).subtract(Domain.create(ValueSet.ofRanges(Range.equal(BIGINT,2L)),true)),Domain.singleValue(BIGINT,1L));
  Assert.assertEquals(Domain.create(ValueSet.ofRanges(Range.equal(BIGINT,1L)),true).subtract(Domain.create(ValueSet.ofRanges(Range.equal(BIGINT,1L),Range.equal(BIGINT,2L)),false)),Domain.onlyNull(BIGINT));
}
