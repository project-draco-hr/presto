{
  assertUnion(Domain.all(BIGINT),Domain.all(BIGINT),Domain.all(BIGINT));
  assertUnion(Domain.none(BIGINT),Domain.none(BIGINT),Domain.none(BIGINT));
  assertUnion(Domain.all(BIGINT),Domain.none(BIGINT),Domain.all(BIGINT));
  assertUnion(Domain.notNull(BIGINT),Domain.onlyNull(BIGINT),Domain.all(BIGINT));
  assertUnion(Domain.singleValue(BIGINT,0L),Domain.all(BIGINT),Domain.all(BIGINT));
  assertUnion(Domain.singleValue(BIGINT,0L),Domain.notNull(BIGINT),Domain.notNull(BIGINT));
  assertUnion(Domain.singleValue(BIGINT,0L),Domain.onlyNull(BIGINT),Domain.create(ValueSet.ofRanges(Range.equal(BIGINT,0L)),true));
  assertUnion(Domain.create(ValueSet.ofRanges(Range.equal(BIGINT,1L)),true),Domain.create(ValueSet.ofRanges(Range.equal(BIGINT,2L)),true),Domain.create(ValueSet.ofRanges(Range.equal(BIGINT,1L),Range.equal(BIGINT,2L)),true));
  assertUnion(Domain.create(ValueSet.ofRanges(Range.equal(BIGINT,1L)),true),Domain.create(ValueSet.ofRanges(Range.equal(BIGINT,1L),Range.equal(BIGINT,2L)),false),Domain.create(ValueSet.ofRanges(Range.equal(BIGINT,1L),Range.equal(BIGINT,2L)),true));
}
