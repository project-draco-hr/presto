{
  Preconditions.checkArgument(arguments.size() == 2);
  Block block=new Block(generator.getContext()).comment("AND").setDescription("AND");
  CompilerContext context=generator.getContext();
  ByteCodeNode left=generator.generate(arguments.get(0));
  ByteCodeNode right=generator.generate(arguments.get(1));
  block.append(left);
  IfStatement ifLeftIsNull=new IfStatement("if left wasNull...").condition(new Block(context).getVariable("wasNull"));
  LabelNode end=new LabelNode("end");
  ifLeftIsNull.ifTrue().comment("clear the null flag, pop left value off stack, and push left null flag on the stack (true)").putVariable(context.getVariable("wasNull"),false).pop(arguments.get(0).getType().getJavaType()).push(true);
  LabelNode leftIsTrue=new LabelNode("leftIsTrue");
  ifLeftIsNull.ifFalse().comment("if left is false, push false, and goto end").ifTrueGoto(leftIsTrue).push(false).gotoLabel(end).comment("left was true; push left null flag on the stack (false)").visitLabel(leftIsTrue).push(false);
  block.append(ifLeftIsNull);
  block.append(right);
  IfStatement ifRightIsNull=new IfStatement("if right wasNull...");
  ifRightIsNull.condition().append(context.getVariable("wasNull"));
  ifRightIsNull.ifTrue().comment("right was null, pop the right value off the stack; wasNull flag remains set to TRUE").pop(arguments.get(1).getType().getJavaType());
  LabelNode rightIsTrue=new LabelNode("rightIsTrue");
  ifRightIsNull.ifFalse().comment("if right is false, pop left null flag off stack, push false and goto end").ifTrueGoto(rightIsTrue).pop(boolean.class).push(false).gotoLabel(end).comment("right was true; store left null flag (on stack) in wasNull variable, and push true").visitLabel(rightIsTrue).putVariable(context.getVariable("wasNull")).push(true);
  block.append(ifRightIsNull).visitLabel(end);
  return block;
}
