{
  TypeRegistry typeManager=new TypeRegistry();
  ExpressionOptimizer optimizer=new ExpressionOptimizer(new FunctionRegistry(typeManager,new BlockEncodingManager(typeManager),new FeaturesConfig()),typeManager,TEST_SESSION);
  assertEquals(optimizer.optimize(ifExpression(new ConstantExpression(true,BOOLEAN),1L,2L)),new ConstantExpression(1L,BIGINT));
  assertEquals(optimizer.optimize(ifExpression(new ConstantExpression(false,BOOLEAN),1L,2L)),new ConstantExpression(2L,BIGINT));
  assertEquals(optimizer.optimize(ifExpression(new ConstantExpression(null,BOOLEAN),1L,2L)),new ConstantExpression(2L,BIGINT));
  Signature bigintEquals=internalOperator(OperatorType.EQUAL.name(),BOOLEAN.getTypeSignature(),BIGINT.getTypeSignature(),BIGINT.getTypeSignature());
  RowExpression condition=new CallExpression(bigintEquals,BOOLEAN,ImmutableList.of(new ConstantExpression(3L,BIGINT),new ConstantExpression(3L,BIGINT)));
  assertEquals(optimizer.optimize(ifExpression(condition,1L,2L)),new ConstantExpression(1L,BIGINT));
}
