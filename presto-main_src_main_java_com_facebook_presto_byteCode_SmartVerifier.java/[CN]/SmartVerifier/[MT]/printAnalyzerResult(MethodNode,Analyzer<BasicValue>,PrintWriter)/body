{
  Frame<BasicValue>[] frames=analyzer.getFrames();
  Textifier t=new Textifier();
  TraceMethodVisitor mv=new TraceMethodVisitor(t);
  writer.println(method.name + method.desc);
  for (int j=0; j < method.instructions.size(); ++j) {
    method.instructions.get(j).accept(mv);
    StringBuilder stringBuilder=new StringBuilder();
    Frame<BasicValue> f=frames[j];
    if (f == null) {
      stringBuilder.append('?');
    }
 else {
      for (int k=0; k < f.getLocals(); ++k) {
        stringBuilder.append(getShortName(f.getLocal(k).toString())).append(' ');
      }
      stringBuilder.append(" : ");
      for (int k=0; k < f.getStackSize(); ++k) {
        stringBuilder.append(getShortName(f.getStack(k).toString())).append(' ');
      }
    }
    while (stringBuilder.length() < method.maxStack + method.maxLocals + 1) {
      stringBuilder.append(' ');
    }
    writer.print(Integer.toString(j + 100000).substring(1));
    writer.print(" " + stringBuilder + " : "+ t.text.get(t.text.size() - 1));
  }
  for (int j=0; j < method.tryCatchBlocks.size(); ++j) {
    method.tryCatchBlocks.get(j).accept(mv);
    writer.print(" " + t.text.get(t.text.size() - 1));
  }
  writer.println();
}
