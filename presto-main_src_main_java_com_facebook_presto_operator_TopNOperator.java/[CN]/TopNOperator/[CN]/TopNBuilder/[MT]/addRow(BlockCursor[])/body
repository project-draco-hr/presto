{
  long sizeDelta=0;
  Tuple[] row=getValues(cursors);
  long sampleWeight=1;
  if (sampleWeightChannel.isPresent()) {
    sampleWeight=row[sampleWeightChannel.get()].getLong();
    row[sampleWeightChannel.get()]=Tuples.createTuple(1);
  }
  for (  Tuple tuple : row) {
    sizeDelta+=tuple.size();
  }
  for (int i=0; i < sampleWeight; i++) {
    sizeDelta+=OVERHEAD_PER_TUPLE.toBytes();
    globalCandidates.add(row);
  }
  while (globalCandidates.size() > n) {
    Tuple[] previous=globalCandidates.remove();
    if (previous != globalCandidates.peek()) {
      for (      Tuple tuple : previous) {
        sizeDelta-=tuple.size();
      }
    }
    sizeDelta-=OVERHEAD_PER_TUPLE.toBytes();
  }
  return sizeDelta;
}
