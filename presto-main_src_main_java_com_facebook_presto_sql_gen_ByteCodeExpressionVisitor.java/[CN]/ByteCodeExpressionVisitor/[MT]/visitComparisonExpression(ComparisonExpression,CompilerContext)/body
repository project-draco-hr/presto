{
  if (node.getType() == ComparisonExpression.Type.IS_DISTINCT_FROM) {
    return visitIsDistinctFrom(node,context);
  }
  ByteCodeNode left=process(node.getLeft(),context);
  ByteCodeNode right=process(node.getRight(),context);
  FunctionBinding functionBinding=bootstrapFunctionBinder.bindOperator(OperatorType.valueOf(node.getType().name()),getSessionByteCode,ImmutableList.of(left,right),types(node.getLeft(),node.getRight()));
  return visitFunctionBinding(context,functionBinding,node.toString());
}
