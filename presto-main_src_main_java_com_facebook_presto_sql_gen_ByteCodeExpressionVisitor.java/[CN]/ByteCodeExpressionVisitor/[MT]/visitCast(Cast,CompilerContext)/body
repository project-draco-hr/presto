{
  Type type=metadata.getType(node.getType());
  if (type == null) {
    throw new IllegalArgumentException("Unsupported type: " + node.getType());
  }
  if (expressionTypes.get(node.getExpression()).equals(NULL)) {
    return new Block(context).putVariable("wasNull",true).pushJavaDefault(type.getJavaType());
  }
  ByteCodeNode value=process(node.getExpression(),context);
  FunctionBinding functionBinding=bootstrapFunctionBinder.bindCastOperator(getSessionByteCode,value,expressionTypes.get(node.getExpression()),type);
  return visitFunctionBinding(context,functionBinding,node.toString());
}
