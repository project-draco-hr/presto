{
  ByteCodeNode left=process(node.getLeft(),context);
  Type leftType=expressionTypes.get(node.getLeft());
  ByteCodeNode right=process(node.getRight(),context);
  Type rightType=expressionTypes.get(node.getRight());
switch (node.getType()) {
case AND:
    return visitAnd(context,left,leftType,right,rightType,node.toString());
case OR:
  return visitOr(context,left,leftType,right,rightType,node.toString());
}
throw new UnsupportedOperationException(format("not yet implemented: %s(%s, %s)",node.getType(),leftType,rightType));
}
