{
  Map<String,String> properties=ImmutableMap.<String,String>builder().put("comment","Presto View").put(PRESTO_VIEW_FLAG,"true").build();
  Column dummyColumn=new Column("dummy",HIVE_STRING,Optional.empty());
  Table.Builder tableBuilder=Table.builder().setDatabaseName(viewName.getSchemaName()).setTableName(viewName.getTableName()).setOwner(session.getUser()).setTableType(TableType.VIRTUAL_VIEW.name()).setDataColumns(ImmutableList.of(dummyColumn)).setPartitionColumns(ImmutableList.of()).setParameters(properties).setViewOriginalText(Optional.of(encodeViewData(viewData))).setViewExpandedText(Optional.of("/* Presto View */"));
  tableBuilder.getStorageBuilder().setStorageFormat(VIEW_STORAGE_FORMAT).setLocation("");
  Table table=tableBuilder.build();
  PrincipalPrivilegeSet principalPrivilegeSet=buildInitialPrivilegeSet(session.getUser());
  Optional<Table> existing=metastore.getTable(viewName.getSchemaName(),viewName.getTableName());
  if (existing.isPresent()) {
    if (!replace || !HiveUtil.isPrestoView(existing.get())) {
      throw new ViewAlreadyExistsException(viewName);
    }
    metastore.replaceView(viewName.getSchemaName(),viewName.getTableName(),table,principalPrivilegeSet);
    return;
  }
  try {
    metastore.createTable(session,table,principalPrivilegeSet,Optional.empty());
  }
 catch (  TableAlreadyExistsException e) {
    throw new ViewAlreadyExistsException(e.getTableName());
  }
}
