{
  boolean sampled=false;
  ImmutableList.Builder<FieldSchema> columns=ImmutableList.builder();
  for (  HiveColumnHandle columnHandle : columnHandles) {
    String name=columnHandle.getName();
    String type=columnHandle.getHiveType().getHiveTypeName();
    if (name.equals(SAMPLE_WEIGHT_COLUMN_NAME)) {
      columns.add(new FieldSchema(name,type,"Presto sample weight column"));
      sampled=true;
    }
 else {
      columns.add(new FieldSchema(name,type,null));
    }
  }
  SerDeInfo serdeInfo=new SerDeInfo();
  serdeInfo.setName(tableName);
  serdeInfo.setSerializationLib(hiveStorageFormat.getSerDe());
  serdeInfo.setParameters(ImmutableMap.of());
  StorageDescriptor sd=new StorageDescriptor();
  sd.setLocation(targetPath.toString());
  sd.setCols(columns.build());
  sd.setSerdeInfo(serdeInfo);
  sd.setInputFormat(hiveStorageFormat.getInputFormat());
  sd.setOutputFormat(hiveStorageFormat.getOutputFormat());
  sd.setParameters(ImmutableMap.of());
  Table table=new Table();
  table.setDbName(schemaName);
  table.setTableName(tableName);
  table.setOwner(tableOwner);
  table.setTableType(TableType.MANAGED_TABLE.toString());
  String tableComment="Created by Presto";
  if (sampled) {
    tableComment="Sampled table created by Presto. Only query this table from Hive if you understand how Presto implements sampling.";
  }
  table.setParameters(ImmutableMap.of("comment",tableComment));
  table.setPartitionKeys(ImmutableList.of());
  table.setSd(sd);
  PrivilegeGrantInfo allPrivileges=new PrivilegeGrantInfo("all",0,tableOwner,PrincipalType.USER,true);
  table.setPrivileges(new PrincipalPrivilegeSet(ImmutableMap.of(tableOwner,ImmutableList.of(allPrivileges)),ImmutableMap.of(),ImmutableMap.of()));
  metastore.createTable(table);
}
