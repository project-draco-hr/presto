{
  Type type=boundVariables.getTypeVariable("E");
  MethodHandle equalMethodHandle=functionRegistry.getScalarFunctionImplementation(internalOperator(EQUAL,BOOLEAN,ImmutableList.of(type,type))).getMethodHandle();
  MethodHandle arrayPositionMethodHandle;
  if (type.getJavaType() == boolean.class) {
    arrayPositionMethodHandle=METHOD_HANDLE_BOOLEAN;
  }
 else   if (type.getJavaType() == long.class) {
    arrayPositionMethodHandle=METHOD_HANDLE_LONG;
  }
 else   if (type.getJavaType() == double.class) {
    arrayPositionMethodHandle=METHOD_HANDLE_DOUBLE;
  }
 else   if (type.getJavaType() == Slice.class) {
    arrayPositionMethodHandle=METHOD_HANDLE_SLICE;
  }
 else {
    arrayPositionMethodHandle=METHOD_HANDLE_OBJECT;
  }
  return new ScalarFunctionImplementation(false,ImmutableList.of(false,false),arrayPositionMethodHandle.bindTo(type).bindTo(equalMethodHandle),isDeterministic());
}
