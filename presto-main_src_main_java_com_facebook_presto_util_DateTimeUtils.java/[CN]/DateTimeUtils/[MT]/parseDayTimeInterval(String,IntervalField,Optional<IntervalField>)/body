{
  IntervalField end=endField.orElse(startField);
  if (startField == IntervalField.DAY && end == IntervalField.SECOND) {
    return parsePeriodMillis(INTERVAL_DAY_SECOND_FORMATTER,value,startField,end);
  }
  if (startField == IntervalField.DAY && end == IntervalField.MINUTE) {
    return parsePeriodMillis(INTERVAL_DAY_MINUTE_FORMATTER,value,startField,end);
  }
  if (startField == IntervalField.DAY && end == IntervalField.HOUR) {
    return parsePeriodMillis(INTERVAL_DAY_HOUR_FORMATTER,value,startField,end);
  }
  if (startField == IntervalField.DAY && end == IntervalField.DAY) {
    return parsePeriodMillis(INTERVAL_DAY_FORMATTER,value,startField,end);
  }
  if (startField == IntervalField.HOUR && end == IntervalField.SECOND) {
    return parsePeriodMillis(INTERVAL_HOUR_SECOND_FORMATTER,value,startField,end);
  }
  if (startField == IntervalField.HOUR && end == IntervalField.MINUTE) {
    return parsePeriodMillis(INTERVAL_HOUR_MINUTE_FORMATTER,value,startField,end);
  }
  if (startField == IntervalField.HOUR && end == IntervalField.HOUR) {
    return parsePeriodMillis(INTERVAL_HOUR_FORMATTER,value,startField,end);
  }
  if (startField == IntervalField.MINUTE && end == IntervalField.SECOND) {
    return parsePeriodMillis(INTERVAL_MINUTE_SECOND_FORMATTER,value,startField,end);
  }
  if (startField == IntervalField.MINUTE && end == IntervalField.MINUTE) {
    return parsePeriodMillis(INTERVAL_MINUTE_FORMATTER,value,startField,end);
  }
  if (startField == IntervalField.SECOND && end == IntervalField.SECOND) {
    return parsePeriodMillis(INTERVAL_SECOND_FORMATTER,value,startField,end);
  }
  throw new IllegalArgumentException("Invalid day second interval qualifier: " + startField + " to "+ end);
}
