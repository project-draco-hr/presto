{
  Block block=new Block(null).append(instance.getByteCode(generationContext));
  if (instance.getType().isPrimitive()) {
    Class<?> sourceType=instance.getType().getPrimitiveType();
    castPrimitiveToPrimitive(block,sourceType,unwrapPrimitiveType(getType()));
    if (!getType().isPrimitive()) {
      Class<?> primitiveTargetType=unwrapPrimitiveType(getType());
      return block.invokeStatic(getType(),"valueOf",getType(),type(primitiveTargetType));
    }
    return block;
  }
 else   if (getType().isPrimitive()) {
    Class<?> targetType=getType().getPrimitiveType();
    return block.invokeVirtual(wrap(targetType),targetType.getSimpleName() + "Value",targetType);
  }
 else {
    block.checkCast(getType());
  }
  return block;
}
