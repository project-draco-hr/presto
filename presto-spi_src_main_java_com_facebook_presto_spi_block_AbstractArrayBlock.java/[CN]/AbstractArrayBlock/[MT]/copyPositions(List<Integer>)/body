{
  DynamicSliceOutput newOffsets=new DynamicSliceOutput(positions.size() * Integer.BYTES);
  DynamicSliceOutput newValueIsNull=new DynamicSliceOutput(positions.size());
  List<Integer> valuesPositions=new ArrayList<>();
  int countNewOffset=0;
  for (  int position : positions) {
    if (isNull(position)) {
      newValueIsNull.appendByte(1);
      newOffsets.appendInt(countNewOffset);
    }
 else {
      newValueIsNull.appendByte(0);
      int positionStartOffset=getOffset(position);
      int positionEndOffset=getOffset(position + 1);
      countNewOffset+=positionEndOffset - positionStartOffset;
      newOffsets.appendInt(countNewOffset);
      for (int j=positionStartOffset; j < positionEndOffset; j++) {
        valuesPositions.add(j);
      }
    }
  }
  Block newValues=getValues().copyPositions(valuesPositions);
  return new ArrayBlock(newValues,newOffsets.slice(),0,newValueIsNull.slice());
}
