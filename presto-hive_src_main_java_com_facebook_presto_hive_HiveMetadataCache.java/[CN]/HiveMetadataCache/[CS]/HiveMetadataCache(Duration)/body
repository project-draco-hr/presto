{
  long expiresAfterWriteMillis=(long)expiresAfterWrite.toMillis();
  this.databaseNamesCache=CacheBuilder.newBuilder().expireAfterWrite(expiresAfterWriteMillis,MILLISECONDS).recordStats().build();
  metadataStats.put("dbNames",new HiveMetadataCacheStats(databaseNamesCache));
  this.tableNamesCache=CacheBuilder.newBuilder().expireAfterWrite(expiresAfterWriteMillis,MILLISECONDS).recordStats().build();
  metadataStats.put("tableNames",new HiveMetadataCacheStats(tableNamesCache));
  this.tableSchemaCache=CacheBuilder.newBuilder().expireAfterWrite(expiresAfterWriteMillis,MILLISECONDS).recordStats().build();
  metadataStats.put("schemaCache",new HiveMetadataCacheStats(tableSchemaCache));
  this.partitionKeysCache=CacheBuilder.newBuilder().expireAfterWrite(expiresAfterWriteMillis,MILLISECONDS).recordStats().build();
  metadataStats.put("partitionKeys",new HiveMetadataCacheStats(partitionKeysCache));
  this.partitionsCache=CacheBuilder.newBuilder().expireAfterWrite(expiresAfterWriteMillis,MILLISECONDS).recordStats().build();
  metadataStats.put("partitions",new HiveMetadataCacheStats(partitionKeysCache));
  this.partitionNamesCache=CacheBuilder.newBuilder().expireAfterWrite(expiresAfterWriteMillis,MILLISECONDS).recordStats().build();
  metadataStats.put("partitionNames",new HiveMetadataCacheStats(partitionKeysCache));
}
