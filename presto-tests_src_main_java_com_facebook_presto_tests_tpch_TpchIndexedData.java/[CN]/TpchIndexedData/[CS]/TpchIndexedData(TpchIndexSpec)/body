{
  checkNotNull(tpchIndexSpec,"tpchIndexSpec is null");
  ImmutableMap.Builder<Set<TpchScaledColumn>,IndexedTable> indexedTablesBuilder=ImmutableMap.builder();
  Set<TpchScaledTable> tables=tpchIndexSpec.listIndexedTables();
  for (  TpchScaledTable table : tables) {
    for (    Set<String> columnNames : tpchIndexSpec.getColumnIndexes(table)) {
      List<String> keyColumnNames=ImmutableList.copyOf(columnNames);
      Set<TpchScaledColumn> keyColumns=FluentIterable.from(keyColumnNames).transform(TpchScaledColumn.columnFunction(table)).toSet();
      TpchTable<?> tpchTable=TpchTable.getTable(table.getTableName());
      List<String> outputColumnNames=Lists.transform(tpchTable.getColumns(),new Function<TpchColumn<? extends TpchEntity>,String>(){
        @Override public String apply(        TpchColumn<? extends TpchEntity> tpchColumn){
          return tpchColumn.getColumnName();
        }
      }
);
      IndexedTable indexedTable=indexTable(tpchTable,table.getScaleFactor(),outputColumnNames,keyColumnNames);
      indexedTablesBuilder.put(keyColumns,indexedTable);
    }
  }
  indexedTables=indexedTablesBuilder.build();
}
