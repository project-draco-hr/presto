{
  super(id);
  this.source=source;
  this.aggregations=ImmutableMap.copyOf(requireNonNull(aggregations,"aggregations is null"));
  this.functions=ImmutableMap.copyOf(requireNonNull(functions,"functions is null"));
  this.masks=ImmutableMap.copyOf(requireNonNull(masks,"masks is null"));
  for (  Symbol mask : masks.keySet()) {
    checkArgument(aggregations.containsKey(mask),"mask does not match any aggregations");
  }
  this.groupingSets=ImmutableList.copyOf(requireNonNull(groupingSets,"groupingSets is null"));
  this.step=step;
  this.sampleWeight=requireNonNull(sampleWeight,"sampleWeight is null");
  checkArgument(confidence >= 0 && confidence <= 1,"confidence must be in [0, 1]");
  this.confidence=confidence;
  this.hashSymbol=hashSymbol;
  this.groupIdSymbol=requireNonNull(groupIdSymbol);
}
