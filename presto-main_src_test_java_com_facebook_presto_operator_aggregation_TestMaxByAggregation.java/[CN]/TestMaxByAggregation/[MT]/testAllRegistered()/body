{
  Set<Type> orderableTypes=FluentIterable.from(metadata.getTypeManager().getTypes()).filter(new Predicate<Type>(){
    @Override public boolean apply(    Type input){
      return input.isOrderable();
    }
  }
).toSet();
  List<Type> valueTypes=FluentIterable.from(metadata.getTypeManager().getTypes()).filter(and(not(instanceOf(ArrayType.class)),not(instanceOf(MapType.class)))).toList();
  for (  Type keyType : orderableTypes) {
    for (    Type valueType : valueTypes) {
      assertNotNull(metadata.getExactFunction(new Signature("max_by",valueType.getName(),valueType.getName(),keyType.getName())));
    }
  }
}
