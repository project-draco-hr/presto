{
  TranslationMap outputTranslations=new TranslationMap(subPlan.getRelationPlan(),analysis);
  ImmutableMap.Builder<Symbol,Expression> projections=ImmutableMap.builder();
  for (  FieldOrExpression fieldOrExpression : expressions) {
    Symbol symbol;
    if (fieldOrExpression.isFieldReference()) {
      Field field=subPlan.getRelationPlan().getDescriptor().getFieldByIndex(fieldOrExpression.getFieldIndex());
      symbol=symbolAllocator.newSymbol(field);
    }
 else {
      Expression expression=fieldOrExpression.getExpression();
      symbol=symbolAllocator.newSymbol(expression,analysis.getTypeWithCoercions(expression));
    }
    projections.put(symbol,subPlan.rewrite(fieldOrExpression));
    outputTranslations.put(fieldOrExpression,symbol);
  }
  if (subPlan.getSampleWeight().isPresent()) {
    Symbol symbol=subPlan.getSampleWeight().get();
    projections.put(symbol,new QualifiedNameReference(symbol.toQualifiedName()));
  }
  return new PlanBuilder(outputTranslations,new ProjectNode(idAllocator.getNextId(),subPlan.getRoot(),projections.build()),subPlan.getSampleWeight());
}
