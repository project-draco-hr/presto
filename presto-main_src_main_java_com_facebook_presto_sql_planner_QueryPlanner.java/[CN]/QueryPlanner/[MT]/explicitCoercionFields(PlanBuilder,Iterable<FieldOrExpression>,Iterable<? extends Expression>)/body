{
  TranslationMap translations=new TranslationMap(subPlan.getRelationPlan(),analysis);
  ImmutableMap.Builder<Symbol,Expression> projections=ImmutableMap.builder();
  projections.putAll(coerce(uncoerced,subPlan,translations));
  for (  FieldOrExpression fieldOrExpression : alreadyCoerced) {
    Symbol symbol;
    if (fieldOrExpression.isFieldReference()) {
      Field field=subPlan.getRelationPlan().getDescriptor().getFieldByIndex(fieldOrExpression.getFieldIndex());
      symbol=symbolAllocator.newSymbol(field);
    }
 else {
      symbol=symbolAllocator.newSymbol(fieldOrExpression.getExpression(),analysis.getType(fieldOrExpression.getExpression()));
    }
    Expression rewritten=subPlan.rewrite(fieldOrExpression);
    projections.put(symbol,rewritten);
    translations.put(fieldOrExpression,symbol);
  }
  return new PlanBuilder(translations,new ProjectNode(idAllocator.getNextId(),subPlan.getRoot(),projections.build()));
}
