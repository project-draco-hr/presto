{
  TranslationMap outputTranslations=new TranslationMap(subPlan.getRelationPlan(),analysis);
  ImmutableMap.Builder<Symbol,Expression> projections=ImmutableMap.builder();
  for (  Expression expression : expressions) {
    Expression rewritten=ExpressionTreeRewriter.rewriteWith(new ParameterRewriter(analysis.getParameters(),analysis),expression);
    Symbol symbol=symbolAllocator.newSymbol(rewritten,analysis.getTypeWithCoercions(expression));
    projections.put(symbol,subPlan.rewrite(rewritten));
    outputTranslations.addIntermediateMapping(expression,rewritten);
    outputTranslations.put(rewritten,symbol);
  }
  if (subPlan.getSampleWeight().isPresent()) {
    Symbol symbol=subPlan.getSampleWeight().get();
    projections.put(symbol,symbol.toSymbolReference());
  }
  return new PlanBuilder(outputTranslations,new ProjectNode(idAllocator.getNextId(),subPlan.getRoot(),projections.build()),subPlan.getSampleWeight(),analysis.getParameters());
}
