{
  PlanBuilder builder=planFrom(node);
  builder=filter(builder,analysis.getWhere(node),node);
  builder=aggregate(builder,node);
  builder=filter(builder,analysis.getHaving(node),node);
  builder=window(builder,node);
  List<Expression> orderBy=analysis.getOrderByExpressions(node);
  builder=handleSubqueries(builder,node,orderBy);
  List<Expression> outputs=analysis.getOutputExpressions(node);
  builder=handleSubqueries(builder,node,outputs);
  builder=project(builder,Iterables.concat(orderBy,outputs));
  builder=distinct(builder,node,outputs,orderBy);
  builder=sort(builder,node);
  builder=project(builder,analysis.getOutputExpressions(node));
  builder=limit(builder,node);
  return new RelationPlan(builder.getRoot(),analysis.getScope(node),computeOutputs(builder,analysis.getOutputExpressions(node)),builder.getSampleWeight());
}
