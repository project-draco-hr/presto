{
  PlanNode source=node.getSource();
  source.accept(this,context);
  verifyUniqueId(node);
  Set<Symbol> inputs=ImmutableSet.copyOf(source.getOutputSymbols());
  checkDependencies(inputs,node.getPartitionBy(),"Invalid node. Partition by symbols (%s) not in source plan output (%s)",node.getPartitionBy(),node.getSource().getOutputSymbols());
  checkDependencies(inputs,node.getOrderBy(),"Invalid node. Order by symbols (%s) not in source plan output (%s)",node.getOrderBy(),node.getSource().getOutputSymbols());
  for (  FunctionCall call : node.getWindowFunctions().values()) {
    Set<Symbol> dependencies=DependencyExtractor.extractUnique(call);
    checkDependencies(inputs,dependencies,"Invalid node. Window function dependencies (%s) not in source plan output (%s)",dependencies,node.getSource().getOutputSymbols());
  }
  return null;
}
