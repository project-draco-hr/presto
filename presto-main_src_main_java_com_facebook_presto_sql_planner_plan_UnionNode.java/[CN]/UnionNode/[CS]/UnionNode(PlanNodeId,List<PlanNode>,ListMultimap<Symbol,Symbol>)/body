{
  super(id);
  checkNotNull(sources,"sources is null");
  checkArgument(!sources.isEmpty(),"Must have at least one source");
  checkNotNull(symbolMapping,"symbolMapping is null");
  this.sources=ImmutableList.copyOf(sources);
  this.symbolMapping=ImmutableListMultimap.copyOf(symbolMapping);
  for (  Collection<Symbol> symbols : this.symbolMapping.asMap().values()) {
    checkArgument(symbols.size() == this.sources.size(),"Every source needs to map its symbols to an output UNION symbol");
  }
  for (int i=0; i < sources.size(); i++) {
    for (    Collection<Symbol> symbols : this.symbolMapping.asMap().values()) {
      checkArgument(sources.get(i).getOutputSymbols().contains(Iterables.get(symbols,i)),"Source does not provide required symbols");
    }
  }
}
