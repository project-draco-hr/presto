{
  PlanNode source=context.rewrite(node.getSource());
  if (source instanceof ProjectNode) {
    ProjectNode sourceProject=(ProjectNode)source;
    if (isDeterministic(sourceProject) && !containsTry(node)) {
      ImmutableMap.Builder<Symbol,Expression> projections=ImmutableMap.builder();
      for (      Map.Entry<Symbol,Expression> projection : node.getAssignments().entrySet()) {
        Expression inlined=ExpressionTreeRewriter.rewriteWith(new ExpressionSymbolInliner(sourceProject.getAssignments()),projection.getValue());
        projections.put(projection.getKey(),inlined);
      }
      return new ProjectNode(node.getId(),sourceProject.getSource(),projections.build());
    }
  }
  return replaceChildren(node,ImmutableList.of(source));
}
