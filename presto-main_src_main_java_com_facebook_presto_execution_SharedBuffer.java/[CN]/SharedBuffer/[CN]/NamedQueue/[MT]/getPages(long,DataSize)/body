{
  checkState(Thread.holdsLock(SharedBuffer.this),"Thread must hold a lock on the %s",SharedBuffer.class.getSimpleName());
  checkArgument(maxSize.toBytes() > 0,"maxSize must be at least 1 byte");
  acknowledge(startingSequenceId);
  if (finished) {
    return emptyResults(sequenceId,true);
  }
  int listOffset=Ints.checkedCast(sequenceId - masterSequenceId);
  if (listOffset >= masterQueue.size()) {
    return emptyResults(sequenceId,false);
  }
  long maxBytes=maxSize.toBytes();
  List<Page> pages=new ArrayList<>();
  long bytes=0;
  while (listOffset < masterQueue.size()) {
    Page page=masterQueue.get(listOffset++);
    bytes+=page.getDataSize().toBytes();
    if (!pages.isEmpty() && bytes > maxBytes) {
      break;
    }
    pages.add(page);
  }
  return new BufferResult(startingSequenceId,startingSequenceId + pages.size(),false,ImmutableList.copyOf(pages),partitionFunction);
}
