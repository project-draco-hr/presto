{
  QualifiedTableName dstTableName=MetadataUtil.createQualifiedTableName(session,statement.getName());
  TableMetadata dstTableMetadata=metadata.getTable(dstTableName);
  checkState(dstTableMetadata == null,"Destination table %s already exists!",dstTableName);
  Field resultField=Field.getField("imported_rows",context.getSymbolAllocator().newSymbol("imported_rows",Type.LONG),Type.LONG);
  AnalyzedExpression resultFieldExpression=new AnalyzedExpression(resultField.getType(),QueryUtil.nameReference(resultField.getAttribute().get()));
  AnalyzedOutput output=new AnalyzedOutput(new TupleDescriptor(ImmutableList.<Field>of(resultField)),ImmutableMap.of(resultField.getSymbol(),resultFieldExpression));
  AnalysisResult analysis=new Analyzer(context.getSession(),metadata).analyze(statement.getTableDefinition(),new AnalysisContext(context.getSession(),context.getSymbolAllocator()));
  context.addDestination(dstTableName,analysis);
  return AnalysisResult.newInstance(context,false,output,null,ImmutableList.<AnalyzedExpression>of(),ImmutableSet.<AnalyzedFunction>of(),ImmutableSet.<AnalyzedFunction>of(),null,ImmutableList.<AnalyzedOrdering>of(),null);
}
