{
  super(benchmarkName,warmupIterations,measuredIterations);
  Statement statement=SqlParser.createStatement(query);
  metadata=TpchSchema.createMetadata();
  session=new Session(null,TpchSchema.CATALOG_NAME,TpchSchema.SCHEMA_NAME);
  analysis=new Analyzer(session,metadata,new MockStorageManager(),new MockPeriodicImportManager()).analyze(statement);
  PlanNodeIdAllocator idAllocator=new PlanNodeIdAllocator();
  PlanOptimizersFactory planOptimizersFactory=new PlanOptimizersFactory(metadata);
  LogicalPlanner planner=new LogicalPlanner(session,metadata,planOptimizersFactory.get(),idAllocator);
  PlanNode plan=planner.plan(analysis);
  fragment=new DistributedLogicalPlanner(metadata,idAllocator).createSubplans(plan,analysis.getSymbolAllocator(),true).getFragment();
  new PlanPrinter().print(fragment.getRoot(),analysis.getTypes());
}
