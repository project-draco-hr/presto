{
  long newCapacityLong=hashCapacity * 2L;
  if (newCapacityLong > Integer.MAX_VALUE) {
    throw new PrestoException(GENERIC_INSUFFICIENT_RESOURCES,"Size of hash table cannot exceed 1 billion entries");
  }
  int newCapacity=(int)newCapacityLong;
  int newMask=newCapacity - 1;
  LongBigArray newValues=new LongBigArray();
  newValues.ensureCapacity(newCapacity);
  IntBigArray newGroupIds=new IntBigArray(-1);
  newGroupIds.ensureCapacity(newCapacity);
  for (int groupId=0; groupId < nextGroupId; groupId++) {
    if (groupId == nullGroupId) {
      continue;
    }
    long value=valuesByGroupId.get(groupId);
    long hashPosition=getHashPosition(value,newMask);
    while (newGroupIds.get(hashPosition) != -1) {
      hashPosition=(hashPosition + 1) & newMask;
    }
    newValues.set(hashPosition,value);
    newGroupIds.set(hashPosition,groupId);
  }
  mask=newMask;
  hashCapacity=newCapacity;
  maxFill=calculateMaxFill(hashCapacity);
  values=newValues;
  groupIds=newGroupIds;
  this.valuesByGroupId.ensureCapacity(maxFill);
}
