{
switch (type) {
case "boolean":
    builder.setColumnType(Types.BOOLEAN);
  builder.setColumnDisplaySize(5);
break;
case "bigint":
builder.setColumnType(Types.BIGINT);
builder.setSigned(true);
builder.setPrecision(19);
builder.setScale(0);
builder.setColumnDisplaySize(20);
break;
case "double":
builder.setColumnType(Types.DOUBLE);
builder.setSigned(true);
builder.setPrecision(17);
builder.setScale(0);
builder.setColumnDisplaySize(24);
break;
case "varchar":
builder.setColumnType(Types.LONGNVARCHAR);
builder.setSigned(true);
builder.setPrecision(VARCHAR_MAX);
builder.setScale(0);
builder.setColumnDisplaySize(VARCHAR_MAX);
break;
case "time":
builder.setColumnType(Types.TIME);
builder.setSigned(true);
builder.setPrecision(3);
builder.setScale(0);
builder.setColumnDisplaySize(TIME_MAX);
break;
case "time with time zone":
builder.setColumnType(Types.TIME);
builder.setSigned(true);
builder.setPrecision(3);
builder.setScale(0);
builder.setColumnDisplaySize(TIME_WITH_TIME_ZONE_MAX);
break;
case "timestamp":
builder.setColumnType(Types.TIMESTAMP);
builder.setSigned(true);
builder.setPrecision(3);
builder.setScale(0);
builder.setColumnDisplaySize(TIMESTAMP_MAX);
break;
case "timestamp with time zone":
builder.setColumnType(Types.TIMESTAMP);
builder.setSigned(true);
builder.setPrecision(3);
builder.setScale(0);
builder.setColumnDisplaySize(TIMESTAMP_WITH_TIME_ZONE_MAX);
break;
case "date":
builder.setColumnType(Types.DATE);
builder.setSigned(true);
builder.setScale(0);
builder.setColumnDisplaySize(DATE_MAX);
break;
case "interval year to month":
builder.setColumnType(Types.JAVA_OBJECT);
builder.setColumnDisplaySize(TIMESTAMP_MAX);
break;
case "interval day to second":
builder.setColumnType(Types.JAVA_OBJECT);
builder.setColumnDisplaySize(TIMESTAMP_MAX);
break;
default :
throw new AssertionError("unimplemented type: " + type);
}
}
