{
  embeddedKafka=EmbeddedKafka.createEmbeddedKafka();
  embeddedKafka.start();
  embeddedKafka.createTopics(TPCH_TOPIC);
  JsonCodec<KafkaTopicDescription> topicDescriptionJsonCodec=new CodecSupplier<>(KafkaTopicDescription.class,queryRunner().getCoordinator().getMetadata()).get();
  Map<SchemaTableName,KafkaTopicDescription> topicDescriptions=ImmutableMap.<SchemaTableName,KafkaTopicDescription>builder().put(loadTpchTopicDescription(topicDescriptionJsonCodec,TPCH_TOPIC,new SchemaTableName(TPCH_NAME,"orders"))).build();
  TestUtils.installKafkaPlugin(embeddedKafka,queryRunner,topicDescriptions);
  log.info("Loading data...");
  long startTime=System.nanoTime();
  loadTpchTopic(embeddedKafka,queryRunner().getClient(),TPCH_TOPIC,new QualifiedTableName(TPCH_NAME,TpchMetadata.TINY_SCHEMA_NAME,"orders"));
  log.info("Loading complete in %s",nanosSince(startTime).toString(SECONDS));
}
