{
  Session session=stateMachine.getSession();
  QualifiedName propertyName=statement.getName();
  if (propertyName.getParts().size() > 2) {
    throw new SemanticException(INVALID_SESSION_PROPERTY,statement,"Invalid session property '%s'",propertyName);
  }
  PropertyMetadata<?> propertyMetadata=metadata.getSessionPropertyManager().getSessionPropertyMetadata(propertyName.toString());
  if (propertyName.getParts().size() == 1) {
    accessControl.checkCanSetSystemSessionProperty(session.getIdentity(),propertyName.getParts().get(0));
  }
 else   if (propertyName.getParts().size() == 2) {
    accessControl.checkCanSetCatalogSessionProperty(session.getIdentity(),propertyName.getParts().get(0),propertyName.getParts().get(1));
  }
  Type type=propertyMetadata.getSqlType();
  Object objectValue;
  try {
    objectValue=evaluatePropertyValue(statement.getValue(),type,session,metadata);
  }
 catch (  SemanticException e) {
    throw new PrestoException(StandardErrorCode.INVALID_SESSION_PROPERTY,format("Unable to set session property '%s' to '%s': %s",propertyName,statement.getValue(),e.getMessage()));
  }
  String value=serializeSessionProperty(type,objectValue);
  metadata.getSessionPropertyManager().decodeProperty(propertyName.toString(),value,propertyMetadata.getJavaType());
  stateMachine.addSetSessionProperties(propertyName.toString(),value);
  return completedFuture(null);
}
