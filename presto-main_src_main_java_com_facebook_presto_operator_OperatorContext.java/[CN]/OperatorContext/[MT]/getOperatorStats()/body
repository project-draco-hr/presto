{
  Supplier<?> infoSupplier=this.infoSupplier.get();
  Object info=null;
  if (infoSupplier != null) {
    info=infoSupplier.get();
  }
  return new OperatorStats(operatorId,planNodeId,operatorType,addInputCalls.get(),new Duration(addInputWallNanos.get(),NANOSECONDS).convertToMostSuccinctTimeUnit(),new Duration(addInputCpuNanos.get(),NANOSECONDS).convertToMostSuccinctTimeUnit(),new Duration(addInputUserNanos.get(),NANOSECONDS).convertToMostSuccinctTimeUnit(),succinctBytes(inputDataSize.getTotalCount()),inputPositions.getTotalCount(),getOutputCalls.get(),new Duration(getOutputWallNanos.get(),NANOSECONDS).convertToMostSuccinctTimeUnit(),new Duration(getOutputCpuNanos.get(),NANOSECONDS).convertToMostSuccinctTimeUnit(),new Duration(getOutputUserNanos.get(),NANOSECONDS).convertToMostSuccinctTimeUnit(),succinctBytes(outputDataSize.getTotalCount()),outputPositions.getTotalCount(),new Duration(blockedWallNanos.get(),NANOSECONDS).convertToMostSuccinctTimeUnit(),finishCalls.get(),new Duration(finishWallNanos.get(),NANOSECONDS).convertToMostSuccinctTimeUnit(),new Duration(finishCpuNanos.get(),NANOSECONDS).convertToMostSuccinctTimeUnit(),new Duration(finishUserNanos.get(),NANOSECONDS).convertToMostSuccinctTimeUnit(),succinctBytes(memoryReservation.get()),succinctBytes(systemMemoryContext.getReservedBytes()),memoryFuture.get().isDone() ? Optional.empty() : Optional.of(WAITING_FOR_MEMORY),info);
}
