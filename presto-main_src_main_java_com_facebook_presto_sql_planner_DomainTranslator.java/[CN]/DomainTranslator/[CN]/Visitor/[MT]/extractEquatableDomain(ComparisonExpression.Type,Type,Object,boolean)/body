{
  checkArgument(value != null);
switch (comparisonType) {
case EQUAL:
    return Domain.create(complementIfNecessary(ValueSet.of(type,value),complement),false);
case NOT_EQUAL:
  return Domain.create(complementIfNecessary(ValueSet.of(type,value).complement(),complement),false);
case IS_DISTINCT_FROM:
return complementIfNecessary(Domain.create(ValueSet.of(type,value).complement(),true),complement);
default :
throw new AssertionError("Unhandled type: " + comparisonType);
}
}
