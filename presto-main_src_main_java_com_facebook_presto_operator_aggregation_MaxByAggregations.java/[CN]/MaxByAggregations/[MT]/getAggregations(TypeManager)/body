{
  ImmutableList.Builder<InternalAggregationFunction> builder=ImmutableList.builder();
  Set<Type> orderableTypes=FluentIterable.from(typeManager.getTypes()).filter(new Predicate<Type>(){
    @Override public boolean apply(    Type input){
      return input.isOrderable();
    }
  }
).toSet();
  for (  Type keyType : orderableTypes) {
    for (    Type valueType : typeManager.getTypes()) {
      builder.add(generateAggregation(valueType,keyType));
    }
  }
  return builder.build();
}
