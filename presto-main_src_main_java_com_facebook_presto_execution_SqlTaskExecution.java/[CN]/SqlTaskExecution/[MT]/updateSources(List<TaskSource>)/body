{
  Map<PlanNodeId,TaskSource> updatedUnpartitionedSources=new HashMap<>();
  long newMaxAcknowledgedSplit=maxAcknowledgedSplit;
  for (  TaskSource source : sources) {
    PlanNodeId sourceId=source.getPlanNodeId();
    if (sourceId.equals(partitionedSourceId)) {
      ImmutableList.Builder<DriverSplitRunner> runners=ImmutableList.builder();
      for (      ScheduledSplit scheduledSplit : source.getSplits()) {
        if (scheduledSplit.getSequenceId() > maxAcknowledgedSplit) {
          runners.add(partitionedDriverFactory.createDriverRunner(scheduledSplit,true));
          newMaxAcknowledgedSplit=max(scheduledSplit.getSequenceId(),newMaxAcknowledgedSplit);
        }
      }
      enqueueDrivers(false,runners.build());
      if (source.isNoMoreSplits()) {
        partitionedDriverFactory.setNoMoreSplits();
      }
    }
 else {
      for (      ScheduledSplit scheduledSplit : source.getSplits()) {
        newMaxAcknowledgedSplit=max(scheduledSplit.getSequenceId(),newMaxAcknowledgedSplit);
      }
      TaskSource newSource;
      TaskSource currentSource=unpartitionedSources.get(sourceId);
      if (currentSource == null) {
        newSource=source;
      }
 else {
        newSource=currentSource.update(source);
      }
      if (newSource != currentSource) {
        unpartitionedSources.put(sourceId,newSource);
        updatedUnpartitionedSources.put(sourceId,newSource);
      }
    }
  }
  maxAcknowledgedSplit=newMaxAcknowledgedSplit;
  return updatedUnpartitionedSources;
}
