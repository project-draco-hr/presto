{
  DriverContext driverContext=taskContext.addPipelineContext(true,true).addDriverContext();
  OperatorContext operatorContext=driverContext.addOperatorContext(0,StaticOperator.class.getSimpleName());
  Operator buildOperator=new StaticOperator(operatorContext,rowPagesBuilder(SINGLE_LONG).row(0).row(1).row((Object)null).row(3).build());
  SetBuilderOperatorFactory setBuilderOperatorFactory=new SetBuilderOperatorFactory(1,buildOperator.getTupleInfos(),0,10);
  Operator setBuilderOperator=setBuilderOperatorFactory.createOperator(driverContext);
  Driver driver=new Driver(driverContext,buildOperator,setBuilderOperator);
  while (!driver.isFinished()) {
    driver.process();
  }
  List<Page> probeInput=rowPagesBuilder(SINGLE_LONG).row(0).row((Object)null).row(1).row(2).build();
  HashSemiJoinOperatorFactory joinOperatorFactory=new HashSemiJoinOperatorFactory(2,setBuilderOperatorFactory.getSetProvider(),ImmutableList.of(SINGLE_LONG),0);
  Operator joinOperator=joinOperatorFactory.createOperator(driverContext);
  MaterializedResult expected=resultBuilder(FIXED_INT_64,BOOLEAN).row(0,true).row(null,null).row(1,true).row(2,null).build();
  OperatorAssertion.assertOperatorEquals(joinOperator,probeInput,expected);
}
