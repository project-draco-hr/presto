{
  TupleInfo tupleInfo=tuple.getTupleInfo();
  assertEquals(cursor.getTupleInfo(),tupleInfo);
  assertEquals(cursor.getTuple(),tuple);
  assertEquals(cursor.getPosition(),position);
  assertTrue(cursor.currentTupleEquals(tuple));
  assertEquals(cursor.isNull(0),tuple.isNull(0));
switch (tupleInfo.getType()) {
case BOOLEAN:
    assertEquals(cursor.getBoolean(0),tuple.getBoolean(0));
  try {
    cursor.getSlice(0);
    fail("Expected IllegalStateException or UnsupportedOperationException");
  }
 catch (  IllegalStateException|UnsupportedOperationException expected) {
  }
try {
  cursor.getSlice(0);
  fail("Expected IllegalStateException or UnsupportedOperationException");
}
 catch (IllegalStateException|UnsupportedOperationException expected) {
}
break;
case FIXED_INT_64:
assertEquals(cursor.getLong(0),tuple.getLong(0));
try {
cursor.getDouble(0);
fail("Expected IllegalStateException or UnsupportedOperationException");
}
 catch (IllegalStateException|UnsupportedOperationException expected) {
}
try {
cursor.getSlice(0);
fail("Expected IllegalStateException or UnsupportedOperationException");
}
 catch (IllegalStateException|UnsupportedOperationException expected) {
}
break;
case VARIABLE_BINARY:
assertEquals(cursor.getSlice(0),tuple.getSlice(0));
try {
cursor.getDouble(0);
fail("Expected IllegalStateException or UnsupportedOperationException");
}
 catch (IllegalStateException|UnsupportedOperationException expected) {
}
try {
cursor.getLong(0);
fail("Expected IllegalStateException or UnsupportedOperationException");
}
 catch (IllegalStateException|UnsupportedOperationException expected) {
}
break;
case DOUBLE:
assertEquals(cursor.getDouble(0),tuple.getDouble(0));
try {
cursor.getSlice(0);
fail("Expected IllegalStateException or UnsupportedOperationException");
}
 catch (IllegalStateException|UnsupportedOperationException expected) {
}
try {
cursor.getSlice(0);
fail("Expected IllegalStateException or UnsupportedOperationException");
}
 catch (IllegalStateException|UnsupportedOperationException expected) {
}
break;
}
}
