{
  checkArgument(arity == 1,"Expected arity to be 1");
  Type fromType=boundVariables.getTypeVariable("F");
  Type toType=boundVariables.getTypeVariable("T");
  if (fromType.getTypeParameters().size() != toType.getTypeParameters().size()) {
    throw new PrestoException(StandardErrorCode.INVALID_FUNCTION_ARGUMENT,"the size of fromType and toType must match");
  }
  Class<?> castOperatorClass=generateRowCast(fromType,toType,functionRegistry);
  MethodHandle methodHandle=methodHandle(castOperatorClass,"castRow",ConnectorSession.class,Block.class);
  return new ScalarFunctionImplementation(false,ImmutableList.of(false),methodHandle,isDeterministic());
}
