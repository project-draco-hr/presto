{
  ImmutableMap.Builder<Symbol,Signature> signatures=ImmutableMap.builder();
  ImmutableMap.Builder<Symbol,FunctionCall> aggregations=ImmutableMap.builder();
  for (int i=0; i < markers.size(); i++) {
    Symbol output=aggregationOutputs.get(i);
    aggregations.put(output,new FunctionCall(QualifiedName.of("count"),ImmutableList.of(markers.get(i).toSymbolReference())));
    signatures.put(output,COUNT_AGGREGATION);
  }
  return new AggregationNode(idAllocator.getNextId(),sourceNode,aggregations.build(),signatures.build(),ImmutableMap.of(),ImmutableList.of(originalColumns),Step.SINGLE,Optional.empty(),1.0,Optional.empty(),Optional.empty());
}
