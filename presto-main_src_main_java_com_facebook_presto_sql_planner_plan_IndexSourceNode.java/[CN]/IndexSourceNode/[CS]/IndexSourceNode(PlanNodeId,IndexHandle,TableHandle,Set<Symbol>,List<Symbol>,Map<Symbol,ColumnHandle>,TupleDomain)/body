{
  super(id);
  this.indexHandle=checkNotNull(indexHandle,"indexHandle is null");
  this.tableHandle=checkNotNull(tableHandle,"tableHandle is null");
  this.lookupSymbols=ImmutableSet.copyOf(checkNotNull(lookupSymbols,"lookupSymbols is null"));
  this.outputSymbols=ImmutableList.copyOf(checkNotNull(outputSymbols,"outputSymbols is null"));
  this.assignments=ImmutableMap.copyOf(checkNotNull(assignments,"assignments is null"));
  this.effectiveTupleDomain=checkNotNull(effectiveTupleDomain,"effectiveTupleDomain is null");
  checkArgument(!lookupSymbols.isEmpty(),"lookupSymbols is empty");
  checkArgument(!outputSymbols.isEmpty(),"outputSymbols is empty");
  checkArgument(assignments.keySet().containsAll(lookupSymbols),"Assignments do not include all lookup symbols");
  checkArgument(outputSymbols.containsAll(lookupSymbols),"Lookup symbols need to be part of the output symbols");
}
