{
  requireNonNull(type,"type is null");
  if (type == boolean.class) {
    return constantInt(0).cast(boolean.class);
  }
  if (type == byte.class) {
    return constantInt(0).cast(byte.class);
  }
  if (type == int.class) {
    return constantInt(0);
  }
  if (type == short.class) {
    return constantInt(0).cast(short.class);
  }
  if (type == long.class) {
    return constantLong(0L);
  }
  if (type == float.class) {
    return constantFloat(0.0f);
  }
  if (type == double.class) {
    return constantDouble(0.0d);
  }
  checkArgument(!type.isPrimitive(),"Unsupported type %s",type);
  return constantNull(type);
}
