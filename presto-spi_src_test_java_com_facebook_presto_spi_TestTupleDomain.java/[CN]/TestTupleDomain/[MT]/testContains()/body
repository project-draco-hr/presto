{
  Assert.assertTrue(contains(ImmutableMap.<ColumnHandle,Domain>of(),ImmutableMap.<ColumnHandle,Domain>of()));
  Assert.assertTrue(contains(ImmutableMap.<ColumnHandle,Domain>of(),ImmutableMap.of(A,Domain.none(Long.class))));
  Assert.assertTrue(contains(ImmutableMap.<ColumnHandle,Domain>of(),ImmutableMap.of(A,Domain.all(Long.class))));
  Assert.assertTrue(contains(ImmutableMap.<ColumnHandle,Domain>of(),ImmutableMap.of(A,Domain.singleValue(0.0))));
  Assert.assertFalse(contains(ImmutableMap.of(A,Domain.none(Long.class)),ImmutableMap.<ColumnHandle,Domain>of()));
  Assert.assertTrue(contains(ImmutableMap.of(A,Domain.none(Long.class)),ImmutableMap.of(A,Domain.none(Long.class))));
  Assert.assertFalse(contains(ImmutableMap.of(A,Domain.none(Long.class)),ImmutableMap.of(A,Domain.all(Long.class))));
  Assert.assertFalse(contains(ImmutableMap.of(A,Domain.none(Long.class)),ImmutableMap.of(A,Domain.singleValue(0L))));
  Assert.assertTrue(contains(ImmutableMap.of(A,Domain.all(Long.class)),ImmutableMap.<ColumnHandle,Domain>of()));
  Assert.assertTrue(contains(ImmutableMap.of(A,Domain.all(Long.class)),ImmutableMap.of(A,Domain.none(Long.class))));
  Assert.assertTrue(contains(ImmutableMap.of(A,Domain.all(Long.class)),ImmutableMap.of(A,Domain.all(Long.class))));
  Assert.assertTrue(contains(ImmutableMap.of(A,Domain.all(Long.class)),ImmutableMap.of(A,Domain.singleValue(0L))));
  Assert.assertFalse(contains(ImmutableMap.of(A,Domain.singleValue(0L)),ImmutableMap.<ColumnHandle,Domain>of()));
  Assert.assertTrue(contains(ImmutableMap.of(A,Domain.singleValue(0L)),ImmutableMap.of(A,Domain.none(Long.class))));
  Assert.assertFalse(contains(ImmutableMap.of(A,Domain.singleValue(0L)),ImmutableMap.of(A,Domain.all(Long.class))));
  Assert.assertTrue(contains(ImmutableMap.of(A,Domain.singleValue(0L)),ImmutableMap.of(A,Domain.singleValue(0L))));
  Assert.assertFalse(contains(ImmutableMap.of(A,Domain.singleValue(0L)),ImmutableMap.of(B,Domain.singleValue("value"))));
  Assert.assertFalse(contains(ImmutableMap.of(A,Domain.singleValue(0L),B,Domain.singleValue("value")),ImmutableMap.of(B,Domain.singleValue("value"))));
  Assert.assertTrue(contains(ImmutableMap.of(A,Domain.singleValue(0L),B,Domain.singleValue("value")),ImmutableMap.of(B,Domain.none(String.class))));
  Assert.assertTrue(contains(ImmutableMap.of(A,Domain.singleValue(0L),B,Domain.singleValue("value")),ImmutableMap.of(A,Domain.singleValue(1L),B,Domain.none(String.class))));
  Assert.assertTrue(contains(ImmutableMap.of(B,Domain.singleValue("value")),ImmutableMap.of(A,Domain.singleValue(0L),B,Domain.singleValue("value"))));
  Assert.assertTrue(contains(ImmutableMap.of(A,Domain.all(Long.class),B,Domain.singleValue("value")),ImmutableMap.of(A,Domain.singleValue(0L),B,Domain.singleValue("value"))));
  Assert.assertFalse(contains(ImmutableMap.of(A,Domain.all(Long.class),B,Domain.singleValue("value")),ImmutableMap.of(A,Domain.singleValue(0L),B,Domain.singleValue("value2"))));
  Assert.assertTrue(contains(ImmutableMap.of(A,Domain.all(Long.class),B,Domain.singleValue("value")),ImmutableMap.of(A,Domain.singleValue(0L),B,Domain.singleValue("value2"),C,Domain.none(String.class))));
  Assert.assertFalse(contains(ImmutableMap.of(A,Domain.all(Long.class),B,Domain.singleValue("value"),C,Domain.none(String.class)),ImmutableMap.of(A,Domain.singleValue(0L),B,Domain.singleValue("value2"))));
  Assert.assertTrue(contains(ImmutableMap.of(A,Domain.all(Long.class),B,Domain.singleValue("value"),C,Domain.none(String.class)),ImmutableMap.of(A,Domain.singleValue(0L),B,Domain.none(String.class))));
}
