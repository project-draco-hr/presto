{
  Assert.assertTrue(equals(ImmutableMap.<ColumnHandle,Domain>of(),ImmutableMap.<ColumnHandle,Domain>of()));
  Assert.assertTrue(equals(ImmutableMap.<ColumnHandle,Domain>of(),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.all(Long.class))));
  Assert.assertFalse(equals(ImmutableMap.<ColumnHandle,Domain>of(),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.none(Long.class))));
  Assert.assertFalse(equals(ImmutableMap.<ColumnHandle,Domain>of(),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L))));
  Assert.assertTrue(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.all(Long.class)),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.all(Long.class))));
  Assert.assertFalse(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.all(Long.class)),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.none(Long.class))));
  Assert.assertFalse(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.all(Long.class)),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L))));
  Assert.assertTrue(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.none(Long.class)),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.none(Long.class))));
  Assert.assertFalse(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.none(Long.class)),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L))));
  Assert.assertTrue(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L)),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L))));
  Assert.assertFalse(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L)),ImmutableMap.<ColumnHandle,Domain>of(B,Domain.singleValue(0L))));
  Assert.assertFalse(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L)),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(1L))));
  Assert.assertTrue(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.all(Long.class)),ImmutableMap.<ColumnHandle,Domain>of(B,Domain.all(String.class))));
  Assert.assertTrue(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.none(Long.class)),ImmutableMap.<ColumnHandle,Domain>of(B,Domain.none(String.class))));
  Assert.assertTrue(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.none(Long.class)),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L),B,Domain.none(String.class))));
  Assert.assertFalse(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(1L)),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L),B,Domain.none(String.class))));
  Assert.assertTrue(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(1L),C,Domain.none(Double.class)),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L),B,Domain.none(String.class))));
  Assert.assertTrue(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L),B,Domain.all(Double.class)),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L),B,Domain.all(Double.class))));
  Assert.assertTrue(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L),B,Domain.all(String.class)),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L),C,Domain.all(Double.class))));
  Assert.assertFalse(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L),B,Domain.all(String.class)),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(1L),C,Domain.all(Double.class))));
  Assert.assertFalse(equals(ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L),B,Domain.all(String.class)),ImmutableMap.<ColumnHandle,Domain>of(A,Domain.singleValue(0L),C,Domain.singleValue(0.0))));
}
