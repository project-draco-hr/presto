{
  String schema=table.getTableHandle().getSchemaName();
  String tableName=table.getTableHandle().getTableName();
  String tokenExpression=table.getTokenExpression();
  List<HostAddress> addresses=new HostAddressFactory().toHostAddressList(cassandraSession.getAllHosts());
  BigInteger start=BigInteger.valueOf(Long.MIN_VALUE);
  BigInteger end=BigInteger.valueOf(Long.MAX_VALUE);
  BigInteger one=BigInteger.valueOf(1);
  BigInteger splits=BigInteger.valueOf(unpartitionedSplits);
  long delta=end.subtract(start).subtract(one).divide(splits).longValue();
  long startToken=start.longValue();
  ImmutableList.Builder<Split> builder=ImmutableList.builder();
  for (int i=0; i < unpartitionedSplits - 1; i++) {
    long endToken=startToken + delta;
    String condition=buildTokenCondition(tokenExpression,startToken,endToken);
    CassandraSplit split=new CassandraSplit(connectorId,schema,tableName,partitionId,condition,addresses);
    builder.add(split);
    startToken=endToken + 1;
  }
  String condition=buildTokenCondition(tokenExpression,startToken,end.longValue());
  CassandraSplit split=new CassandraSplit(connectorId,schema,tableName,partitionId,condition,addresses);
  builder.add(split);
  return builder.build();
}
