{
  checkNotNull(tableHandle,"tableHandle is null");
  checkNotNull(tupleDomain,"tupleDomain is null");
  CassandraTableHandle cassandraTableHandle=(CassandraTableHandle)tableHandle;
  CassandraTable table=schemaProvider.getTable(cassandraTableHandle);
  List<CassandraColumnHandle> partitionKeys=table.getPartitionKeyColumns();
  List<Comparable<?>> filterPrefix=new ArrayList<>();
  for (int i=0; i < partitionKeys.size(); i++) {
    CassandraColumnHandle columnHandle=partitionKeys.get(i);
    if (filterPrefix.size() == i && !tupleDomain.isNone()) {
      Domain domain=tupleDomain.getDomains().get(columnHandle);
      if (domain != null && domain.getRanges().getRangeCount() == 1) {
        Range range=Iterables.getOnlyElement(domain.getRanges());
        if (range.isSingleValue()) {
          Comparable<?> value=range.getLow().getValue();
          checkArgument(value instanceof Boolean || value instanceof String || value instanceof Double|| value instanceof Long,"Only Boolean, String, Double and Long partition keys are supported");
          filterPrefix.add(value);
        }
      }
    }
  }
  List<CassandraPartition> allPartitions=schemaProvider.getPartitions(table,filterPrefix);
  log.debug("%s.%s #partitions: %d",cassandraTableHandle.getSchemaName(),cassandraTableHandle.getTableName(),allPartitions.size());
  List<Partition> partitions=FluentIterable.from(allPartitions).filter(partitionMatches(tupleDomain)).filter(Partition.class).toList();
  TupleDomain<ColumnHandle> remainingTupleDomain=TupleDomain.none();
  if (!tupleDomain.isNone()) {
    @SuppressWarnings({"rawtypes","unchecked"}) List<ColumnHandle> partitionColumns=(List)partitionKeys;
    remainingTupleDomain=TupleDomain.withColumnDomains(Maps.filterKeys(tupleDomain.getDomains(),not(in(partitionColumns))));
  }
  return new PartitionResult(partitions,remainingTupleDomain);
}
