{
  ClusterMemoryPool reservedPool=pools.get(RESERVED_POOL);
  ClusterMemoryPool generalPool=pools.get(GENERAL_POOL);
  long version=memoryPoolAssignmentsVersion.incrementAndGet();
  if (reservedPool != null && generalPool != null && allAssignmentsHavePropagated(queries)) {
    if (reservedPool.getQueries() == 0 && generalPool.getBlockedNodes() > 0) {
      QueryExecution biggestQuery=null;
      long maxMemory=-1;
      for (      QueryExecution queryExecution : queries) {
        long bytesUsed=queryExecution.getTotalMemoryReservation();
        if (bytesUsed > maxMemory) {
          biggestQuery=queryExecution;
          maxMemory=bytesUsed;
        }
      }
      if (biggestQuery != null) {
        biggestQuery.setMemoryPool(new VersionedMemoryPoolId(RESERVED_POOL,version));
      }
    }
  }
  ImmutableList.Builder<MemoryPoolAssignment> assignments=ImmutableList.builder();
  for (  QueryExecution queryExecution : queries) {
    assignments.add(new MemoryPoolAssignment(queryExecution.getQueryId(),queryExecution.getMemoryPool().getId()));
  }
  return new MemoryPoolAssignmentsRequest(coordinatorId,version,assignments.build());
}
