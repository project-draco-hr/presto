{
  Preconditions.checkArgument(!files.isEmpty(),"no files in stream");
  List<Block> blocks=ImmutableList.copyOf(Iterables.concat(Iterables.transform(files,new Function<File,Iterable<? extends Block>>(){
    @Override public Iterable<? extends Block> apply(    File file){
      Slice slice=mappedFileCache.getUnchecked(file.getAbsoluteFile());
      return BlocksFileReader.readBlocks(slice);
    }
  }
)));
  long dataSize=0;
  long positionCount=0;
  for (  Block block : blocks) {
    dataSize+=block.getDataSize().toBytes();
    positionCount+=block.getPositionCount();
  }
  return BlockUtils.toBlocks(new DataSize(dataSize,BYTE),Ints.checkedCast(positionCount),blocks);
}
