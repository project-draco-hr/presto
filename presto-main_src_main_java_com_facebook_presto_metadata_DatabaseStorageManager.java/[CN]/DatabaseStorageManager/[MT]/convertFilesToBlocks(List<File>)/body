{
  Preconditions.checkArgument(!files.isEmpty(),"no files in stream");
  return BlockUtils.toBlocks(Iterables.concat(Lists.transform(files,new Function<File,Iterable<? extends Block>>(){
    private long startPosition;
    @Override public Iterable<? extends Block> apply(    File file){
      Slice slice=mappedFileCache.getUnchecked(file.getAbsolutePath());
      Blocks blocks=StatsCollectingBlocksSerde.readBlocks(slice,startPosition);
      startPosition+=StatsCollectingBlocksSerde.readStats(slice).getRowCount() + 1;
      return blocks;
    }
  }
)));
}
