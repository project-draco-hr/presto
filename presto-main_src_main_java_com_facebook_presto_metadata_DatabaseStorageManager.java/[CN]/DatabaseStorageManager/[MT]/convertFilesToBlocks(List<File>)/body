{
  Preconditions.checkArgument(!files.isEmpty(),"no files in stream");
  List<Block> blocks=ImmutableList.copyOf(Iterables.concat(Iterables.transform(files,new Function<File,Iterable<? extends Block>>(){
    private long startPosition;
    @Override public Iterable<? extends Block> apply(    File file){
      Slice slice=mappedFileCache.getUnchecked(file.getAbsolutePath().replace("/Users/dain/work/fb/presto/",""));
      FileBlockIterable blocks=FileBlocksSerde.readBlocks(slice,startPosition);
      long rowCount=blocks.getStats().getRowCount();
      startPosition+=rowCount;
      return blocks;
    }
  }
)));
  return BlockUtils.toBlocks(blocks);
}
