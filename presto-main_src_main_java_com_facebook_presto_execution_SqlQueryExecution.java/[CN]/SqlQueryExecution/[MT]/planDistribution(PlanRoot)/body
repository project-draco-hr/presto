{
  long distributedPlanningStart=System.nanoTime();
  DistributedExecutionPlanner distributedPlanner=new DistributedExecutionPlanner(splitManager);
  StageExecutionPlan outputStageExecutionPlan=distributedPlanner.plan(plan.getRoot(),stateMachine.getSession());
  stateMachine.recordDistributedPlanningTime(distributedPlanningStart);
  if (stateMachine.isDone()) {
    return;
  }
  stateMachine.setOutputFieldNames(outputStageExecutionPlan.getFieldNames());
  PartitioningHandle partitioningHandle=plan.getRoot().getFragment().getPartitioningScheme().getPartitioning().getHandle();
  OutputBuffers rootOutputBuffers=createInitialEmptyOutputBuffers(partitioningHandle).withBuffer(OUTPUT_BUFFER_ID,BROADCAST_PARTITION_ID).withNoMoreBufferIds();
  SqlQueryScheduler scheduler=new SqlQueryScheduler(stateMachine,locationFactory,outputStageExecutionPlan,nodePartitioningManager,nodeScheduler,remoteTaskFactory,stateMachine.getSession(),plan.isSummarizeTaskInfos(),scheduleSplitBatchSize,queryExecutor,rootOutputBuffers,nodeTaskMap,executionPolicy);
  queryScheduler.set(scheduler);
  if (stateMachine.isDone()) {
    scheduler.abort();
    queryScheduler.set(null);
  }
}
