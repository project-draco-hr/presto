{
  try {
    Statement statement=SqlParser.createStatement(sql);
    Analyzer analyzer=new Analyzer(session,metadata);
    AnalysisResult analysis=analyzer.analyze(statement);
    LogicalPlanner logicalPlanner=new LogicalPlanner();
    PlanNode plan=logicalPlanner.plan((Query)statement,analysis);
    SubPlan subplan=new DistributedLogicalPlanner(metadata).createSubplans(plan,analysis.getSymbolAllocator(),false);
    DistributedExecutionPlanner distributedPlanner=new DistributedExecutionPlanner(nodeManager,splitManager);
    StageExecutionPlan outputStageExecutionPlan=distributedPlanner.plan(subplan);
    fieldNames=outputStageExecutionPlan.getFieldNames();
    tupleInfos=outputStageExecutionPlan.getTupleInfos();
    StageExecution outputStage=createStage(new AtomicInteger(),outputStageExecutionPlan,ImmutableList.of(ROOT_OUTPUT_BUFFER_NAME));
    this.outputStage.set(outputStage);
    startStage(outputStage);
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw Throwables.propagate(e);
  }
}
