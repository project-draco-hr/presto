{
  Preconditions.checkState(!Thread.holdsLock(this),"Can not start while holding a lock on this");
synchronized (this) {
    Preconditions.checkState(queryState.compareAndSet(QueryState.QUEUED,QueryState.PLANNING),"Stage has already been started");
  }
  try {
    queryStats.recordAnalysisStart();
    SubPlan subplan=analyzeQuery();
    planDistribution(subplan);
synchronized (this) {
      Preconditions.checkState(queryState.compareAndSet(QueryState.PLANNING,QueryState.STARTING),"Expected query to be in state %s",QueryState.PLANNING);
    }
    SqlStageExecution stage=outputStage.get();
    if (!queryState.get().isDone()) {
      stage.addOutputBuffer(ROOT_OUTPUT_BUFFER_NAME);
      stage.noMoreOutputBuffers();
      stage.start();
    }
 else {
      stage.cancel();
    }
  }
 catch (  Exception e) {
synchronized (this) {
      failureCauses.add(e);
      queryStats.recordEnd();
      queryState.set(QueryState.FAILED);
      queryMonitor.completionEvent(getQueryInfo());
    }
    cancel();
  }
}
