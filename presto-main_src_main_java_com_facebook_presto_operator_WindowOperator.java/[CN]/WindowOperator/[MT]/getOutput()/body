{
  if (state != State.HAS_OUTPUT) {
    return null;
  }
  pageBuilder.reset();
  while (!pageBuilder.isFull()) {
    if (partition == null || !partition.hasNext()) {
      int partitionStart=partition == null ? 0 : partition.getPartitionEnd();
      if (partitionStart >= pagesIndex.getPositionCount()) {
        break;
      }
      int partitionEnd=partitionStart + 1;
      while ((partitionEnd < pagesIndex.getPositionCount()) && pagesIndex.positionEqualsPosition(partitionHashStrategy,partitionStart,partitionEnd)) {
        partitionEnd++;
      }
      partition=new WindowPartition(pagesIndex,partitionStart,partitionEnd,outputChannels,windowFunctions,frameInfo,peerGroupHashStrategy);
    }
    partition.processNextRow(pageBuilder);
  }
  if (pageBuilder.isEmpty()) {
    state=State.FINISHED;
    return null;
  }
  Page page=pageBuilder.build();
  return page;
}
