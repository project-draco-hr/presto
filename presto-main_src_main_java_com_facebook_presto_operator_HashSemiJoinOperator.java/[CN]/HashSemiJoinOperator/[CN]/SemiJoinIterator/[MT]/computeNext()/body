{
  if (channelSet == null) {
    channelSet=sourceSetSupplier.get();
  }
  if (operatorStats.isDone() || !probeIterator.hasNext()) {
    return endOfData();
  }
  Page page=probeIterator.next();
  UncompressedBlock probeJoinBlock=(UncompressedBlock)page.getBlock(probeJoinChannel);
  BlockCursor probeJoinCursor=probeJoinBlock.cursor();
  channelSet.setLookupSlice(probeJoinBlock.getSlice());
  BlockBuilder blockBuilder=new BlockBuilder(TupleInfo.SINGLE_BOOLEAN);
  for (int position=0; position < page.getPositionCount(); position++) {
    checkState(probeJoinCursor.advanceNextPosition());
    if (tupleContainsNull(probeJoinCursor)) {
      blockBuilder.appendNull();
    }
 else {
      boolean contains=channelSet.contains(probeJoinCursor);
      if (!contains && channelSet.containsNull()) {
        blockBuilder.appendNull();
      }
 else {
        blockBuilder.append(contains);
      }
    }
  }
  Block[] sourceBlocks=page.getBlocks();
  Block[] outputBlocks=new Block[sourceBlocks.length + 1];
  for (int i=0; i < sourceBlocks.length; i++) {
    outputBlocks[i]=sourceBlocks[i];
  }
  outputBlocks[sourceBlocks.length]=blockBuilder.build();
  return new Page(outputBlocks);
}
