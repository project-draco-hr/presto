{
  final Iterator<List<String>> iterator=data.iterator();
  return new RowSourceBuilder(new TupleInfo(type),new RowGenerator(){
    @Override public boolean generate(    RowSourceBuilder.RowBuilder rowBuilder){
      if (!iterator.hasNext()) {
        return false;
      }
      String value=iterator.next().get(index);
switch (type) {
case FIXED_INT_64:
        rowBuilder.append(Long.parseLong(value));
      break;
case VARIABLE_BINARY:
    rowBuilder.append(value.getBytes(Charsets.UTF_8));
  break;
default :
throw new AssertionError("unhandled type: " + type);
}
return true;
}
@Override public void close(){
}
}
);
}
