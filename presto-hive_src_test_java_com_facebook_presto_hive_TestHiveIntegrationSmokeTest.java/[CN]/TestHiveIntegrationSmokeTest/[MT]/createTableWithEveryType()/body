{
  @Language("SQL") String query="" + "CREATE TABLE test_types_table AS " + "SELECT"+ " 'foo' _varchar"+ ", cast('bar' as varbinary) _varbinary"+ ", cast(1 as bigint) _bigint"+ ", 2 _integer"+ ", CAST('3.14' AS DOUBLE) _double"+ ", true _boolean"+ ", DATE '1980-05-07' _date"+ ", TIMESTAMP '1980-05-07 11:22:33.456' _timestamp"+ ", CAST('3.14' AS DECIMAL(3,2)) _decimal_short"+ ", CAST('12345678901234567890.0123456789' AS DECIMAL(30,10)) _decimal_long"+ ", CAST('bar' AS CHAR(10)) _char";
  assertUpdate(query,1);
  MaterializedResult results=queryRunner.execute(getSession(),"SELECT * FROM test_types_table").toJdbcTypes();
  assertEquals(results.getRowCount(),1);
  MaterializedRow row=results.getMaterializedRows().get(0);
  assertEquals(row.getField(0),"foo");
  assertEquals(row.getField(1),"bar".getBytes(UTF_8));
  assertEquals(row.getField(2),1L);
  assertEquals(row.getField(3),2);
  assertEquals(row.getField(4),3.14);
  assertEquals(row.getField(5),true);
  assertEquals(row.getField(6),new Date(new DateTime(1980,5,7,0,0,0,UTC).getMillis()));
  assertEquals(row.getField(7),new Timestamp(new DateTime(1980,5,7,11,22,33,456,UTC).getMillis()));
  assertEquals(row.getField(8),new BigDecimal("3.14"));
  assertEquals(row.getField(9),new BigDecimal("12345678901234567890.0123456789"));
  assertEquals(row.getField(10),"bar       ");
  assertUpdate("DROP TABLE test_types_table");
  assertFalse(queryRunner.tableExists(getSession(),"test_types_table"));
}
