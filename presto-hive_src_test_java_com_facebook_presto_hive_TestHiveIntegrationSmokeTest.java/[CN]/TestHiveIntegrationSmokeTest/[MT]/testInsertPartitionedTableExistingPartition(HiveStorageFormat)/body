{
  String tableName="test_insert_partitioned_table_existing_partition";
  @Language("SQL") String createTable="" + "CREATE TABLE " + tableName + " "+ "("+ "  order_key BIGINT,"+ "  comment VARCHAR,"+ "  order_status VARCHAR"+ ") "+ "WITH ("+ "format = '"+ storageFormat+ "', "+ "partitioned_by = ARRAY[ 'order_status' ]"+ ") ";
  assertUpdate(createTable);
  TableMetadata tableMetadata=getTableMetadata(catalog,TPCH_SCHEMA,tableName);
  assertEquals(tableMetadata.getMetadata().getProperties().get(STORAGE_FORMAT_PROPERTY),storageFormat);
  assertEquals(tableMetadata.getMetadata().getProperties().get(PARTITIONED_BY_PROPERTY),ImmutableList.of("order_status"));
  for (int i=0; i < 3; i++) {
    assertUpdate(format("INSERT INTO " + tableName + " "+ "SELECT orderkey, comment, orderstatus "+ "FROM tpch.tiny.orders "+ "WHERE orderkey %% 3 = %d",i),format("SELECT count(*) from orders where orderkey %% 3 = %d",i));
  }
  List<?> partitions=getPartitions(tableName);
  assertEquals(partitions.size(),3);
  assertQuery("SELECT * from " + tableName,"SELECT orderkey, comment, orderstatus FROM orders");
  assertUpdate("DROP TABLE " + tableName);
  assertFalse(queryRunner.tableExists(getSession(),tableName));
}
