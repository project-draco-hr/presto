{
  ImmutableList.Builder<PlanOptimizer> builder=ImmutableList.builder();
  builder.add(new ImplementSampleAsFilter(),new CanonicalizeExpressions(),new SimplifyExpressions(metadata,sqlParser),new UnaliasSymbolReferences(),new PruneRedundantProjections(),new SetFlatteningOptimizer(),new LimitPushDown(),new PredicatePushDown(metadata,sqlParser,splitManager),new PredicatePushDown(metadata,sqlParser,splitManager),new MergeProjections(),new SimplifyExpressions(metadata,sqlParser),new UnaliasSymbolReferences(),new IndexJoinOptimizer(indexManager),new CountConstantOptimizer(),new WindowFilterPushDown(),new HashGenerationOptimizer(featuresConfig.isOptimizeHashGeneration()),new MergeProjections(),new PruneUnreferencedOutputs(),new PruneRedundantProjections());
  if (featuresConfig.isOptimizeMetadataQueries()) {
    builder.add(new MetadataQueryOptimizer(metadata,splitManager));
  }
  builder.add(new BeginTableWrite(metadata));
  this.optimizers=builder.build();
}
