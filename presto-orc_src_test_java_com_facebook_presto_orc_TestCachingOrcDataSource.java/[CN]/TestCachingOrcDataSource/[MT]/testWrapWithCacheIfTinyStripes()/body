{
  DataSize maxMergeDistance=new DataSize(1,Unit.MEGABYTE);
  DataSize maxReadSize=new DataSize(8,Unit.MEGABYTE);
  OrcDataSource actual=wrapWithCacheIfTinyStripes(FakeOrcDataSource.INSTANCE,ImmutableList.of(),maxMergeDistance,maxReadSize);
  assertInstanceOf(actual,CachingOrcDataSource.class);
  actual=wrapWithCacheIfTinyStripes(FakeOrcDataSource.INSTANCE,ImmutableList.of(new StripeInformation(123,3,10,10,10)),maxMergeDistance,maxReadSize);
  assertInstanceOf(actual,CachingOrcDataSource.class);
  actual=wrapWithCacheIfTinyStripes(FakeOrcDataSource.INSTANCE,ImmutableList.of(new StripeInformation(123,3,10,10,10),new StripeInformation(123,33,10,10,10),new StripeInformation(123,63,10,10,10)),maxMergeDistance,maxReadSize);
  assertInstanceOf(actual,CachingOrcDataSource.class);
  actual=wrapWithCacheIfTinyStripes(FakeOrcDataSource.INSTANCE,ImmutableList.of(new StripeInformation(123,3,10,10,10),new StripeInformation(123,33,10,10,10),new StripeInformation(123,63,1048576 * 8 - 20,10,10)),maxMergeDistance,maxReadSize);
  assertInstanceOf(actual,CachingOrcDataSource.class);
  actual=wrapWithCacheIfTinyStripes(FakeOrcDataSource.INSTANCE,ImmutableList.of(new StripeInformation(123,3,10,10,10),new StripeInformation(123,33,10,10,10),new StripeInformation(123,63,1048576 * 8 - 20 + 1,10,10)),maxMergeDistance,maxReadSize);
  assertNotInstanceOf(actual,CachingOrcDataSource.class);
}
