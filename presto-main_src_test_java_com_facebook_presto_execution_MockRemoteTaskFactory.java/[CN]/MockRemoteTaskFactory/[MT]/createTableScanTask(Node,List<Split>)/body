{
  TaskId taskId=new TaskId(new StageId("test","1"),"1");
  Symbol symbol=new Symbol("column");
  PlanNodeId tableScanNodeId=new PlanNodeId("test");
  PlanNodeId sourceId=new PlanNodeId("sourceId");
  PlanFragment testFragment=new PlanFragment(new PlanFragmentId("test"),new TableScanNode(new PlanNodeId("test"),new TableHandle("test",new TestingTableHandle()),ImmutableList.of(symbol),ImmutableMap.of(symbol,new TestingColumnHandle("column")),Optional.empty(),TupleDomain.all(),null),ImmutableMap.<Symbol,Type>of(symbol,VARCHAR),ImmutableList.of(symbol),PlanFragment.PlanDistribution.SOURCE,tableScanNodeId,PlanFragment.OutputPartitioning.NONE,Optional.empty(),Optional.empty(),Optional.empty());
  ImmutableMultimap.Builder<PlanNodeId,Split> initialSplits=ImmutableMultimap.builder();
  for (  Split sourceSplit : splits) {
    initialSplits.put(sourceId,sourceSplit);
  }
  return createRemoteTask(TEST_SESSION,taskId,newNode,testFragment,initialSplits.build(),OutputBuffers.INITIAL_EMPTY_OUTPUT_BUFFERS);
}
