{
  Signature mapVariadicBoundFunction=functionSignature().returnType("bigint").argumentTypes("T").typeVariableConstraints(ImmutableList.of(withVariadicBound("T","map"))).build();
  assertThat(mapVariadicBoundFunction).boundTo("map(bigint,bigint)").produces(new BoundVariables(ImmutableMap.of("T",type("map(bigint,bigint)")),ImmutableMap.of()));
  assertThat(mapVariadicBoundFunction).boundTo("array(bigint)").fails();
  assertThat(mapVariadicBoundFunction).boundTo("array(bigint)").withCoercion().fails();
  Signature decimalVariadicBoundFunction=functionSignature().returnType("bigint").argumentTypes("T").typeVariableConstraints(ImmutableList.of(withVariadicBound("T","decimal"))).build();
  assertThat(decimalVariadicBoundFunction).boundTo("decimal(2,1)").produces(new BoundVariables(ImmutableMap.of("T",type("decimal(2,1)")),ImmutableMap.of()));
  assertThat(decimalVariadicBoundFunction).boundTo("bigint").fails();
}
