{
  Set<String> literalParameters=ImmutableSet.of("p1","p2","p3","s");
  TypeSignature leftType=parseTypeSignature("decimal(p1,s)",literalParameters);
  TypeSignature rightType=parseTypeSignature("decimal(p2,s)",literalParameters);
  TypeSignature returnType=parseTypeSignature("decimal(p3,s)",literalParameters);
  Signature function=functionSignature().returnType(returnType).argumentTypes(leftType,rightType).longVariableConstraints(longVariableExpression("p3","p1 + p2")).build();
  assertThat(function).boundTo("decimal(2,1)","decimal(3,1)").produces(new BoundVariables(ImmutableMap.of(),ImmutableMap.of("p1",2L,"p2",3L,"p3",5L,"s",1L)));
}
