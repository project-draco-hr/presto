{
  checkNotNull(query,"query is null");
  Preconditions.checkArgument(!query.isEmpty(),"query must not be empty string");
  QueryId queryId=queryIdGenerator.createNextQueryId();
  Statement statement;
  try {
    statement=sqlParser.createStatement(query);
  }
 catch (  ParsingException e) {
    return createFailedQuery(session,query,queryId,e);
  }
  QueryExecutionFactory<?> queryExecutionFactory=executionFactories.get(statement.getClass());
  Preconditions.checkState(queryExecutionFactory != null,"Unsupported statement type %s",statement.getClass().getName());
  final QueryExecution queryExecution=queryExecutionFactory.createQueryExecution(queryId,query,session,statement);
  queryMonitor.createdEvent(queryExecution.getQueryInfo());
  queryExecution.addStateChangeListener(new StateChangeListener<QueryState>(){
    @Override public void stateChanged(    QueryState newValue){
      if (newValue.isDone()) {
        QueryInfo info=queryExecution.getQueryInfo();
        stats.queryFinished(info);
        queryMonitor.completionEvent(info);
      }
    }
  }
);
  queries.put(queryId,queryExecution);
  if (!queryStarter.submit(queryExecution)) {
    return createFailedQuery(session,query,queryId,new PrestoException(QUERY_QUEUE_FULL,"Too many queued queries!"));
  }
  return queryExecution.getQueryInfo();
}
