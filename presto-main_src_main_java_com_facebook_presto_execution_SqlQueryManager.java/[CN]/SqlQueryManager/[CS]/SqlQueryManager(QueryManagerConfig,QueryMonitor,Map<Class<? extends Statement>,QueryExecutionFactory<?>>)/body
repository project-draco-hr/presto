{
  checkNotNull(config,"config is null");
  this.executionFactories=checkNotNull(executionFactories,"executionFactories is null");
  this.queryExecutor=Executors.newCachedThreadPool(threadsNamed("query-scheduler-%d"));
  this.queryMonitor=checkNotNull(queryMonitor,"queryMonitor is null");
  this.maxQueryAge=config.getMaxQueryAge();
  this.clientTimeout=config.getClientTimeout();
  queryManagementExecutor=Executors.newScheduledThreadPool(100,threadsNamed("query-management-%d"));
  queryManagementExecutor.scheduleAtFixedRate(new Runnable(){
    @Override public void run(){
      for (      QueryExecution queryExecution : queries.values()) {
        try {
          queryExecution.updateState(false);
        }
 catch (        Throwable e) {
          log.warn(e,"Error updating state for query %s",queryExecution.getQueryInfo().getQueryId());
        }
      }
    }
  }
,200,200,TimeUnit.MILLISECONDS);
  queryManagementExecutor.scheduleAtFixedRate(new Runnable(){
    @Override public void run(){
      try {
        removeExpiredQueries();
      }
 catch (      Throwable e) {
        log.warn(e,"Error removing old queries");
      }
      try {
        failAbandonedQueries();
      }
 catch (      Throwable e) {
        log.warn(e,"Error removing old queries");
      }
    }
  }
,200,200,TimeUnit.MILLISECONDS);
}
