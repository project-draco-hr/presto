{
  OptionalLong left=visit(ctx.left);
  OptionalLong right=visit(ctx.right);
  if (!left.isPresent() || !right.isPresent()) {
    return OptionalLong.empty();
  }
switch (ctx.operator.getType()) {
case PLUS:
    return OptionalLong.of(left.getAsLong() + right.getAsLong());
case MINUS:
  return OptionalLong.of(left.getAsLong() - right.getAsLong());
case ASTERISK:
return OptionalLong.of(left.getAsLong() * right.getAsLong());
case SLASH:
return OptionalLong.of(left.getAsLong() / right.getAsLong());
default :
throw new IllegalStateException("Unsupported binary operator " + ctx.operator.getText());
}
}
