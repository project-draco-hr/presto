{
  String createTableSql=format("" + "CREATE TABLE %s.%s.%s (\n" + "   c1 bigint,\n"+ "   c2 double,\n"+ "   \"c 3\" varchar,\n"+ "   \"c'4\" array(bigint),\n"+ "   c5 map(bigint, varchar)\n"+ ")",getSession().getCatalog().get(),getSession().getSchema().get(),"test_show_create_table");
  assertUpdate(createTableSql);
  MaterializedResult actualResult=computeActual("SHOW CREATE TABLE test_show_create_table");
  assertEquals(getOnlyElement(actualResult.getOnlyColumnAsSet()),createTableSql);
  actualResult=computeActual("SHOW CREATE TABLE " + getSession().getSchema().get() + ".test_show_create_table");
  assertEquals(getOnlyElement(actualResult.getOnlyColumnAsSet()),createTableSql);
  actualResult=computeActual("SHOW CREATE TABLE " + getSession().getCatalog().get() + "."+ getSession().getSchema().get()+ ".test_show_create_table");
  assertEquals(getOnlyElement(actualResult.getOnlyColumnAsSet()),createTableSql);
  createTableSql=format("" + "CREATE TABLE %s.%s.%s (\n" + "   \"c\"\"1\" bigint,\n"+ "   c2 double,\n"+ "   \"c 3\" varchar,\n"+ "   \"c'4\" array(bigint),\n"+ "   c5 map(bigint, varchar)\n"+ ")",getSession().getCatalog().get(),getSession().getSchema().get(),"\"test_show_create_table\"\"2\"");
  assertUpdate(createTableSql);
  actualResult=computeActual("SHOW CREATE TABLE \"test_show_create_table\"\"2\"");
  assertEquals(getOnlyElement(actualResult.getOnlyColumnAsSet()),createTableSql);
}
