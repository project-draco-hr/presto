{
  TaskMemoryManager taskMemoryManager=new TaskMemoryManager(new DataSize(256,MEGABYTE));
  OperatorStats operatorStats=new OperatorStats();
  NewOperator buildOperator=new StaticOperator(rowPagesBuilder(SINGLE_VARBINARY).row("a").row((String)null).row((String)null).row("a").row("b").build());
  NewHashSupplier hashSupplier=new NewHashSupplier(buildOperator.getTupleInfos());
  NewHashBuilderOperator sourceHashProvider=new NewHashBuilderOperator(hashSupplier,0,10,taskMemoryManager);
  Driver driver=new Driver(operatorStats,buildOperator,sourceHashProvider);
  while (!driver.isFinished()) {
    driver.process();
  }
  List<Page> probeInput=rowPagesBuilder(SINGLE_VARBINARY).row("a").row("b").row((String)null).row("c").build();
  NewHashJoinOperatorFactory joinOperatorFactory=NewHashJoinOperator.outerJoin(hashSupplier,ImmutableList.of(SINGLE_VARBINARY),0);
  NewOperator joinOperator=joinOperatorFactory.createOperator(operatorStats,taskMemoryManager);
  MaterializedResult expected=resultBuilder(new TupleInfo(VARIABLE_BINARY,VARIABLE_BINARY)).row("a","a").row("a","a").row("b","b").row(null,null).row("c",null).build();
  assertOperatorEquals(joinOperator,probeInput,expected);
}
