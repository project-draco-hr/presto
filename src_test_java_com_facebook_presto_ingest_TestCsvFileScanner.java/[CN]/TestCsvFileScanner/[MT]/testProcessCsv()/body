{
  TupleInfo tupleInfo=new TupleInfo(FIXED_INT_64,VARIABLE_BINARY,VARIABLE_BINARY);
  CsvReader csvReader=new CsvReader(tupleInfo,inputSupplier,',',ImmutableList.of(csvNumericColumn(),csvStringColumn(),csvStringColumn()));
  try (RowSource rowSource0=csvReader.getInput();RowSource rowSource1=csvReader.getInput();RowSource rowSource2=csvReader.getInput()){
    List<CollectingColumnProcessor> processors=ImmutableList.of(new CollectingColumnProcessor(FIXED_INT_64,0,rowSource0.cursor()),new CollectingColumnProcessor(VARIABLE_BINARY,1,rowSource1.cursor()),new CollectingColumnProcessor(VARIABLE_BINARY,2,rowSource2.cursor()));
    ColumnProcessors.process(processors,2);
    for (    CollectingColumnProcessor processor : processors) {
      processor.finish();
    }
    assertTupleStreamEquals(processors.get(0).getTupleStream(),Blocks.createLongsTupleStream(0,0,1,2,3));
    assertTupleStreamEquals(processors.get(1).getTupleStream(),Blocks.createTupleStream(0,"apple","banana","cherry","date"));
    assertTupleStreamEquals(processors.get(2).getTupleStream(),Blocks.createTupleStream(0,"alice","bob","charlie","dave"));
  }
 }
