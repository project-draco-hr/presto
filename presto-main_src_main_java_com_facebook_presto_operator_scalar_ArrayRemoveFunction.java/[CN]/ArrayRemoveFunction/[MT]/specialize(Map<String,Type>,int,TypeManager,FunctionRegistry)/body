{
  checkArgument(types.size() == 1,format("%s expects only one argument",FUNCTION_NAME));
  Type type=types.get("E");
  TypeSignature valueType=type.getTypeSignature();
  TypeSignature arrayType=parameterizedTypeName(StandardTypes.ARRAY,valueType);
  MethodHandle equalsFunction=functionRegistry.resolveOperator(EQUAL,ImmutableList.of(type,type)).getMethodHandle();
  MethodHandle baseMethodHandle=methodHandle(ArrayRemoveFunction.class,"remove",MethodHandle.class,Type.class,Slice.class,type.getJavaType());
  MethodHandle methodHandle=baseMethodHandle.bindTo(equalsFunction).bindTo(type);
  Signature signature=new Signature(FUNCTION_NAME,arrayType,arrayType,valueType);
  return new FunctionInfo(signature,getDescription(),isHidden(),methodHandle,isDeterministic(),false,ImmutableList.of(false,false));
}
