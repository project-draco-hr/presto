{
  byte[] json="{\"a_number\":481516,\"a_string\":\"2342\"}".getBytes(StandardCharsets.UTF_8);
  JsonRowDecoder rowDecoder=new JsonRowDecoder(PROVIDER.get());
  DecoderTestColumnHandle row1=new DecoderTestColumnHandle("",0,"row1",createVarcharType(100),"a_number",null,null,false,false,false);
  DecoderTestColumnHandle row2=new DecoderTestColumnHandle("",1,"row2",BigintType.BIGINT,"a_number",null,null,false,false,false);
  DecoderTestColumnHandle row3=new DecoderTestColumnHandle("",2,"row3",createVarcharType(100),"a_string",null,null,false,false,false);
  DecoderTestColumnHandle row4=new DecoderTestColumnHandle("",3,"row4",BigintType.BIGINT,"a_string",null,null,false,false,false);
  List<DecoderColumnHandle> columns=ImmutableList.of(row1,row2,row3,row4);
  Set<FieldValueProvider> providers=new HashSet<>();
  boolean corrupt=rowDecoder.decodeRow(json,null,providers,columns,buildMap(columns));
  assertFalse(corrupt);
  assertEquals(providers.size(),columns.size());
  checkValue(providers,row1,"481516");
  checkValue(providers,row2,481516);
  checkValue(providers,row3,"2342");
  checkValue(providers,row4,2342);
}
