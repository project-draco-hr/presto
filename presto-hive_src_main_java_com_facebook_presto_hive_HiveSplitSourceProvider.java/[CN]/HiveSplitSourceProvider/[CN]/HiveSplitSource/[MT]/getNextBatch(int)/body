{
  List<Split> splits=new ArrayList<>(maxSize);
  splits.add(queue.take());
  queue.drainTo(splits,maxSize - 1);
  int finishedIndex=splits.indexOf(FINISHED_MARKER);
  if (finishedIndex >= 0) {
    queue.add(FINISHED_MARKER);
    splits=splits.subList(0,finishedIndex);
  }
  if (throwable.get() != null) {
    throw Throwables.propagate(throwable.get());
  }
  if (outstandingSplitCount.addAndGet(-splits.size()) < maxOutstandingSplits) {
    suspendingExecutor.resume();
  }
  return splits;
}
