{
  try {
    List<Split> splits=new ArrayList<>(maxSize);
    splits.add(queue.take());
    queue.drainTo(splits,maxSize - 1);
    if (splits.get(splits.size() - 1) == FINISHED_MARKER) {
      queue.add(FINISHED_MARKER);
      splits.remove(splits.size() - 1);
      if (throwable.get() != null) {
        throw Throwables.propagate(throwable.get());
      }
    }
    if (outstandingSplitCount.getAndDecrement() == maxOutstandingSplits) {
      suspendingExecutor.resume();
    }
    return splits;
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
    throw Throwables.propagate(e);
  }
}
