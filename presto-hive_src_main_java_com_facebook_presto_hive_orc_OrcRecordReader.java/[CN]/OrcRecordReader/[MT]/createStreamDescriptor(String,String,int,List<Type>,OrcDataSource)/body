{
  Type type=types.get(typeId);
  if (!fieldName.isEmpty()) {
    parentStreamName+="." + fieldName;
  }
  ImmutableList.Builder<StreamDescriptor> nestedStreams=ImmutableList.builder();
  if (type.getKind() == Kind.STRUCT) {
    for (int i=0; i < type.getFieldNamesCount(); ++i) {
      nestedStreams.add(createStreamDescriptor(parentStreamName,type.getFieldNames(i),type.getSubtypes(i),types,dataSource));
    }
  }
 else   if (type.getKind() == Kind.LIST) {
    nestedStreams.add(createStreamDescriptor(parentStreamName,"item",type.getSubtypes(0),types,dataSource));
  }
 else   if (type.getKind() == Kind.MAP) {
    nestedStreams.add(createStreamDescriptor(parentStreamName,"key",type.getSubtypes(0),types,dataSource));
    nestedStreams.add(createStreamDescriptor(parentStreamName,"value",type.getSubtypes(1),types,dataSource));
  }
  return new StreamDescriptor(parentStreamName,typeId,fieldName,type.getKind(),dataSource,nestedStreams.build());
}
