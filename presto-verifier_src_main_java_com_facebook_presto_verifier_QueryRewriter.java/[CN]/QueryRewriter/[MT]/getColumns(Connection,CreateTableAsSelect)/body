{
  com.facebook.presto.sql.tree.Query createSelectClause=createTableAsSelect.getQuery();
  QueryBody innerQuery=createSelectClause.getQueryBody();
  com.facebook.presto.sql.tree.Query zeroRowsQuery;
  if (innerQuery instanceof QuerySpecification) {
    QuerySpecification querySpecification=(QuerySpecification)innerQuery;
    innerQuery=new QuerySpecification(querySpecification.getSelect(),querySpecification.getFrom(),querySpecification.getWhere(),querySpecification.getGroupBy(),querySpecification.getHaving(),querySpecification.getOrderBy(),Optional.of("0"));
    zeroRowsQuery=new com.facebook.presto.sql.tree.Query(createSelectClause.getWith(),innerQuery,ImmutableList.of(),Optional.empty(),createSelectClause.getApproximate());
  }
 else {
    zeroRowsQuery=new com.facebook.presto.sql.tree.Query(createSelectClause.getWith(),innerQuery,ImmutableList.of(),Optional.of("0"),createSelectClause.getApproximate());
  }
  ImmutableList.Builder<Column> columns=ImmutableList.builder();
  try (java.sql.Statement jdbcStatement=connection.createStatement()){
    TimeLimiter limiter=new SimpleTimeLimiter();
    java.sql.Statement limitedStatement=limiter.newProxy(jdbcStatement,java.sql.Statement.class,timeout.toMillis(),TimeUnit.MILLISECONDS);
    try (ResultSet resultSet=limitedStatement.executeQuery(formatSql(zeroRowsQuery,Optional.empty()))){
      ResultSetMetaData metaData=resultSet.getMetaData();
      for (int i=1; i <= metaData.getColumnCount(); i++) {
        String name=metaData.getColumnName(i);
        int type=metaData.getColumnType(i);
        columns.add(new Column(name,APPROXIMATE_TYPES.contains(type)));
      }
    }
   }
   return columns.build();
}
