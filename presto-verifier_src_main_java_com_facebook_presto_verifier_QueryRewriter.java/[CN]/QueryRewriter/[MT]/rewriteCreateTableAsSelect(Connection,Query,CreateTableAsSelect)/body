{
  List<String> parts=new ArrayList<>();
  int originalSize=statement.getName().getOriginalParts().size();
  int prefixSize=rewritePrefix.getOriginalParts().size();
  if (originalSize > prefixSize) {
    parts.addAll(statement.getName().getOriginalParts().subList(0,originalSize - prefixSize));
  }
  parts.addAll(rewritePrefix.getOriginalParts());
  parts.set(parts.size() - 1,createTemporaryTableName());
  QualifiedName temporaryTableName=QualifiedName.of(parts);
  Statement rewritten=new CreateTableAsSelect(temporaryTableName,statement.getQuery(),statement.isNotExists(),statement.getProperties(),statement.isWithData());
  String createTableAsSql=formatSql(rewritten,Optional.empty());
  String checksumSql=checksumSql(getColumns(connection,statement),temporaryTableName);
  String dropTableSql=dropTableSql(temporaryTableName);
  return new Query(query.getCatalog(),query.getSchema(),ImmutableList.of(createTableAsSql),checksumSql,ImmutableList.of(dropTableSql),query.getUsername(),query.getPassword(),query.getSessionProperties());
}
