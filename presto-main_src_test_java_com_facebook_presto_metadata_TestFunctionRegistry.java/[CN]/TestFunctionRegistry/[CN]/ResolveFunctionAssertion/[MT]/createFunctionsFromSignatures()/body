{
  ImmutableList.Builder<SqlFunction> functions=ImmutableList.builder();
  for (  SignatureBuilder functionSignature : functionSignatures) {
    Signature signature=functionSignature.name(TEST_FUNCTION_NAME).build();
    functions.add(new SqlScalarFunction(signature){
      @Override public ScalarFunctionImplementation specialize(      BoundVariables boundVariables,      int arity,      TypeManager typeManager,      FunctionRegistry functionRegistry){
        return new ScalarFunctionImplementation(false,Collections.nCopies(arity,Boolean.FALSE),MethodHandles.identity(Void.class),true);
      }
      @Override public boolean isHidden(){
        return false;
      }
      @Override public boolean isDeterministic(){
        return false;
      }
      @Override public String getDescription(){
        return "testing function that does nothing";
      }
    }
);
  }
  return functions.build();
}
