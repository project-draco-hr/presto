{
  List<FunctionInfo> functions=new FunctionListBuilder(new TypeRegistry()).scalar(CustomFunctions.class).getFunctions();
  functions=FluentIterable.from(functions).filter(new Predicate<FunctionInfo>(){
    @Override public boolean apply(    FunctionInfo input){
      return input.getName().toString().equals("custom_add");
    }
  }
).toList();
  FunctionRegistry registry=new FunctionRegistry(new TypeRegistry(),true);
  registry.addFunctions(functions,ImmutableMultimap.<OperatorType,FunctionInfo>of());
  registry.addFunctions(functions,ImmutableMultimap.<OperatorType,FunctionInfo>of());
}
