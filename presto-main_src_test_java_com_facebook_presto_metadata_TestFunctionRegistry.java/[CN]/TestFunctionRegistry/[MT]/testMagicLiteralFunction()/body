{
  Signature signature=getMagicLiteralFunctionSignature(TIMESTAMP_WITH_TIME_ZONE);
  assertEquals(signature.getName(),"$literal$timestamp with time zone");
  assertEquals(signature.getArgumentTypes(),ImmutableList.of(parseTypeSignature(StandardTypes.BIGINT)));
  assertEquals(signature.getReturnType().getBase(),StandardTypes.TIMESTAMP_WITH_TIME_ZONE);
  TypeRegistry typeManager=new TypeRegistry();
  FunctionRegistry registry=new FunctionRegistry(typeManager,new BlockEncodingManager(typeManager),true);
  FunctionInfo function=registry.resolveFunction(QualifiedName.of(signature.getName()),signature.getArgumentTypes(),false);
  assertEquals(function.getArgumentTypes(),ImmutableList.of(parseTypeSignature(StandardTypes.BIGINT)));
  assertEquals(signature.getReturnType().getBase(),StandardTypes.TIMESTAMP_WITH_TIME_ZONE);
}
