{
  Set<Encoding> required=ImmutableSet.of(BIT_PACKED);
  Set<Encoding> optional=ImmutableSet.of(BIT_PACKED,RLE);
  Set<Encoding> repeated=ImmutableSet.of(RLE);
  Set<Encoding> notDictionary=ImmutableSet.of(PLAIN);
  Set<Encoding> mixedDictionary=ImmutableSet.of(PLAIN_DICTIONARY,PLAIN);
  Set<Encoding> dictionary=ImmutableSet.of(PLAIN_DICTIONARY);
  assertFalse(isOnlyDictionaryEncodingPages(union(required,notDictionary)),"required notDictionary");
  assertFalse(isOnlyDictionaryEncodingPages(union(optional,notDictionary)),"optional notDictionary");
  assertFalse(isOnlyDictionaryEncodingPages(union(repeated,notDictionary)),"repeated notDictionary");
  assertFalse(isOnlyDictionaryEncodingPages(union(required,mixedDictionary)),"required mixedDictionary");
  assertFalse(isOnlyDictionaryEncodingPages(union(optional,mixedDictionary)),"optional mixedDictionary");
  assertFalse(isOnlyDictionaryEncodingPages(union(repeated,mixedDictionary)),"repeated mixedDictionary");
  assertTrue(isOnlyDictionaryEncodingPages(union(required,dictionary)),"required dictionary");
  assertTrue(isOnlyDictionaryEncodingPages(union(optional,dictionary)),"optional dictionary");
  assertTrue(isOnlyDictionaryEncodingPages(union(repeated,dictionary)),"repeated dictionary");
}
